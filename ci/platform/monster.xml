<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Ability" tests="5" time="10.658535601" failures="0" errors="0" skipped="0">
  <testcase name="Ability should only let the owner, host_callers, and admins edit a listing" time="2.004181508">
  </testcase>
  <testcase name="Ability should only let guests add_guests and hosts do a host_cancel" time="2.045660671">
  </testcase>
  <testcase name="Ability should only let photographers upload photos to their own jobs" time="3.216963088">
  </testcase>
  <testcase name="Ability should honor hosting visibility settings for logged in users" time="2.610750829">
  </testcase>
  <testcase name="Ability should show hostings with VISIBILITY_WORLD to visitors who are not logged in" time="0.780015724">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AboutPresenter#hero_slides" tests="2" time="5.192359546" failures="0" errors="0" skipped="0">
  <testcase name="AboutPresenter#hero_slides should include the price of the listings" time="2.609747832">
  </testcase>
  <testcase name="AboutPresenter#hero_slides should include the user thumbnail" time="2.58215283">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AboutPresenter#media_resource_asset_locale" tests="2" time="0.912070741" failures="0" errors="0" skipped="0">
  <testcase name="AboutPresenter#media_resource_asset_locale should return the full_locale if it is supported" time="0.461814639">
  </testcase>
  <testcase name="AboutPresenter#media_resource_asset_locale should default to :en" time="0.449702585">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AboutPresenter#press_content_pages" tests="1" time="0.579299969" failures="0" errors="0" skipped="0">
  <testcase name="AboutPresenter#press_content_pages should return the total number of pages of content for given content_type and locale" time="0.578984774">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AboutPresenter" tests="0" time="0.000208407" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ActionView::Helpers::JavaScriptHelper escape_javascript" tests="1" time="0.385866987" failures="0" errors="0" skipped="0">
  <testcase name="ActionView::Helpers::JavaScriptHelper escape_javascript should not barf" time="0.385430927">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ActionView::Helpers::JavaScriptHelper" tests="0" time="0.000224005" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ActiveRecord::WriteFallback with fallbacks with an existing object" tests="1" time="0.418024275" failures="0" errors="0" skipped="0">
  <testcase name="ActiveRecord::WriteFallback with fallbacks with an existing object should fail to update without exception" time="0.417553776">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ActiveRecord::WriteFallback with fallbacks" tests="3" time="1.208145306" failures="0" errors="0" skipped="0">
  <testcase name="ActiveRecord::WriteFallback with fallbacks should create normally" time="0.422868325">
  </testcase>
  <testcase name="ActiveRecord::WriteFallback with fallbacks should fail to create without exception" time="0.421047082">
  </testcase>
  <testcase name="ActiveRecord::WriteFallback with fallbacks should work for arbitrary code" time="0.363637195">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ActiveRecord::WriteFallback without fallbacks" tests="2" time="0.876485255" failures="0" errors="0" skipped="0">
  <testcase name="ActiveRecord::WriteFallback without fallbacks should work normally" time="0.454015235">
  </testcase>
  <testcase name="ActiveRecord::WriteFallback without fallbacks should fail normally" time="0.422026233">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ActiveRecord::WriteFallback" tests="0" time="0.000221011" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #approve" tests="2" time="2.637700409" failures="0" errors="0" skipped="0">
  <testcase name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #approve resets state of review" time="1.128465972">
  </testcase>
  <testcase name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #approve approves, adds admin flag, and redirects" time="1.508745286">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #background_report when logged in as admin" tests="1" time="1.507783871" failures="0" errors="0" skipped="0">
  <testcase name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #background_report when logged in as admin redirects upon entering page" time="1.50740659">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #background_report when logged in as tns admin" tests="2" time="2.831139166" failures="0" errors="0" skipped="0">
  <testcase name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #background_report when logged in as tns admin renders 404 with invalid background report" time="1.22131801">
  </testcase>
  <testcase name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #background_report when logged in as tns admin renders report successfully with valid background check review" time="1.609219881">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #background_report when logged in as user" tests="1" time="0.764930922" failures="0" errors="0" skipped="0">
  <testcase name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #background_report when logged in as user redirects upon entering page" time="0.764537646">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #background_report" tests="0" time="0.000233614" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #deny" tests="2" time="2.832285233" failures="0" errors="0" skipped="0">
  <testcase name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #deny resets state of review" time="1.588532739">
  </testcase>
  <testcase name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #deny denies, applies status_reason, adds admin flag, and redirects" time="1.243289728">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #index when logged in as admin" tests="1" time="1.493631989" failures="0" errors="0" skipped="0">
  <testcase name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #index when logged in as admin redirects upon entering page" time="1.493240716">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #index when logged in as tns admin" tests="1" time="2.149896194" failures="0" errors="0" skipped="0">
  <testcase name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #index when logged in as tns admin responds successfully" time="2.149495209">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #index when logged in as user" tests="1" time="3.569313073" failures="0" errors="0" skipped="0">
  <testcase name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #index when logged in as user shows queue only to tns admins" time="3.568869538">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #index" tests="0" time="0.000172156" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #require_additional_verification" tests="3" time="4.244440533" failures="0" errors="0" skipped="0">
  <testcase name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #require_additional_verification resets state of review" time="1.521521777">
  </testcase>
  <testcase name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #require_additional_verification requires additional verification and redirects" time="1.228333973">
  </testcase>
  <testcase name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue #require_additional_verification ghosts the user" time="1.493861861">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::BackgroundCheckReviewsController when performing actions on background check review queue" tests="0" time="0.000162784" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::BackgroundCheckReviewsController" tests="0" time="0.009107182" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::ChargebackUploadsController should allow admins to upload reports processing american express uploads" tests="3" time="13.079590797" failures="0" errors="0" skipped="0">
  <testcase name="Admin::ChargebackUploadsController should allow admins to upload reports processing american express uploads should correctly identify a braintree blue payment" time="4.43331297">
  </testcase>
  <testcase name="Admin::ChargebackUploadsController should allow admins to upload reports processing american express uploads should correctly identify a braintree orange payment" time="4.082209638">
  </testcase>
  <testcase name="Admin::ChargebackUploadsController should allow admins to upload reports processing american express uploads should correctly identify a braintree blue record with trailing chars" time="4.563267113">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::ChargebackUploadsController should allow admins to upload reports" tests="6" time="19.187202942" failures="0" errors="0" skipped="0">
  <testcase name="Admin::ChargebackUploadsController should allow admins to upload reports should be hidden unless you're an admin" time="3.192253391">
  </testcase>
  <testcase name="Admin::ChargebackUploadsController should allow admins to upload reports should let you upload forms for all our processors" time="7.00057202">
  </testcase>
  <testcase name="Admin::ChargebackUploadsController should allow admins to upload reports should only email the user once even if uploaded multiple times" time="2.369371445">
  </testcase>
  <testcase name="Admin::ChargebackUploadsController should allow admins to upload reports should not email for payments less than $10" time="2.182108609">
  </testcase>
  <testcase name="Admin::ChargebackUploadsController should allow admins to upload reports should not email for payments linked to canceled reservations" time="2.192177882">
  </testcase>
  <testcase name="Admin::ChargebackUploadsController should allow admins to upload reports should set chargebacks to never_responded after 3 weeks" time="2.249812566">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::ChargebackUploadsController" tests="0" time="0.000257957" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::CollectionsController GET 'index'" tests="1" time="3.499789457" failures="0" errors="0" skipped="0">
  <testcase name="Admin::CollectionsController GET 'index' returns http success" time="3.499324295">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::CollectionsController" tests="0" time="0.009006924" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::FraudReviewsController Requiring Additional Verification" tests="6" time="18.688302984" failures="0" errors="0" skipped="0">
  <testcase name="Admin::FraudReviewsController Requiring Additional Verification should only show fraud reviews to admins" time="3.296930827">
  </testcase>
  <testcase name="Admin::FraudReviewsController Requiring Additional Verification should notify guest and host by email when additional verification is required" time="3.443917279">
  </testcase>
  <testcase name="Admin::FraudReviewsController Requiring Additional Verification should send motified verification email to guest if they've already verified phone" time="3.251600117">
  </testcase>
  <testcase name="Admin::FraudReviewsController Requiring Additional Verification should not send verification to host if they've already verified phone" time="2.71677125">
  </testcase>
  <testcase name="Admin::FraudReviewsController Requiring Additional Verification should send modified verification to guest if they've already verified payment account" time="2.82383349">
  </testcase>
  <testcase name="Admin::FraudReviewsController Requiring Additional Verification should record in admin notes when user updates their verifications" time="3.154200352">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::FraudReviewsController" tests="0" time="0.00028547" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::FraudsController Background Checks when viewing background check #background_checks" tests="1" time="1.724897111" failures="0" errors="0" skipped="0">
  <testcase name="Admin::FraudsController Background Checks when viewing background check #background_checks shows background check only to tns_specialist" time="1.724396447">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::FraudsController Background Checks when viewing background check" tests="0" time="0.000161412" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::FraudsController Background Checks" tests="0" time="0.000152465" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::FraudsController ghosting" tests="1" time="2.186992637" failures="0" errors="0" skipped="0">
  <testcase name="Admin::FraudsController ghosting should only allow admins to flag users as ghosts" time="2.186569731">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::FraudsController jumio callback" tests="2" time="2.525240016" failures="0" errors="0" skipped="0">
  <testcase name="Admin::FraudsController jumio callback posting should create a jumio_result and associated records for a successful callback" time="1.194176313">
  </testcase>
  <testcase name="Admin::FraudsController jumio callback posting should create a jumio_resul a successful callback" time="1.330539392">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::FraudsController review_user_attributes" tests="2" time="3.828473988" failures="0" errors="0" skipped="0">
  <testcase name="Admin::FraudsController review_user_attributes does not capture any unghosted users" time="1.916602789">
  </testcase>
  <testcase name="Admin::FraudsController review_user_attributes correctly finds ghosted users with shared attributes" time="1.911390332">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::FraudsController" tests="0" time="0.000239311" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::FrozenReservationReviewsController#approve" tests="3" time="7.945666812" failures="0" errors="0" skipped="0">
  <testcase name="Admin::FrozenReservationReviewsController#approve prevents a FrozenReservationReview from being approved without supplying a real name" time="2.799021716">
  </testcase>
  <testcase name="Admin::FrozenReservationReviewsController#approve approves a FrozenReservationReview with a real name" time="2.926043848">
  </testcase>
  <testcase name="Admin::FrozenReservationReviewsController#approve creates a UserRealName for online and offline verifications" time="2.219929589">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/lib/calendar/constants/definition.rb:7: warning: already initialized constant SQUARE
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::FrozenReservationReviewsController#index" tests="2" time="4.838913613" failures="0" errors="0" skipped="0">
  <testcase name="Admin::FrozenReservationReviewsController#index prevents regular users from viewing the queue" time="3.390980835">
  </testcase>
  <testcase name="Admin::FrozenReservationReviewsController#index allows tns admins to view the queue" time="1.44737789">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::FrozenReservationReviewsController" tests="0" time="0.008721963" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GeneralController becoming a user and reverting to admin" tests="2" time="8.979959452" failures="0" errors="0" skipped="0">
  <testcase name="Admin::GeneralController becoming a user and reverting to admin should work" time="7.695892272">
  </testcase>
  <testcase name="Admin::GeneralController becoming a user and reverting to admin should not allow get requests to become user or revert to admin" time="1.283506376">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GeneralController.copy_verifications" tests="1" time="1.548590191" failures="0" errors="0" skipped="0">
  <testcase name="Admin::GeneralController.copy_verifications copies KbaResults" time="1.548210839">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GeneralController email" tests="1" time="2.106371761" failures="0" errors="0" skipped="0">
  <testcase name="Admin::GeneralController email should not send to ghosted users" time="2.10596534">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GeneralController merge users verifications" tests="8" time="18.358156441" failures="0" errors="0" skipped="0">
  <testcase name="Admin::GeneralController merge users verifications should copy oauth key" time="2.378091412">
  </testcase>
  <testcase name="Admin::GeneralController merge users verifications should copy facebook values" time="2.517524504">
  </testcase>
  <testcase name="Admin::GeneralController merge users verifications should copy facebook id" time="2.36626463">
  </testcase>
  <testcase name="Admin::GeneralController merge users verifications should copy verified phone numbers" time="2.270486104">
  </testcase>
  <testcase name="Admin::GeneralController merge users verifications should update existing unverified phone number" time="2.215067342">
  </testcase>
  <testcase name="Admin::GeneralController merge users verifications should copy over any JumioResults" time="2.233606344">
  </testcase>
  <testcase name="Admin::GeneralController merge users verifications copies over any tax forms, but marks them as deleted and not default" time="2.226163535">
  </testcase>
  <testcase name="Admin::GeneralController merge users verifications copies over any tax forms and if they are already deleted keeps the timestamp" time="2.149769449">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GeneralController#valid_type?" tests="5" time="2.242530972" failures="0" errors="0" skipped="0">
  <testcase name="Admin::GeneralController#valid_type? returns false for nil objects" time="0.385565393">
  </testcase>
  <testcase name="Admin::GeneralController#valid_type? returns true for a valid symbol type" time="0.387537633">
  </testcase>
  <testcase name="Admin::GeneralController#valid_type? returns true for a valid string type" time="0.725262599">
  </testcase>
  <testcase name="Admin::GeneralController#valid_type? returns false for an invalid type" time="0.372884388">
  </testcase>
  <testcase name="Admin::GeneralController#valid_type? returns false for an invalid symbol type" time="0.370515307">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GeneralController" tests="0" time="0.008926008" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GhostingReviewsController when performing actions on ghosting review queue #approve" tests="2" time="2.761558367" failures="0" errors="0" skipped="0">
  <testcase name="Admin::GhostingReviewsController when performing actions on ghosting review queue #approve resets state of review" time="1.20808838">
  </testcase>
  <testcase name="Admin::GhostingReviewsController when performing actions on ghosting review queue #approve approves, adds admin flag, and redirects" time="1.553005739">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GhostingReviewsController when performing actions on ghosting review queue #deny" tests="3" time="4.458669431" failures="0" errors="0" skipped="0">
  <testcase name="Admin::GhostingReviewsController when performing actions on ghosting review queue #deny resets state of review" time="1.286555636">
  </testcase>
  <testcase name="Admin::GhostingReviewsController when performing actions on ghosting review queue #deny denies, adds admin flag, and redirects" time="1.629206725">
  </testcase>
  <testcase name="Admin::GhostingReviewsController when performing actions on ghosting review queue #deny primary ghosts under specified reason and notes" time="1.542326099">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GhostingReviewsController when performing actions on ghosting review queue #index when logged in as admin" tests="1" time="1.527314914" failures="0" errors="0" skipped="0">
  <testcase name="Admin::GhostingReviewsController when performing actions on ghosting review queue #index when logged in as admin redirects upon entering page" time="1.526947945">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GhostingReviewsController when performing actions on ghosting review queue #index when logged in as tns admin" tests="1" time="2.323678479" failures="0" errors="0" skipped="0">
  <testcase name="Admin::GhostingReviewsController when performing actions on ghosting review queue #index when logged in as tns admin responds successfully" time="2.323289028">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GhostingReviewsController when performing actions on ghosting review queue #index when logged in as user" tests="1" time="3.365869625" failures="0" errors="0" skipped="0">
  <testcase name="Admin::GhostingReviewsController when performing actions on ghosting review queue #index when logged in as user shows queue only to tns admins" time="3.365333063">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GhostingReviewsController when performing actions on ghosting review queue #index" tests="0" time="0.000163282" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GhostingReviewsController when performing actions on ghosting review queue #require_additional_verification" tests="3" time="3.901700412" failures="0" errors="0" skipped="0">
  <testcase name="Admin::GhostingReviewsController when performing actions on ghosting review queue #require_additional_verification resets state of review" time="1.191139587">
  </testcase>
  <testcase name="Admin::GhostingReviewsController when performing actions on ghosting review queue #require_additional_verification requires additional verification and redirects" time="1.526773655">
  </testcase>
  <testcase name="Admin::GhostingReviewsController when performing actions on ghosting review queue #require_additional_verification adds a dashboard alert to require offline verification" time="1.183027615">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GhostingReviewsController when performing actions on ghosting review queue" tests="0" time="0.000163221" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::GhostingReviewsController" tests="0" time="0.009012171" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::LeonidasReviewsController when performing action on queued review #approve" tests="1" time="1.21611744" failures="0" errors="0" skipped="0">
  <testcase name="Admin::LeonidasReviewsController when performing action on queued review #approve approves and redirects" time="1.215767231">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::LeonidasReviewsController when performing action on queued review #deny when agent is checking checklist to confirm the case" tests="2" time="2.673007783" failures="0" errors="0" skipped="0">
  <testcase name="Admin::LeonidasReviewsController when performing action on queued review #deny when agent is checking checklist to confirm the case passes all checkmarks and denies and redirects" time="1.169599242">
  </testcase>
  <testcase name="Admin::LeonidasReviewsController when performing action on queued review #deny when agent is checking checklist to confirm the case doesn't pass all checkmarks and only redirects" time="1.502965669">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::LeonidasReviewsController when performing action on queued review #deny" tests="0" time="0.000190231" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::LeonidasReviewsController when performing action on queued review #require_additional_verification" tests="1" time="1.643424169" failures="0" errors="0" skipped="0">
  <testcase name="Admin::LeonidasReviewsController when performing action on queued review #require_additional_verification requires additional verification and redirects" time="1.642632275">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::LeonidasReviewsController when performing action on queued review" tests="0" time="0.000159203" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::LeonidasReviewsController" tests="0" time="0.000242005" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::LocalizedImagesController GET index" tests="1" time="0.944810539" failures="0" errors="0" skipped="0">
  <testcase name="Admin::LocalizedImagesController GET index returns http success" time="0.944063607">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::LocalizedImagesController" tests="0" time="0.000319247" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AdminNoteable.add_named_note" tests="2" time="1.320121426" failures="0" errors="0" skipped="0">
  <testcase name="AdminNoteable.add_named_note strips leading and trailing white spaces" time="0.875997453">
  </testcase>
  <testcase name="AdminNoteable.add_named_note appends to existing notes with correct format" time="0.443631453">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AdminNoteable.add_note" tests="2" time="1.01296788" failures="0" errors="0" skipped="0">
  <testcase name="AdminNoteable.add_note strips leading and trailing white spaces" time="0.510888536">
  </testcase>
  <testcase name="AdminNoteable.add_note appends to existing notes with correct format" time="0.501573684">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AdminNoteable.add_system_note" tests="2" time="0.761786761" failures="0" errors="0" skipped="0">
  <testcase name="AdminNoteable.add_system_note strips leading and trailing white spaces" time="0.380423639">
  </testcase>
  <testcase name="AdminNoteable.add_system_note appends to existing notes with correct format" time="0.380843888">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AdminNoteable" tests="1" time="0.371730518" failures="0" errors="0" skipped="0">
  <testcase name="AdminNoteable defaults to nil note" time="0.371397122">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::NpsStudiesController#create" tests="1" time="6.61181529" failures="0" errors="0" skipped="0">
  <testcase name="Admin::NpsStudiesController#create creates a new NpsStudy with valid parameters" time="6.611344133">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::NpsStudiesController#update" tests="3" time="2.85096897" failures="0" errors="0" skipped="0">
  <testcase name="Admin::NpsStudiesController#update allows activating a study" time="0.851566879">
  </testcase>
  <testcase name="Admin::NpsStudiesController#update allows deactivating a study" time="1.162618913">
  </testcase>
  <testcase name="Admin::NpsStudiesController#update disallows activating a study if one is already active" time="0.836158067">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::NpsStudiesController" tests="0" time="0.008917877" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::PressController#update notifying about new logo" tests="2" time="2.472633662" failures="0" errors="0" skipped="0">
  <testcase name="Admin::PressController#update notifying about new logo should notify about a new logo if asset is set to special value" time="1.173552484">
  </testcase>
  <testcase name="Admin::PressController#update notifying about new logo should not notify about a new logo if asset has real value" time="1.298598254">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::PressController#update" tests="0" time="0.000164209" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::PressController" tests="0" time="0.000283755" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::VerificationFollowupReviewsController#approve" tests="3" time="4.516026101" failures="0" errors="0" skipped="0">
  <testcase name="Admin::VerificationFollowupReviewsController#approve prevents a JumioFollowupReview from being approved without supplying a real name" time="1.232887118">
  </testcase>
  <testcase name="Admin::VerificationFollowupReviewsController#approve approves a JumioFollowupReview with a real name" time="1.629652458">
  </testcase>
  <testcase name="Admin::VerificationFollowupReviewsController#approve creates a UserRealName for offline verification only" time="1.652831161">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::VerificationFollowupReviewsController#index" tests="2" time="2.135570851" failures="0" errors="0" skipped="0">
  <testcase name="Admin::VerificationFollowupReviewsController#index prevents regular users from viewing the queue" time="0.920584367">
  </testcase>
  <testcase name="Admin::VerificationFollowupReviewsController#index allows tns admins to view the queue" time="1.214502597">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Admin::VerificationFollowupReviewsController" tests="0" time="0.000246887" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::ActiveDyson boolean attributes in Dyson when marshalling" tests="2" time="0.894382014" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::ActiveDyson boolean attributes in Dyson when marshalling should marshal boolean true correctly" time="0.440902788">
  </testcase>
  <testcase name="Airbnb::ActiveDyson boolean attributes in Dyson when marshalling should marshal boolean false correctly" time="0.45292414">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::ActiveDyson boolean attributes in Dyson when unmarshalling" tests="2" time="0.785354121" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::ActiveDyson boolean attributes in Dyson when unmarshalling should unmarshal 'true' correctly" time="0.379845827">
  </testcase>
  <testcase name="Airbnb::ActiveDyson boolean attributes in Dyson when unmarshalling should unmarshal 'false' correctly" time="0.405006944">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::ActiveDyson boolean attributes in Dyson" tests="0" time="0.000191985" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::ActiveDyson" tests="6" time="3.38478844" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::ActiveDyson should work across multiple classes" time="0.844839139">
  </testcase>
  <testcase name="Airbnb::ActiveDyson should create a valid adapter" time="0.386968259">
  </testcase>
  <testcase name="Airbnb::ActiveDyson should delegate dyson attributes" time="0.374181931">
  </testcase>
  <testcase name="Airbnb::ActiveDyson should not delegate non-dyson attributes" time="0.368267179">
  </testcase>
  <testcase name="Airbnb::ActiveDyson should handle instance reloading" time="0.677797839">
  </testcase>
  <testcase name="Airbnb::ActiveDyson should handle a fresh instance" time="0.67805092">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::AffiliateCookies get_from_af_and_c" tests="3" time="1.17468018" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::AffiliateCookies get_from_af_and_c should work" time="0.387588542">
  </testcase>
  <testcase name="Airbnb::AffiliateCookies get_from_af_and_c should strip whitespace from input" time="0.387390632">
  </testcase>
  <testcase name="Airbnb::AffiliateCookies get_from_af_and_c should handle nil cases individually" time="0.399076814">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::AffiliateCookies get_from_fb_action_types" tests="3" time="1.190029413" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::AffiliateCookies get_from_fb_action_types should return the correct affiliate and campaign" time="0.407733531">
  </testcase>
  <testcase name="Airbnb::AffiliateCookies get_from_fb_action_types should handle the nil case" time="0.394975952">
  </testcase>
  <testcase name="Airbnb::AffiliateCookies get_from_fb_action_types should strip whitespace from input" time="0.386725817">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::AffiliateCookies get_from_referrer" tests="6" time="2.640427534" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::AffiliateCookies get_from_referrer should work" time="0.369091548">
  </testcase>
  <testcase name="Airbnb::AffiliateCookies get_from_referrer should handle the nil case" time="0.401112414">
  </testcase>
  <testcase name="Airbnb::AffiliateCookies get_from_referrer should exclude Google AdSense and other ad URLs" time="0.384702166">
  </testcase>
  <testcase name="Airbnb::AffiliateCookies get_from_referrer should return nil affiliate and campaign if referrer is airbnb.com" time="0.370198649">
  </testcase>
  <testcase name="Airbnb::AffiliateCookies get_from_referrer should return nil affiliate and campaign for email addresses" time="0.715636788">
  </testcase>
  <testcase name="Airbnb::AffiliateCookies get_from_referrer should return nil affiliate and campaign for arbitrary referrers" time="0.398661526">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::AffiliateCookies get_from_short_af_code" tests="3" time="1.657489976" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::AffiliateCookies get_from_short_af_code should return the correct affiliate and campaign" time="0.895906599">
  </testcase>
  <testcase name="Airbnb::AffiliateCookies get_from_short_af_code should handle the nil case" time="0.375153728">
  </testcase>
  <testcase name="Airbnb::AffiliateCookies get_from_short_af_code should handle the empty string case" time="0.385888815">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::AffiliateCookies" tests="0" time="0.000218294" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirbnbJob lifecycle when successful" tests="2" time="1.166938914" failures="0" errors="0" skipped="0">
  <testcase name="AirbnbJob lifecycle when successful enqueues and performs a job" time="0.745752444">
  </testcase>
  <testcase name="AirbnbJob lifecycle when successful calls the job with the enqueued arguments" time="0.420716988">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirbnbJob lifecycle with a failing job" tests="2" time="0.827215233" failures="0" errors="0" skipped="0">
  <testcase name="AirbnbJob lifecycle with a failing job enqueues, attempts, and retries a job" time="0.424481342">
  </testcase>
  <testcase name="AirbnbJob lifecycle with a failing job retries the job with the correct arguments" time="0.402151488">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirbnbJob lifecycle" tests="0" time="0.000193474" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirbnbJob" tests="0" time="0.000225247" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::MixpanelTracker#track_event" tests="4" time="1.912173276" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::MixpanelTracker#track_event should track simple events" time="0.51397348">
  </testcase>
  <testcase name="Airbnb::MixpanelTracker#track_event should add values in the mixpanel cookie to the properties hash" time="0.46178343">
  </testcase>
  <testcase name="Airbnb::MixpanelTracker#track_event should merge the given properties over the registered properties" time="0.463639589">
  </testcase>
  <testcase name="Airbnb::MixpanelTracker#track_event works fine without mixpanel super properties being defined" time="0.471893536">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::MixpanelTracker" tests="0" time="0.00025458" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::Service::CurlWrapper" tests="7" time="3.266948522" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::Service::CurlWrapper should throw an exception for 502 response codes" time="0.379300275">
  </testcase>
  <testcase name="Airbnb::Service::CurlWrapper should have default config_options" time="0.386429831">
  </testcase>
  <testcase name="Airbnb::Service::CurlWrapper should accept config_options" time="0.409229836">
  </testcase>
  <testcase name="Airbnb::Service::CurlWrapper should get json" time="0.389698063">
  </testcase>
  <testcase name="Airbnb::Service::CurlWrapper should post json" time="0.885523155">
  </testcase>
  <testcase name="Airbnb::Service::CurlWrapper should put json" time="0.389954555">
  </testcase>
  <testcase name="Airbnb::Service::CurlWrapper should delete" time="0.42261882">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::Service::FraudPrediction::Response has_risk?" tests="1" time="0.38813372" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::Service::FraudPrediction::Response has_risk? should return correct results" time="0.387755575">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::Service::FraudPrediction::Response" tests="0" time="0.00021505" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::Service::Logging::ActionControllerFilter after" tests="1" time="0.385939432" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::Service::Logging::ActionControllerFilter after should pass the request and custom events to the logging client" time="0.385585788">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::Service::Logging::ActionControllerFilter" tests="0" time="0.000242612" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::Service::Logging::ActiveRecord enable_logging" tests="2" time="2.559998227" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::Service::Logging::ActiveRecord enable_logging logs user changes" time="1.273561365">
  </testcase>
  <testcase name="Airbnb::Service::Logging::ActiveRecord enable_logging logs reservation2 changes" time="1.285913668">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::Service::Logging::ActiveRecord log_action" tests="2" time="0.794882023" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::Service::Logging::ActiveRecord log_action logs information about the model change" time="0.399814206">
  </testcase>
  <testcase name="Airbnb::Service::Logging::ActiveRecord log_action filters the blacklist" time="0.394619797">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::Service::Logging::ActiveRecordMixin" tests="2" time="1.785634408" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::Service::Logging::ActiveRecordMixin includes itself on a hosting" time="0.837834255">
  </testcase>
  <testcase name="Airbnb::Service::Logging::ActiveRecordMixin includes itself on a payment_instrument" time="0.947105914">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::Service::Logging::ActiveRecord" tests="0" time="0.000243362" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::Service::Logging::Event::Base put_hash" tests="2" time="0.758544643" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::Service::Logging::Event::Base put_hash should convert keys to strings" time="0.378234154">
  </testcase>
  <testcase name="Airbnb::Service::Logging::Event::Base put_hash should handle nil" time="0.379638625">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::Service::Logging::Event::Base" tests="0" time="0.000222011" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::Sitemap sitemap" tests="8" time="21.891427554" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::Sitemap sitemap should list the right sitemaps in index sitemap" time="0.41776063">
  </testcase>
  <testcase name="Airbnb::Sitemap sitemap should make pages for each property type in each market" time="0.376290289">
  </testcase>
  <testcase name="Airbnb::Sitemap sitemap should make monthly sublets pages for each market" time="0.38902308">
  </testcase>
  <testcase name="Airbnb::Sitemap sitemap should list all listings" time="19.100703169">
  </testcase>
  <testcase name="Airbnb::Sitemap sitemap should list all locations" time="0.400065785">
  </testcase>
  <testcase name="Airbnb::Sitemap sitemap should list all airbnb collections" time="0.391020432">
  </testcase>
  <testcase name="Airbnb::Sitemap sitemap should list all wish lists" time="0.395463781">
  </testcase>
  <testcase name="Airbnb::Sitemap sitemap should list all miscellaneous pages" time="0.394746316">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::Sitemap::Storage" tests="1" time="0.416169444" failures="0" errors="0" skipped="0">
  <testcase name="Airbnb::Sitemap::Storage should store content as gzip" time="0.415759679">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Airbnb::Sitemap" tests="0" time="18.279225596" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchRequest AirMatchRequest Necessary #attach_reservation_to_associated_request" tests="2" time="4.347077874" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchRequest AirMatchRequest Necessary #attach_reservation_to_associated_request should automatically find the associated request and link it up when the reservation is set to pending" time="2.240221916">
  </testcase>
  <testcase name="AirMatchRequest AirMatchRequest Necessary #attach_reservation_to_associated_request shouldn't attach the reservation to a request with a different hosting" time="2.106368919">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/lib/calendar/constants/definition.rb:7: warning: already initialized constant SQUARE
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchRequest AirMatchRequest Necessary #fulfill!" tests="1" time="4.251588821" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchRequest AirMatchRequest Necessary #fulfill! should work" time="4.251141709">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchRequest AirMatchRequest Necessary ignore!, preapprove!, cancel!" tests="3" time="4.810202094" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchRequest AirMatchRequest Necessary ignore!, preapprove!, cancel! should update status to STATUS_IGNORED when ignore! is called" time="1.459947378">
  </testcase>
  <testcase name="AirMatchRequest AirMatchRequest Necessary ignore!, preapprove!, cancel! should update status to STATUS_CANCELED when cancel! is called" time="1.487623014">
  </testcase>
  <testcase name="AirMatchRequest AirMatchRequest Necessary ignore!, preapprove!, cancel! should update status to STATUS_PREAPPROVED when preapprove! is called" time="1.862070628">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchRequest AirMatchRequest Necessary number_of_guests" tests="1" time="1.473784606" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchRequest AirMatchRequest Necessary number_of_guests should not be nil" time="1.473420474">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchRequest AirMatchRequest Necessary posts_needing_review" tests="2" time="5.406953812" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchRequest AirMatchRequest Necessary posts_needing_review should return posts having #visible_to_guest as false" time="2.607177213">
  </testcase>
  <testcase name="AirMatchRequest AirMatchRequest Necessary posts_needing_review should not return posts having #visible_to_guest as true" time="2.799283316">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchRequest AirMatchRequest Necessary question2_post" tests="1" time="2.40688008" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchRequest AirMatchRequest Necessary question2_post should be the post linked to the request" time="2.406483761">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchRequest AirMatchRequest Necessary should_send_mail?" tests="7" time="13.06829723" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchRequest AirMatchRequest Necessary should_send_mail? should be true for the first post sent to host" time="1.472220728">
  </testcase>
  <testcase name="AirMatchRequest AirMatchRequest Necessary should_send_mail? should be false for the first reply post by the host if they ignore" time="1.52414145">
  </testcase>
  <testcase name="AirMatchRequest AirMatchRequest Necessary should_send_mail? should be true for the first reply post by the host if they preapprove" time="1.683913245">
  </testcase>
  <testcase name="AirMatchRequest AirMatchRequest Necessary should_send_mail? should be true for the first reply post by the host if they don't ignore or preapprove" time="2.630109641">
  </testcase>
  <testcase name="AirMatchRequest AirMatchRequest Necessary should_send_mail? should be true for any successive post, no matter the status of the first reply from the host" time="1.91121548">
  </testcase>
  <testcase name="AirMatchRequest AirMatchRequest Necessary should_send_mail? should be true for any reply by the host if the guest has manually sent them a message after AirMatch" time="1.839143002">
  </testcase>
  <testcase name="AirMatchRequest AirMatchRequest Necessary should_send_mail? should be false for a first reply via iphone, mobile web, or sms" time="2.006477391">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchRequest AirMatchRequest Necessary update_air_match_request_status_from_template" tests="2" time="3.771849999" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchRequest AirMatchRequest Necessary update_air_match_request_status_from_template should update the status of the AirMatchRequest to STATUS_IGNORED for Question2Post unavailable template" time="2.264259214">
  </testcase>
  <testcase name="AirMatchRequest AirMatchRequest Necessary update_air_match_request_status_from_template should update the status of the AirMatchRequest to preapproved for Question2Post accepted template" time="1.50712596">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchRequest AirMatchRequest Necessary" tests="4" time="7.279874364" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchRequest AirMatchRequest Necessary should create a new Question2Thread if one doesn't exist, hidden to guest" time="2.048615806">
  </testcase>
  <testcase name="AirMatchRequest AirMatchRequest Necessary should not create a duplicate request" time="1.558755593">
  </testcase>
  <testcase name="AirMatchRequest AirMatchRequest Necessary should allow duplicate request for different trips" time="2.133164128">
  </testcase>
  <testcase name="AirMatchRequest AirMatchRequest Necessary should create a Question2Post" time="1.538598436">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchRequest with_fuzzy_dates" tests="5" time="13.331680028" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchRequest with_fuzzy_dates should include a trip that has the exact same dates" time="1.867400885">
  </testcase>
  <testcase name="AirMatchRequest with_fuzzy_dates should not include a trip that is completely before dates" time="1.855267809">
  </testcase>
  <testcase name="AirMatchRequest with_fuzzy_dates should not include a trip that is completely after dates" time="2.176734566">
  </testcase>
  <testcase name="AirMatchRequest with_fuzzy_dates should include a trip that starts between start and stop dates" time="2.344370539">
  </testcase>
  <testcase name="AirMatchRequest with_fuzzy_dates should include a trip that stops between start and stop dates" time="5.08709268">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchRequest" tests="0" time="0.000317169" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip data stuff dispatch_requests!" tests="6" time="10.273969466" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip data stuff dispatch_requests! should dispatch air_match_requests" time="4.853095302">
  </testcase>
  <testcase name="AirMatchTrip data stuff dispatch_requests! should raise ShouldNotDispatchError and stop matching if checkin date is in past" time="1.291524448">
  </testcase>
  <testcase name="AirMatchTrip data stuff dispatch_requests! should raise ShouldNotDispatchError and stop matching if maximum requests is reached" time="0.773059512">
  </testcase>
  <testcase name="AirMatchTrip data stuff dispatch_requests! should raise ShouldNotDispatchError if has stopped matching" time="0.801455736">
  </testcase>
  <testcase name="AirMatchTrip data stuff dispatch_requests! should raise ShouldNotDispatchError if status is not pending" time="0.79616603">
  </testcase>
  <testcase name="AirMatchTrip data stuff dispatch_requests! should raise ShouldNotDispatchError if fulfilled outside of airmatch" time="1.757604288">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip data stuff filter_hosting_ids" tests="1" time="2.599619759" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip data stuff filter_hosting_ids should not remove hostings without cause" time="2.599183335">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip data stuff remove_duplicate_hosts" tests="1" time="3.722502288" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip data stuff remove_duplicate_hosts should only return one hosting per host" time="3.722112678">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip data stuff remove_hostings_with_conflicting_requests" tests="1" time="3.224044586" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip data stuff remove_hostings_with_conflicting_requests should remove hostings that have already received an airmatch request for those dates" time="3.223668029">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip data stuff remove_hostings_with_existing_thread" tests="1" time="2.775203221" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip data stuff remove_hostings_with_existing_thread should remove hostings where a thread already exists between guest and host" time="2.774787592">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip data stuff remove_hostings_with_recent_air_match_requests" tests="1" time="5.027188781" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip data stuff remove_hostings_with_recent_air_match_requests should filter hostings who have already received another airmatch request recently" time="5.026800959">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip data stuff select_hostings_with_previous_host_reservations" tests="3" time="5.272804652" failures="0" errors="0" skipped="1">
  <testcase name="AirMatchTrip data stuff select_hostings_with_previous_host_reservations should keep hostings with an accepted reservation" time="2.18855257">
  </testcase>
  <testcase name="AirMatchTrip data stuff select_hostings_with_previous_host_reservations  (PENDING)" time="0.000195327">
    <skipped/>
  </testcase>
  <testcase name="AirMatchTrip data stuff select_hostings_with_previous_host_reservations should keep hostings whose hosts have an accepted reservation on another hosting" time="3.083449298">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip data stuff should_dispatch_requests?" tests="7" time="7.180893456" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip data stuff should_dispatch_requests? should return true if nothing's wrong" time="0.850635682">
  </testcase>
  <testcase name="AirMatchTrip data stuff should_dispatch_requests? should return false if trip has already hit the max number of requests" time="0.85059635">
  </testcase>
  <testcase name="AirMatchTrip data stuff should_dispatch_requests? should return false if it's stopped matching" time="0.806673197">
  </testcase>
  <testcase name="AirMatchTrip data stuff should_dispatch_requests? should return false if the trip is fulfilled" time="0.84687613">
  </testcase>
  <testcase name="AirMatchTrip data stuff should_dispatch_requests? should return false if checkin date in past" time="1.195393237">
  </testcase>
  <testcase name="AirMatchTrip data stuff should_dispatch_requests? should return true if checkin date is today" time="1.295139939">
  </testcase>
  <testcase name="AirMatchTrip data stuff should_dispatch_requests? should return false if trip fulfilled outside of airmatch" time="1.334490878">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip data stuff state management" tests="2" time="1.554360862" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip data stuff state management should say the stopped_matching_reason is 'fulfilled' if that's thefirst time the matching is stopped" time="0.761450007">
  </testcase>
  <testcase name="AirMatchTrip data stuff state management should keep the old reason and time for stopping matching even if the trip is fulfilled later" time="0.792396939">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip data stuff" tests="2" time="2.691934422" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip data stuff should find outside reservations" time="1.898352283">
  </testcase>
  <testcase name="AirMatchTrip data stuff should properly parse human-readable #smart_location" time="0.793124304">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip decorate_hostings_with_prices" tests="1" time="0.731983136" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip decorate_hostings_with_prices should prune out hostings with nil prices" time="0.73152655">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip determine_version" tests="1" time="0.640329725" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip determine_version should fall back to determine_version if no source is given" time="0.639863147">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip liked and skipped hosting ids" tests="3" time="2.911128117" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip liked and skipped hosting ids should set liked and skipped hosting ids" time="1.443852348">
  </testcase>
  <testcase name="AirMatchTrip liked and skipped hosting ids should clobber, not append, additional liked or skipped ids if using [liked/skipped]_hosting_ids=" time="0.74108135">
  </testcase>
  <testcase name="AirMatchTrip liked and skipped hosting ids should append, not clobber, additional liked or skipped ids if using add_[liked/skipped]_hosting_ids" time="0.725592945">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip outside_reservation" tests="2" time="3.049094406" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip outside_reservation should update AirMatchTrips when an outside reservation is accepted" time="1.343416259">
  </testcase>
  <testcase name="AirMatchTrip outside_reservation should not mark unrelated trips as externally fulfilled" time="1.705212257">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip revet" tests="4" time="3.627633118" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip revet should stop matching with REVETTING reason if there are no more matches and contact_more is false, and there is more on the bench" time="0.769075099">
  </testcase>
  <testcase name="AirMatchTrip revet should stop matching with NO_MORE_MATCHING_HOSTINGS reason if there are no more matches and contact_more is true, and there is more on the bench" time="1.353516384">
  </testcase>
  <testcase name="AirMatchTrip revet should stop matching with NO_MORE_MATCHING_HOSTINGS reason if there are no more matches and contact_more is false, and there is NOT more on the bench" time="0.783614203">
  </testcase>
  <testcase name="AirMatchTrip revet should send guest email if stopped with revet option" time="0.720736938">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip select_hostings" tests="4" time="6.182734214" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip select_hostings should keep the valid hosting" time="1.0869473">
  </testcase>
  <testcase name="AirMatchTrip select_hostings should filter hostings on number of guests" time="1.42770297">
  </testcase>
  <testcase name="AirMatchTrip select_hostings should filter hostings on room type" time="1.525972276">
  </testcase>
  <testcase name="AirMatchTrip select_hostings should filter hostings on room type" time="2.141289087">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip valid_date_range?" tests="2" time="0.784321433" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip valid_date_range? should be true if less than 4 weeks" time="0.410078397">
  </testcase>
  <testcase name="AirMatchTrip valid_date_range? should be false if greater than 4 weeks" time="0.373794816">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip with_fuzzy_dates" tests="11" time="8.779909517" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip with_fuzzy_dates should include a trip that has the exact same dates" time="0.752565296">
  </testcase>
  <testcase name="AirMatchTrip with_fuzzy_dates should not include a trip that is completely before dates" time="0.773378859">
  </testcase>
  <testcase name="AirMatchTrip with_fuzzy_dates should not include a trip that is completely after dates" time="1.305167524">
  </testcase>
  <testcase name="AirMatchTrip with_fuzzy_dates should not include a trip that starts on end date" time="0.782129476">
  </testcase>
  <testcase name="AirMatchTrip with_fuzzy_dates should include a trip that starts one day before end date" time="0.726718166">
  </testcase>
  <testcase name="AirMatchTrip with_fuzzy_dates should not include a trip that stops on start date" time="0.740466589">
  </testcase>
  <testcase name="AirMatchTrip with_fuzzy_dates should include a trip that stops one day after start date" time="0.754671812">
  </testcase>
  <testcase name="AirMatchTrip with_fuzzy_dates should include a trip that starts between start and stop dates" time="0.720947271">
  </testcase>
  <testcase name="AirMatchTrip with_fuzzy_dates should include a trip that stops between start and stop dates" time="0.732729355">
  </testcase>
  <testcase name="AirMatchTrip with_fuzzy_dates should include a trip that starts after and ends before start and stop dates" time="0.734876293">
  </testcase>
  <testcase name="AirMatchTrip with_fuzzy_dates should include a trip that starts before and ends after start and stop dates" time="0.754546358">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AirMatchTrip" tests="10" time="14.722962423" failures="0" errors="0" skipped="0">
  <testcase name="AirMatchTrip should not use previously_contacted_hosting_ids cache if new threads exist" time="1.435883899">
  </testcase>
  <testcase name="AirMatchTrip should send airmatch banner in question_incoming email" time="1.229220485">
  </testcase>
  <testcase name="AirMatchTrip should calculate lead time" time="0.802135417">
  </testcase>
  <testcase name="AirMatchTrip should dispatch the right number of requests" time="0.722115739">
  </testcase>
  <testcase name="AirMatchTrip should avoid search experiments" time="1.079048622">
  </testcase>
  <testcase name="AirMatchTrip should have status = pending when new" time="0.747868229">
  </testcase>
  <testcase name="AirMatchTrip should show the right trips for a guest" time="1.287031216">
  </testcase>
  <testcase name="AirMatchTrip should create AirMatchRequests with the right data" time="2.205664255">
  </testcase>
  <testcase name="AirMatchTrip should create AirMatchRequests with visible_to_guest = true if in liked list" time="2.092964182">
  </testcase>
  <testcase name="AirMatchTrip should cancel associated AirMatchRequests when it is canceled" time="3.119657508">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::AccountController#confirm_email with an incorrect code" tests="1" time="1.379103677" failures="0" errors="0" skipped="0">
  <testcase name="Api::AccountController#confirm_email with an incorrect code returns a JSON with status of failure and with a reason of already_confirmed" time="1.378683069">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::AccountController#confirm_email" tests="2" time="3.023240237" failures="0" errors="0" skipped="0">
  <testcase name="Api::AccountController#confirm_email confirms a user's email and returns a JSON with status success" time="2.06199584">
  </testcase>
  <testcase name="Api::AccountController#confirm_email returns a JSON with status of failure and with a reason of incorrect_code" time="0.960841763">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::AccountController#forgot_password with an email parameter" tests="3" time="4.657212674" failures="0" errors="0" skipped="0">
  <testcase name="Api::AccountController#forgot_password with an email parameter should create an email and return a successful response" time="1.651843912">
  </testcase>
  <testcase name="Api::AccountController#forgot_password with an email parameter should return a validation error if given an invalid email" time="1.506103688">
  </testcase>
  <testcase name="Api::AccountController#forgot_password with an email parameter should return a validation error if given an admin email address" time="1.498639384">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::AccountController#forgot_password" tests="1" time="1.532631084" failures="0" errors="0" skipped="0">
  <testcase name="Api::AccountController#forgot_password should present an error message if an email address is not provided" time="1.532257274">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::AccountController for logged-in users #active" tests="1" time="1.295786834" failures="0" errors="0" skipped="0">
  <testcase name="Api::AccountController for logged-in users #active should respond with the authenticated state of the user" time="1.295397039">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::AccountController for logged-in users" tests="0" time="0.0001606" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::AccountController#notifications" tests="5" time="6.006543555" failures="0" errors="0" skipped="0">
  <testcase name="Api::AccountController#notifications should create a new iPhone notification device &amp; set enabled &amp; token if it doesn't exist" time="1.314458827">
  </testcase>
  <testcase name="Api::AccountController#notifications should set enabled on an existing iPhone notification device" time="1.019714449">
  </testcase>
  <testcase name="Api::AccountController#notifications should register iPhone devices" time="1.365735053">
  </testcase>
  <testcase name="Api::AccountController#notifications should not register Android devices" time="0.993418014">
  </testcase>
  <testcase name="Api::AccountController#notifications should return a list of devices for the user and their settings" time="1.312317634">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::AccountController" tests="0" time="0.000233039" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::BaseController#campaigns for a user with a listing" tests="1" time="2.124599077" failures="0" errors="0" skipped="0">
  <testcase name="Api::BaseController#campaigns for a user with a listing does enable groups " time="2.124112745">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::BaseController#campaigns for a user without listings" tests="1" time="0.968305534" failures="0" errors="0" skipped="0">
  <testcase name="Api::BaseController#campaigns for a user without listings does not enable groups " time="0.967949067">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::BaseController#campaigns" tests="0" time="0.000248545" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::BaseController#cors_allowed_domain?" tests="7" time="3.008655097" failures="0" errors="0" skipped="0">
  <testcase name="Api::BaseController#cors_allowed_domain? should allow airbnb domains" time="0.395974592">
  </testcase>
  <testcase name="Api::BaseController#cors_allowed_domain? should allow sub domains of a valid domain" time="0.359023928">
  </testcase>
  <testcase name="Api::BaseController#cors_allowed_domain? should disallow an invalid domain" time="0.38402118">
  </testcase>
  <testcase name="Api::BaseController#cors_allowed_domain? should disallow invalid domains that have a valid domain suffix" time="0.699027264">
  </testcase>
  <testcase name="Api::BaseController#cors_allowed_domain? should disallow invalid domains with a valid domain prefix" time="0.367824454">
  </testcase>
  <testcase name="Api::BaseController#cors_allowed_domain? should disallow domains with a valid domain as a sub domain" time="0.399824422">
  </testcase>
  <testcase name="Api::BaseController#cors_allowed_domain? should allow any port to be present" time="0.401927425">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::BaseController#get_param acceptable == :boolean" tests="5" time="2.202696344" failures="0" errors="0" skipped="0">
  <testcase name="Api::BaseController#get_param acceptable == :boolean supports casting 'true' to :boolean" time="0.660578224">
  </testcase>
  <testcase name="Api::BaseController#get_param acceptable == :boolean supports casting 'false' to :boolean" time="0.367027604">
  </testcase>
  <testcase name="Api::BaseController#get_param acceptable == :boolean casts non-'true' or 'false' values if default value provided" time="0.390374313">
  </testcase>
  <testcase name="Api::BaseController#get_param acceptable == :boolean casts to :boolean if default provided and param not present" time="0.386349179">
  </testcase>
  <testcase name="Api::BaseController#get_param acceptable == :boolean returns nil for non-'true' or 'false' values if default value is nil" time="0.397458309">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::BaseController#get_param acceptable == Proc" tests="2" time="1.132026155" failures="0" errors="0" skipped="0">
  <testcase name="Api::BaseController#get_param acceptable == Proc returns the value returned by the proc" time="0.40220801">
  </testcase>
  <testcase name="Api::BaseController#get_param acceptable == Proc rescues with the default value" time="0.729281192">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::BaseController#get_param" tests="3" time="1.241706888" failures="0" errors="0" skipped="0">
  <testcase name="Api::BaseController#get_param fails gracefully if nested param is missing" time="0.417747903">
  </testcase>
  <testcase name="Api::BaseController#get_param casts the empty string to 0 only if 'acceptable' is Integer" time="0.39351951">
  </testcase>
  <testcase name="Api::BaseController#get_param returns nil if a String is provided when an Array is preferred and default_value is nil" time="0.429812113">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::BaseController locale / country setting" tests="8" time="8.646269357" failures="0" errors="0" skipped="1">
  <testcase name="Api::BaseController locale / country setting #locales should return a list of locales (PENDING)" time="0.960872862">
    <skipped/>
  </testcase>
  <testcase name="Api::BaseController locale / country setting should set locale on visit by default to English/USD" time="0.989144519">
  </testcase>
  <testcase name="Api::BaseController locale / country setting should set locale on visit by default from query params" time="1.334753373">
  </testcase>
  <testcase name="Api::BaseController locale / country setting should set locale on visit by default from HTTP headers" time="0.931659894">
  </testcase>
  <testcase name="Api::BaseController locale / country setting should set currency to GBP when locale is en-GB" time="1.245981859">
  </testcase>
  <testcase name="Api::BaseController locale / country setting should set currency to CNY when locale is zh-Hans" time="0.941024445">
  </testcase>
  <testcase name="Api::BaseController locale / country setting should set currency to THB when locale is th" time="0.980221682">
  </testcase>
  <testcase name="Api::BaseController locale / country setting should not accept locales or currencies that don't exist" time="1.261210294">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::BaseController Trebuchet users strategy" tests="2" time="2.127747755" failures="0" errors="0" skipped="0">
  <testcase name="Api::BaseController Trebuchet users strategy should be false if the user is not in it" time="1.217209155">
  </testcase>
  <testcase name="Api::BaseController Trebuchet users strategy should be true if the user is in it" time="0.909826644">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::BaseController Trebuchet visitor_experiment" tests="2" time="0.823620646" failures="0" errors="0" skipped="0">
  <testcase name="Api::BaseController Trebuchet visitor_experiment shouldn't support it if no device ID supplied" time="0.425286602">
  </testcase>
  <testcase name="Api::BaseController Trebuchet visitor_experiment should support it if device ID supplied" time="0.39785887">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::BaseController Trebuchet" tests="0" time="0.000188458" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::BaseController" tests="0" time="0.000286861" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::CalendarController formatted_reservations" tests="1" time="3.185676316" failures="0" errors="0" skipped="0">
  <testcase name="Api::CalendarController formatted_reservations formats reservations" time="3.185277569">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::CalendarController#index" tests="3" time="10.201150434" failures="0" errors="0" skipped="0">
  <testcase name="Api::CalendarController#index retrieves dates for guest" time="3.610927216">
  </testcase>
  <testcase name="Api::CalendarController#index retrieves dates for host" time="3.382175843">
  </testcase>
  <testcase name="Api::CalendarController#index includes reservations" time="3.207512586">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::CalendarController inject_reservation_data" tests="1" time="3.255875055" failures="0" errors="0" skipped="0">
  <testcase name="Api::CalendarController inject_reservation_data inject checkin/checkout values into reservation obj within calendar" time="3.255409581">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::CalendarController#update as guest" tests="1" time="3.821418544" failures="0" errors="0" skipped="0">
  <testcase name="Api::CalendarController#update as guest does not allow guests to update calendar" time="3.820984311">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::CalendarController#update as host" tests="3" time="9.852603118" failures="0" errors="0" skipped="0">
  <testcase name="Api::CalendarController#update as host updates multiple" time="3.154259938">
  </testcase>
  <testcase name="Api::CalendarController#update as host returns error if invalid format" time="3.151482183">
  </testcase>
  <testcase name="Api::CalendarController#update as host returns error if calendar service exception" time="3.546293839">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::CalendarController#update" tests="0" time="0.000188045" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::CalendarController" tests="0" time="0.000227754" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::CollectionsController#create" tests="1" time="1.283112916" failures="0" errors="0" skipped="0">
  <testcase name="Api::CollectionsController#create should return an error if name is greater than 50 characters" time="1.282459387">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::CollectionsController#destroy" tests="1" time="0.897500462" failures="0" errors="0" skipped="0">
  <testcase name="Api::CollectionsController#destroy should respond successfully" time="0.897087927">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::CollectionsController#update when renaming the Wish List" tests="2" time="2.268125482" failures="0" errors="0" skipped="0">
  <testcase name="Api::CollectionsController#update when renaming the Wish List should respond successfully" time="1.001184768">
  </testcase>
  <testcase name="Api::CollectionsController#update when renaming the Wish List should return the renamed Wish List" time="1.266442269">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::CollectionsController#update when setting the Wish List to private" tests="1" time="1.544032063" failures="0" errors="0" skipped="0">
  <testcase name="Api::CollectionsController#update when setting the Wish List to private should respond successfully and set private to true" time="1.54362139">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::CollectionsController#update" tests="0" time="0.000189077" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::CollectionsController" tests="0" time="0.000229095" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ConciergeController with invalid params" tests="1" time="0.821753203" failures="0" errors="0" skipped="0">
  <testcase name="Api::ConciergeController with invalid params should return bad request and nothing if not ok" time="0.82072653">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ConciergeController with valid params" tests="2" time="2.287312402" failures="0" errors="0" skipped="0">
  <testcase name="Api::ConciergeController with valid params should email passport@airbnb.com" time="0.86601134">
  </testcase>
  <testcase name="Api::ConciergeController with valid params should return a status created and refk" time="1.420832969">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ConciergeController" tests="0" time="0.000223034" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiController#get_availability_and_pricing" tests="1" time="1.708421216" failures="0" errors="0" skipped="0">
  <testcase name="ApiController#get_availability_and_pricing should return availability and pricing" time="1.708021558">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiController" tests="0" time="0.000222649" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::FaqsController#rate logged in" tests="2" time="3.002750244" failures="0" errors="0" skipped="0">
  <testcase name="Api::FaqsController#rate logged in should support downvote with no reason" time="1.688925054">
  </testcase>
  <testcase name="Api::FaqsController#rate logged in should support downvote with a reason" time="1.313218946">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::FaqsController#rate logged out" tests="2" time="1.866483568" failures="0" errors="0" skipped="0">
  <testcase name="Api::FaqsController#rate logged out should support downvote with no reason" time="0.897018109">
  </testcase>
  <testcase name="Api::FaqsController#rate logged out should support downvote with a reason" time="0.968874027">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::FaqsController#rate" tests="1" time="1.267679723" failures="0" errors="0" skipped="0">
  <testcase name="Api::FaqsController#rate should return error if no FAQ found" time="1.267386383">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::FaqsController" tests="0" time="0.000302833" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::HelpController#faq_category" tests="2" time="1.743724113" failures="0" errors="0" skipped="0">
  <testcase name="Api::HelpController#faq_category filter out Faqs by platform, if given" time="0.875950422">
  </testcase>
  <testcase name="Api::HelpController#faq_category doesn't filter out Faqs by platform, if not given" time="0.867244311">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::HelpController#faq" tests="2" time="1.684924368" failures="0" errors="0" skipped="0">
  <testcase name="Api::HelpController#faq should return a 404 for a missing FAQ" time="0.804379416">
  </testcase>
  <testcase name="Api::HelpController#faq should return a 200 for a valid FAQ" time="0.880103417">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::HelpController#search" tests="3" time="2.360677718" failures="0" errors="0" skipped="0">
  <testcase name="Api::HelpController#search should work" time="0.777249541">
  </testcase>
  <testcase name="Api::HelpController#search should fail gracefully if there is a `ThinkingSphinx::SphinxError`" time="0.814546828">
  </testcase>
  <testcase name="Api::HelpController#search should fail gracefully if there is a `Riddle::ResponseError`" time="0.7683308">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::HelpController#submit_contact logged in" tests="4" time="6.948466648" failures="0" errors="0" skipped="0">
  <testcase name="Api::HelpController#submit_contact logged in should require a message" time="1.335587717">
  </testcase>
  <testcase name="Api::HelpController#submit_contact logged in should support basic form input" time="1.411023388">
  </testcase>
  <testcase name="Api::HelpController#submit_contact logged in should support reservation confirmation_code" time="1.917499321">
  </testcase>
  <testcase name="Api::HelpController#submit_contact logged in should support reservation id" time="2.283634245">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::HelpController#submit_contact" tests="1" time="0.85570347" failures="0" errors="0" skipped="0">
  <testcase name="Api::HelpController#submit_contact should not allow logged out submission" time="0.855412099">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::HelpController" tests="0" time="0.000229686" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::HelpVideosController#index" tests="1" time="0.901698731" failures="0" errors="0" skipped="0">
  <testcase name="Api::HelpVideosController#index should return all published videos" time="0.901373883">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::HelpVideosController#show" tests="2" time="1.683493303" failures="0" errors="0" skipped="0">
  <testcase name="Api::HelpVideosController#show should return the specified video" time="0.848448325">
  </testcase>
  <testcase name="Api::HelpVideosController#show should return 404 if not found" time="0.834379713">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::HelpVideosController" tests="0" time="0.000226449" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::I18nController#locale_from_host" tests="2" time="2.190212931" failures="0" errors="0" skipped="0">
  <testcase name="Api::I18nController#locale_from_host should return an error if 'host' is missing" time="0.929146208">
  </testcase>
  <testcase name="Api::I18nController#locale_from_host should return the proper locale for a given host" time="1.260602072">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::I18nController#localization_settings" tests="10" time="8.319586515" failures="0" errors="0" skipped="0">
  <testcase name="Api::I18nController#localization_settings should return defaults if no params" time="0.803884599">
  </testcase>
  <testcase name="Api::I18nController#localization_settings should work for German in Brazil" time="0.833893814">
  </testcase>
  <testcase name="Api::I18nController#localization_settings should work for German in Germany" time="0.78378302">
  </testcase>
  <testcase name="Api::I18nController#localization_settings should work for German in Switzerland" time="0.799655366">
  </testcase>
  <testcase name="Api::I18nController#localization_settings should look at geolocated_country instead of geolocating ip_address if both present" time="1.101712199">
  </testcase>
  <testcase name="Api::I18nController#localization_settings should geolocate IP address" time="0.797001488">
  </testcase>
  <testcase name="Api::I18nController#localization_settings should obey override locale" time="0.780903745">
  </testcase>
  <testcase name="Api::I18nController#localization_settings should obey override country" time="0.783347958">
  </testcase>
  <testcase name="Api::I18nController#localization_settings should obey the locale and country indicated by the host" time="0.795283403">
  </testcase>
  <testcase name="Api::I18nController#localization_settings should not redirect to non-existing names" time="0.838754115">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::I18nController" tests="0" time="0.000285946" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingDescriptionsController#delete a HostingDescription that does exist" tests="1" time="1.823550481" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingDescriptionsController#delete a HostingDescription that does exist should delete the HostingDescription" time="1.82301447">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingDescriptionsController#delete a HostingDescription that does not exist" tests="1" time="1.472151694" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingDescriptionsController#delete a HostingDescription that does not exist should fail with 404" time="1.471805182">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingDescriptionsController#delete" tests="0" time="0.000193634" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingDescriptionsController#index when accessed by a user that does not own the Hosting" tests="1" time="2.530699726" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingDescriptionsController#index when accessed by a user that does not own the Hosting should return 403" time="2.530358621">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingDescriptionsController#index with HostingDescriptions" tests="1" time="1.480001381" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingDescriptionsController#index with HostingDescriptions should return :long hosting_descriptions for each result" time="1.479579799">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingDescriptionsController#index with no HostingDescriptions" tests="1" time="1.821682095" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingDescriptionsController#index with no HostingDescriptions should return an empty array" time="1.821242991">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingDescriptionsController#index" tests="0" time="0.00016198" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingDescriptionsController#update with attributes that are not yet exposed to the api" tests="1" time="1.813604244" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingDescriptionsController#update with attributes that are not yet exposed to the api should fail to set those attributes" time="1.813130021">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingDescriptionsController#update with valid attributes for locale that already exists" tests="1" time="1.54116971" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingDescriptionsController#update with valid attributes for locale that already exists should update successfully" time="1.540784075">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingDescriptionsController#update with valid attributes for locale that does not yet exist" tests="3" time="5.210123182" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingDescriptionsController#update with valid attributes for locale that does not yet exist should say it was successful" time="1.558530286">
  </testcase>
  <testcase name="Api::ListingDescriptionsController#update with valid attributes for locale that does not yet exist should return the listing description in the response" time="1.800302903">
  </testcase>
  <testcase name="Api::ListingDescriptionsController#update with valid attributes for locale that does not yet exist should update the hosting description model" time="1.850522613">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingDescriptionsController#update with valid attributes" tests="1" time="2.308813805" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingDescriptionsController#update with valid attributes should fail on hostings the user does not own" time="2.308522614">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingDescriptionsController#update" tests="0" time="0.000185073" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingDescriptionsController" tests="0" time="0.000296298" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#available availability: when dates are available" tests="1" time="1.320008196" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#available availability: when dates are available returns available = true" time="1.319631114">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#available availability: when global maximum lenghth of stay is exceeded" tests="1" time="1.295799603" failures="0" errors="0" skipped="1">
  <testcase name="Api::ListingsController#available availability: when global maximum lenghth of stay is exceeded returns that the listing is not available (PENDING)" time="1.295428067">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#available availability: when hosting capacity is exceeded" tests="1" time="1.704979972" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#available availability: when hosting capacity is exceeded returns an error" time="1.70460981">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#available availability: when pricing service returns not available" tests="1" time="1.665618208" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#available availability: when pricing service returns not available returns that the listing is not available" time="1.665230406">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#available availability:" tests="0" time="0.000167766" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#available logging when the listing is available" tests="1" time="1.302991468" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#available logging when the listing is available logs the pricing event with the pricing payload" time="1.302530023">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#available logging when the listing is not available" tests="1" time="1.63647364" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#available logging when the listing is not available logs the pricing event" time="1.636007905">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#available logging" tests="1" time="1.666414733" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#available logging logs the pricing p3 event" time="1.666081278">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#available validation when missing checkin and checkout params" tests="1" time="1.344101353" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#available validation when missing checkin and checkout params returns an error indicating that a parameter was missing" time="1.343737723">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#available validation when the checkin date is invalid" tests="1" time="1.809523747" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#available validation when the checkin date is invalid returns a 400" time="1.809165918">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#available validation when the checkout date is invalid" tests="1" time="1.432750652" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#available validation when the checkout date is invalid returns a 400" time="1.432375168">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#available validation when the hosting does not exist" tests="1" time="2.143282773" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#available validation when the hosting does not exist returns a 404" time="2.142855966">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#available validation" tests="0" time="0.00019305" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#available" tests="0" time="0.000192034" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#city_count" tests="1" time="1.390527664" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#city_count should return the counts as json" time="1.390149623">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#create when called with no city" tests="1" time="1.545453589" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#create when called with no city should return an error" time="1.544756716">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#create when called with no person_capacity" tests="1" time="1.731024071" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#create when called with no person_capacity should return an error" time="1.730013862">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#create when called with no property_type_id" tests="1" time="1.350764045" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#create when called with no property_type_id should return an error" time="1.350352336">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#create when called with no room_type_category" tests="1" time="1.707774975" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#create when called with no room_type_category should return an error" time="1.707363208">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#create when the room_type_category param is invalid but the room_type param is valid" tests="1" time="1.516001765" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#create when the room_type_category param is invalid but the room_type param is valid should use the room_type value" time="1.515529348">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
Client attempted to override key: bev with value: 
Client attempted to override key: bev with value: 
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#create when the room_type_category param is invalid" tests="1" time="1.691501061" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#create when the room_type_category param is invalid should return a 400" time="1.69109938">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#create when we pass the legacy room_type param but no room_type_category" tests="1" time="1.48603847" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#create when we pass the legacy room_type param but no room_type_category should still create a hosting using the room_type value" time="1.485575491">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
Client attempted to override key: bev with value: 
Client attempted to override key: bev with value: 
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#create" tests="1" time="2.34308976" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#create should create a hosting" time="2.342563975">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
Client attempted to override key: bev with value: 
Client attempted to override key: bev with value: 
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#photography with available photographers" tests="4" time="10.005867629" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#photography with available photographers returns an available photography status" time="2.296760494">
  </testcase>
  <testcase name="Api::ListingsController#photography with available photographers allows photography to be requested" time="2.679005068">
  </testcase>
  <testcase name="Api::ListingsController#photography with available photographers allows photography to be canceled after it's been requested" time="2.745792315">
  </testcase>
  <testcase name="Api::ListingsController#photography with available photographers does not allow photography to be cancelled if it has not been requested" time="2.283482639">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#photography without available photographers" tests="2" time="3.329104433" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#photography without available photographers returns an unavailable photography status" time="1.521368035">
  </testcase>
  <testcase name="Api::ListingsController#photography without available photographers does not allow photography to be requested" time="1.807209">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#photography" tests="1" time="2.915215621" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#photography shouldn't allow access by an authorized user" time="2.914892073">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#reviews when logged in as a random user" tests="1" time="2.883172091" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#reviews when logged in as a random user returns reviews for a hosting requested by params[:id]" time="2.88281121">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#reviews when logged in as the guest who wrote the review" tests="1" time="2.466502671" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#reviews when logged in as the guest who wrote the review returns reviews for a hosting requested by params[:id]" time="2.466115785">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#reviews when logged in as the owner of the listing" tests="1" time="2.400649239" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#reviews when logged in as the owner of the listing returns reviews for a hosting requested by params[:id]" time="2.400235585">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#reviews when not logged in" tests="1" time="2.321308022" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#reviews when not logged in returns reviews for a hosting requested by params[:id]" time="2.320944011">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#reviews" tests="0" time="0.000188284" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#search collection_id" tests="1" time="2.286294334" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#search collection_id supports the 'collection_id' param" time="2.285922736">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#search offset" tests="2" time="4.750678615" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#search offset should limit to 1000 results if using private api key" time="2.151812416">
  </testcase>
  <testcase name="Api::ListingsController#search offset should allow more than 1000 results if not using private api key" time="2.598325469">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#search" tests="1" time="2.678969558" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#search returns a :tiny user for each result" time="2.678621825">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#show when logged in as a random user" tests="1" time="2.27606585" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#show when logged in as a random user finds the hosting requested by params[:id]" time="2.27567789">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#show when logged in as the hosting owner" tests="1" time="1.843753633" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#show when logged in as the hosting owner finds the hosting requested by params[:id]" time="1.843349157">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#show when not logged in" tests="1" time="2.446715175" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#show when not logged in finds the hosting requested by params[:id]" time="2.446335875">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#show" tests="0" time="0.00016031" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#unavailabilities when not logged in when the inputted end_date is too far in the future" tests="1" time="1.704635142" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#unavailabilities when not logged in when the inputted end_date is too far in the future falls back to the default end_date" time="1.70407849">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#unavailabilities when not logged in" tests="4" time="5.972256517" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#unavailabilities when not logged in returns 200" time="1.348693891">
  </testcase>
  <testcase name="Api::ListingsController#unavailabilities when not logged in sets nil start_date and end_date params to default values" time="1.65530427">
  </testcase>
  <testcase name="Api::ListingsController#unavailabilities when not logged in returns an error when the start_date &gt; end_date" time="1.63055133">
  </testcase>
  <testcase name="Api::ListingsController#unavailabilities when not logged in returns unavailabilites when dates are marked as unavailable" time="1.336908849">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#unavailabilities" tests="1" time="2.173148847" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#unavailabilities retrieves unavailable dates" time="2.172777718">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update Api::BaseController#decode_ie_xdr_requests" tests="1" time="1.509709734" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update Api::BaseController#decode_ie_xdr_requests is called when receiving a Cross Domain Resource (IE) JSON POST" time="1.509277534">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when adding a listing to a wishlist" tests="2" time="3.952268623" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when adding a listing to a wishlist should add items to the 'Mobile Starred Listings' WL, and create it if necessary" time="1.959745464">
  </testcase>
  <testcase name="Api::ListingsController#update when adding a listing to a wishlist should remove items from the 'Mobile Starred Listings' WL" time="1.991659275">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when adding the listing to a wishlist" tests="5" time="6.639043127" failures="0" errors="0" skipped="1">
  <testcase name="Api::ListingsController#update when adding the listing to a wishlist should add the listing to the wishlist" time="1.54413775">
  </testcase>
  <testcase name="Api::ListingsController#update when adding the listing to a wishlist should respond successfully" time="1.485492959">
  </testcase>
  <testcase name="Api::ListingsController#update when adding the listing to a wishlist should set private" time="2.052824691">
  </testcase>
  <testcase name="Api::ListingsController#update when adding the listing to a wishlist should not change privacy when private param omitted" time="1.555569712">
  </testcase>
  <testcase name="Api::ListingsController#update when adding the listing to a wishlist should log an OpenGraphAction event (PENDING)" time="0.000231279">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when removing the listing from a wishlist" tests="1" time="1.518757536" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when removing the listing from a wishlist should remove the listing from the wishlist" time="1.51837389">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when starring the listing" tests="1" time="1.511327992" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when starring the listing should respond successfully" time="1.510877917">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating address with user_defined_location not set" tests="1" time="1.640401349" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating address with user_defined_location not set should update the address triggering a geocode and rewrite of the address and lat/lng" time="1.639943526">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating address with user_defined_location set" tests="1" time="1.598568758" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating address with user_defined_location set should update the address exactly as supplied without geocoding" time="1.598142389">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating address" tests="1" time="1.652033077" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating address should set user_defined_location to true if a lat/lng is provided" time="1.651625139">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating bed_type" tests="6" time="9.718162564" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating bed_type should use bed_type_category to update hosting's bed_type" time="1.499572398">
  </testcase>
  <testcase name="Api::ListingsController#update when updating bed_type should prefer bed_type_category to bed_type" time="1.469323079">
  </testcase>
  <testcase name="Api::ListingsController#update when updating bed_type should use bed_type as a fallback if there's no bed_type_category" time="1.497041349">
  </testcase>
  <testcase name="Api::ListingsController#update when updating bed_type should not update the hosting if neither bed_type nor bed_type_category is given" time="2.291825009">
  </testcase>
  <testcase name="Api::ListingsController#update when updating bed_type should not update the hosting if bed_type is an empty string" time="1.487381453">
  </testcase>
  <testcase name="Api::ListingsController#update when updating bed_type should not update the hosting if bed_type_category is an empty string" time="1.471950471">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating cancel_policy" tests="5" time="8.321079521" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating cancel_policy should use cancellation_policy to update hosting's cancel_policy" time="1.808095087">
  </testcase>
  <testcase name="Api::ListingsController#update when updating cancel_policy should prefer cancellation_policy to cancel_policy" time="1.438068522">
  </testcase>
  <testcase name="Api::ListingsController#update when updating cancel_policy should use cancel_policy as a fallback if there's no cancellation_policy" time="1.502329197">
  </testcase>
  <testcase name="Api::ListingsController#update when updating cancel_policy should not update the hosting if neither cancel_policy nor cancellation_policy is given" time="2.049251777">
  </testcase>
  <testcase name="Api::ListingsController#update when updating cancel_policy should not update the hosting if cancellation_policy is an empty string" time="1.522442141">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating facebook_connect and there's an error with the Facebook graph" tests="2" time="2.906156372" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating facebook_connect and there's an error with the Facebook graph should return 500" time="1.485014365">
  </testcase>
  <testcase name="Api::ListingsController#update when updating facebook_connect and there's an error with the Facebook graph should return JSON with an error message that mentions Facebook" time="1.420617882">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating facebook_connect" tests="0" time="0.000232051" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating instant booking attributes" tests="1" time="1.51165214" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating instant booking attributes should save instant_book related attributes when the user is eligible" time="1.511198569">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating listing_price_native for an unavailable listing to an empty string" tests="1" time="2.123055798" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating listing_price_native for an unavailable listing to an empty string should not change the price" time="2.122558244">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating listing_price_native for an unavailable listing" tests="0" time="0.000258538" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating listing_price_native" tests="0" time="0.000268141" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating room_type" tests="6" time="9.452781161" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating room_type should use room_type_category to update hosting's room_type" time="1.518713543">
  </testcase>
  <testcase name="Api::ListingsController#update when updating room_type should prefer room_type_category to room_type" time="1.483396322">
  </testcase>
  <testcase name="Api::ListingsController#update when updating room_type should use room_type as a fallback if there's no room_type_category" time="1.50547505">
  </testcase>
  <testcase name="Api::ListingsController#update when updating room_type should not update the hosting if neither room_type nor room_type_category is given" time="1.952327205">
  </testcase>
  <testcase name="Api::ListingsController#update when updating room_type should not update the hosting if room_type is an empty string" time="1.511418324">
  </testcase>
  <testcase name="Api::ListingsController#update when updating room_type should not update the hosting if room_type_category is an empty string" time="1.480381255">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's extras_price_native and none of the relevant params are sent and the hosting had an actual extras_price_native already set" tests="1" time="1.509934209" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's extras_price_native and none of the relevant params are sent and the hosting had an actual extras_price_native already set should keep the same value for extras_price_native" time="1.509474732">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's extras_price_native and none of the relevant params are sent" tests="1" time="1.515454287" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's extras_price_native and none of the relevant params are sent should respond successfully" time="1.51504355">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's extras_price_native and the param listing_cleaning_fee_native is set to an empty string" tests="3" time="4.552647236" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's extras_price_native and the param listing_cleaning_fee_native is set to an empty string should respond successfully" time="1.533939795">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's extras_price_native and the param listing_cleaning_fee_native is set to an empty string should update the listing's extras_price_native to " time="1.51799679">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's extras_price_native and the param listing_cleaning_fee_native is set to an empty string should update the listing's extras_price to " time="1.49993384">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's extras_price_native and the param listing_cleaning_fee_native is set to a numerical string" tests="4" time="6.547506453" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's extras_price_native and the param listing_cleaning_fee_native is set to a numerical string should respond successfully" time="1.522892259">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's extras_price_native and the param listing_cleaning_fee_native is set to a numerical string should contain the new value in the response's listing object" time="1.468329169">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's extras_price_native and the param listing_cleaning_fee_native is set to a numerical string should update the listing's extras_price_native to the given number value" time="2.032295026">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's extras_price_native and the param listing_cleaning_fee_native is set to a numerical string should update the listing's extras_price to the USD-converted amount for the given number value" time="1.523241596">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's extras_price_native and the param listing_cleaning_fee_native" tests="0" time="0.000273054" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's extras_price_native" tests="0" time="0.000260967" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's monthly_price_native and none of the relevant params are sent and the hosting had an actual monthly_price_native already set" tests="1" time="2.025946669" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's monthly_price_native and none of the relevant params are sent and the hosting had an actual monthly_price_native already set should keep the same value for monthly_price_native" time="2.025388718">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's monthly_price_native and none of the relevant params are sent" tests="1" time="1.444592831" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's monthly_price_native and none of the relevant params are sent should respond successfully" time="1.444176764">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's monthly_price_native and the param listing_monthly_price_native is set to an empty string" tests="3" time="5.179465937" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's monthly_price_native and the param listing_monthly_price_native is set to an empty string should respond successfully" time="2.053668718">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's monthly_price_native and the param listing_monthly_price_native is set to an empty string should update the listing's monthly_price_native to " time="1.544669154">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's monthly_price_native and the param listing_monthly_price_native is set to an empty string should update the listing's monthly_price to " time="1.580449567">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's monthly_price_native and the param listing_monthly_price_native is set to a numerical string" tests="4" time="6.138806944" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's monthly_price_native and the param listing_monthly_price_native is set to a numerical string should respond successfully" time="1.621906637">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's monthly_price_native and the param listing_monthly_price_native is set to a numerical string should contain the new value in the response's listing object" time="1.537443227">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's monthly_price_native and the param listing_monthly_price_native is set to a numerical string should update the listing's monthly_price_native to the given number value" time="1.462898728">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's monthly_price_native and the param listing_monthly_price_native is set to a numerical string should update the listing's monthly_price to the USD-converted amount for the given number value" time="1.515792439">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's monthly_price_native and the param listing_monthly_price_native" tests="0" time="0.000260344" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's monthly_price_native" tests="0" time="0.000260889" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's price_for_extra_person_native and none of the relevant params are sent and the hosting had an actual price_for_extra_person_native already set" tests="1" time="1.506146058" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's price_for_extra_person_native and none of the relevant params are sent and the hosting had an actual price_for_extra_person_native already set should keep the same value for price_for_extra_person_native" time="1.505704497">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's price_for_extra_person_native and none of the relevant params are sent" tests="1" time="1.50593358" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's price_for_extra_person_native and none of the relevant params are sent should respond successfully" time="1.505552623">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's price_for_extra_person_native and the param listing_price_for_extra_person_native is set to an empty string" tests="3" time="4.539562395" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's price_for_extra_person_native and the param listing_price_for_extra_person_native is set to an empty string should respond successfully" time="1.533871828">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's price_for_extra_person_native and the param listing_price_for_extra_person_native is set to an empty string should update the listing's price_for_extra_person_native to 0" time="1.494355449">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's price_for_extra_person_native and the param listing_price_for_extra_person_native is set to an empty string should update the listing's price_for_extra_person to 0" time="1.510587924">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's price_for_extra_person_native and the param listing_price_for_extra_person_native is set to a numerical string" tests="4" time="6.541473803" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's price_for_extra_person_native and the param listing_price_for_extra_person_native is set to a numerical string should respond successfully" time="1.46351157">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's price_for_extra_person_native and the param listing_price_for_extra_person_native is set to a numerical string should contain the new value in the response's listing object" time="2.035751429">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's price_for_extra_person_native and the param listing_price_for_extra_person_native is set to a numerical string should update the listing's price_for_extra_person_native to the given number value" time="1.511119371">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's price_for_extra_person_native and the param listing_price_for_extra_person_native is set to a numerical string should update the listing's price_for_extra_person to the USD-converted amount for the given number value" time="1.530348897">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's price_for_extra_person_native and the param listing_price_for_extra_person_native" tests="0" time="0.000226211" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's price_for_extra_person_native" tests="0" time="0.000246256" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's weekly_price_native and none of the relevant params are sent and the hosting had an actual weekly_price_native already set" tests="1" time="1.516721078" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's weekly_price_native and none of the relevant params are sent and the hosting had an actual weekly_price_native already set should keep the same value for weekly_price_native" time="1.516296277">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's weekly_price_native and none of the relevant params are sent" tests="1" time="1.973156506" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's weekly_price_native and none of the relevant params are sent should respond successfully" time="1.97279074">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's weekly_price_native and the param listing_weekly_price_native is set to an empty string" tests="3" time="5.105319804" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's weekly_price_native and the param listing_weekly_price_native is set to an empty string should respond successfully" time="2.039534035">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's weekly_price_native and the param listing_weekly_price_native is set to an empty string should update the listing's weekly_price_native to " time="1.522206392">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's weekly_price_native and the param listing_weekly_price_native is set to an empty string should update the listing's weekly_price to " time="1.542731045">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's weekly_price_native and the param listing_weekly_price_native is set to a numerical string" tests="4" time="6.19642759" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating the listing's weekly_price_native and the param listing_weekly_price_native is set to a numerical string should respond successfully" time="1.516728274">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's weekly_price_native and the param listing_weekly_price_native is set to a numerical string should contain the new value in the response's listing object" time="1.515370547">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's weekly_price_native and the param listing_weekly_price_native is set to a numerical string should update the listing's weekly_price_native to the given number value" time="1.516549137">
  </testcase>
  <testcase name="Api::ListingsController#update when updating the listing's weekly_price_native and the param listing_weekly_price_native is set to a numerical string should update the listing's weekly_price to the USD-converted amount for the given number value" time="1.64691698">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's weekly_price_native and the param listing_weekly_price_native" tests="0" time="0.000235509" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating the listing's weekly_price_native" tests="0" time="0.000277591" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating weekend price and the listing_weekend_price_native param is an empty string" tests="1" time="2.958309743" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating weekend price and the listing_weekend_price_native param is an empty string should update the listing's weekend price to nil" time="2.957898927">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating weekend price and the listing_weekend_price_native param is not set and the hosting had a non-nil weekend price" tests="1" time="2.386246796" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating weekend price and the listing_weekend_price_native param is not set and the hosting had a non-nil weekend price should keep the same value for the weekend price" time="2.385763929">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating weekend price and the listing_weekend_price_native param is not set" tests="1" time="1.514906046" failures="0" errors="0" skipped="0">
  <testcase name="Api::ListingsController#update when updating weekend price and the listing_weekend_price_native param is not set should respond successfully" time="1.514541763">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update when updating weekend price" tests="0" time="0.000235359" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController#update" tests="0" time="0.000252152" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ListingsController" tests="0" time="0.00028217" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::NotificationDevicesController push_notification_callback" tests="2" time="2.322444314" failures="0" errors="0" skipped="0">
  <testcase name="Api::NotificationDevicesController push_notification_callback should verify the push_notification and return a 400 if the secrets don't match" time="1.293861082">
  </testcase>
  <testcase name="Api::NotificationDevicesController push_notification_callback should respond success if push notification secrets match" time="1.028094486">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::NotificationDevicesController" tests="0" time="0.000243043" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::OfficialIdController#status" tests="3" time="3.346580821" failures="0" errors="0" skipped="0">
  <testcase name="Api::OfficialIdController#status should get the status of a successful jumio result" time="1.050875332">
  </testcase>
  <testcase name="Api::OfficialIdController#status should get the status of a denied jumio result" time="1.326438281">
  </testcase>
  <testcase name="Api::OfficialIdController#status should get the status of an awaiting callback jumio result" time="0.968600941">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::OfficialIdController#supported" tests="2" time="2.311181857" failures="0" errors="0" skipped="0">
  <testcase name="Api::OfficialIdController#supported should get a list of supported countries and id types and include the US" time="1.01311872">
  </testcase>
  <testcase name="Api::OfficialIdController#supported should return countries with identifications present" time="1.297582504">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::OfficialIdController" tests="0" time="0.000228383" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#available" tests="2" time="1.920295838" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#available should return the correct response if user has no available payout infos" time="0.920648488">
  </testcase>
  <testcase name="Api::PayoutInfosController#available should return the correct response if user has available payout infos" time="0.999154541">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#countries" tests="2" time="3.048703112" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#countries returns success state" time="1.5093761">
  </testcase>
  <testcase name="Api::PayoutInfosController#countries returns country codes and names" time="1.538825944">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#country_options with country code" tests="2" time="2.43440333" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#country_options with country code returns 200" time="1.015246325">
  </testcase>
  <testcase name="Api::PayoutInfosController#country_options with country code only returns API-supported payout options, regardless of country" time="1.418717075">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#country_options without country code" tests="2" time="1.893451067" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#country_options without country code returns 400" time="0.957682204">
  </testcase>
  <testcase name="Api::PayoutInfosController#country_options without country code returns missing parameter error" time="0.935257483">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#country_options" tests="0" time="0.000189967" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#create_ach invalid input" tests="2" time="2.358194667" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#create_ach invalid input returns error error state" time="1.452051606">
  </testcase>
  <testcase name="Api::PayoutInfosController#create_ach invalid input doesn't create a new payout info" time="0.905651612">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#create_ach no pre-existing default payout" tests="1" time="1.517877112" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#create_ach no pre-existing default payout sets the new payout info as default" time="1.517539046">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#create_ach pre-existing default payout" tests="1" time="1.050442983" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#create_ach pre-existing default payout does not set the new payout info as default" time="1.050074365">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#create_ach valid input" tests="2" time="2.898146953" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#create_ach valid input creates an ach payout info with an account number" time="1.682949759">
  </testcase>
  <testcase name="Api::PayoutInfosController#create_ach valid input returns success" time="1.214685809">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#create_ach" tests="0" time="0.000189445" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#create_paypal invalid input" tests="2" time="2.181478139" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#create_paypal invalid input returns error error state" time="1.257558859">
  </testcase>
  <testcase name="Api::PayoutInfosController#create_paypal invalid input doesn't create a paypal payout info" time="0.923422136">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#create_paypal no pre-existing default payout" tests="1" time="1.936346497" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#create_paypal no pre-existing default payout sets the new payout info as default" time="1.936010341">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#create_paypal pre-existing default payout" tests="1" time="1.427615648" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#create_paypal pre-existing default payout does not set the new payout info as default" time="1.427254612">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#create_paypal valid input" tests="2" time="2.733407474" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#create_paypal valid input creates a paypal payout info" time="1.53866208">
  </testcase>
  <testcase name="Api::PayoutInfosController#create_paypal valid input returns success" time="1.194278571">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#create_paypal" tests="0" time="0.000212399" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#delete default payout info" tests="1" time="1.273979801" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#delete default payout info returns error state" time="1.273640995">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#delete payout info does not exist" tests="1" time="0.932156013" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#delete payout info does not exist returns not found" time="0.931660732">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#delete payout info exists" tests="2" time="2.383929225" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#delete payout info exists returns success state" time="1.080704428">
  </testcase>
  <testcase name="Api::PayoutInfosController#delete payout info exists fake deletes the payout info" time="1.302760226">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#delete someone else's payout info" tests="1" time="1.68217244" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#delete someone else's payout info returns unauthorized error state" time="1.681770393">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#delete" tests="0" time="0.000207024" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#envoy_form invalid input" tests="2" time="2.160793863" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#envoy_form invalid input returns error error state" time="1.230541817">
  </testcase>
  <testcase name="Api::PayoutInfosController#envoy_form invalid input doesn't create a new payout info" time="0.929705264">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#envoy_form valid input" tests="3" time="3.114986311" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#envoy_form valid input doesn't create a new payout info" time="1.245700955">
  </testcase>
  <testcase name="Api::PayoutInfosController#envoy_form valid input returns success response" time="0.947230106">
  </testcase>
  <testcase name="Api::PayoutInfosController#envoy_form valid input returns post data for envoy" time="0.92146547">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#envoy_form" tests="0" time="0.000183459" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#has_available" tests="2" time="2.478658333" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#has_available should return the correct response if user has no available payout infos" time="0.972494505">
  </testcase>
  <testcase name="Api::PayoutInfosController#has_available should return the correct response if user has available payout infos" time="1.50558972">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#set_default payout info does not exist" tests="1" time="0.978857215" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#set_default payout info does not exist returns not found" time="0.978456898">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#set_default payout info exists" tests="2" time="3.273547354" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#set_default payout info exists returns success state" time="1.569000808">
  </testcase>
  <testcase name="Api::PayoutInfosController#set_default payout info exists sets the payout info as default" time="1.704087704">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#set_default someone else's payout info" tests="1" time="1.738553111" failures="0" errors="0" skipped="0">
  <testcase name="Api::PayoutInfosController#set_default someone else's payout info returns unauthorized error state" time="1.738118234">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController#set_default" tests="0" time="0.000187208" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PayoutInfosController" tests="0" time="0.000229358" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PhrasesController#show" tests="3" time="5.601068619" failures="0" errors="0" skipped="0">
  <testcase name="Api::PhrasesController#show should return a phrase bundle's phrases" time="0.893403248">
  </testcase>
  <testcase name="Api::PhrasesController#show returns moweb phrases" time="3.86212068">
  </testcase>
  <testcase name="Api::PhrasesController#show should respond with an error if missing a phrase bundle" time="0.844868432">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::PhrasesController" tests="0" time="0.000229831" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::CouponsController create" tests="3" time="2.142583674" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::CouponsController create create a new coupon" time="0.590277739">
  </testcase>
  <testcase name="ApiPrivate::CouponsController create needs a code" time="0.657131555">
  </testcase>
  <testcase name="ApiPrivate::CouponsController create needs a department" time="0.894485684">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::CouponsController index active" tests="1" time="0.562701653" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::CouponsController index active should return a list of active coupons" time="0.562332814">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::CouponsController index certificates" tests="1" time="0.637355158" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::CouponsController index certificates should list of active certificates" time="0.63688706">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::CouponsController index expired" tests="1" time="0.7048887" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::CouponsController index expired should list of active certificates" time="0.704463885">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::CouponsController index used_certificates" tests="1" time="0.898804153" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::CouponsController index used_certificates should list of active certificates" time="0.89845958">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::CouponsController index" tests="2" time="1.173691113" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::CouponsController index should return an empty list of coupons" time="0.568080707">
  </testcase>
  <testcase name="ApiPrivate::CouponsController index should 400 if invalid filter" time="0.605174256">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::CouponsController show" tests="3" time="2.21819473" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::CouponsController show should 400 if no admin_id is given" time="0.647839369">
  </testcase>
  <testcase name="ApiPrivate::CouponsController show should 404 for non-existent coupon" time="0.641123582">
  </testcase>
  <testcase name="ApiPrivate::CouponsController show should return a coupon object" time="0.928631372">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::CouponsController" tests="0" time="0.000320681" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayinsController balance_payments" tests="6" time="4.882372887" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PayinsController balance_payments should 400 if called with no additional args" time="0.581342419">
  </testcase>
  <testcase name="ApiPrivate::PayinsController balance_payments should 400 if called with just reservation2_id" time="0.915763549">
  </testcase>
  <testcase name="ApiPrivate::PayinsController balance_payments should 400 if called with just amount" time="0.576933292">
  </testcase>
  <testcase name="ApiPrivate::PayinsController balance_payments should 404 if the reservation2 does not exist" time="0.584031485">
  </testcase>
  <testcase name="ApiPrivate::PayinsController balance_payments should 400 if the amount does not match the amount on the reservation" time="1.390755951">
  </testcase>
  <testcase name="ApiPrivate::PayinsController balance_payments should call balance_payments! on the reservation if all is well" time="0.832505964">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayinsController index" tests="3" time="2.14021805" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PayinsController index should return a payment2 object" time="0.915660841">
  </testcase>
  <testcase name="ApiPrivate::PayinsController index should return a payment2s empty list" time="0.612057129">
  </testcase>
  <testcase name="ApiPrivate::PayinsController index should return a payment2s for a reservation2 " time="0.611949421">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayinsController show" tests="3" time="2.65710772" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PayinsController show should 400 if no admin_id is given" time="1.456314293">
  </testcase>
  <testcase name="ApiPrivate::PayinsController show should 404 for non-existent payment2" time="0.629066076">
  </testcase>
  <testcase name="ApiPrivate::PayinsController show should return a payment2 object" time="0.571148982">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayinsController" tests="0" time="0.000244136" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayoutInfosController index" tests="3" time="4.312877012" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PayoutInfosController index should 400 because no filter is given" time="2.458478393">
  </testcase>
  <testcase name="ApiPrivate::PayoutInfosController index should successfully get a list of payout_infos for user" time="1.309546317">
  </testcase>
  <testcase name="ApiPrivate::PayoutInfosController index should return an empty list if a user has no payout_infos" time="0.544306294">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayoutInfosController#set_default has payout_infos" tests="3" time="4.89954457" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PayoutInfosController#set_default has payout_infos calls PayoutInfo.set_default_payout!" time="1.632103942">
  </testcase>
  <testcase name="ApiPrivate::PayoutInfosController#set_default has payout_infos returns hash saying it set payout_info as default" time="1.61114671">
  </testcase>
  <testcase name="ApiPrivate::PayoutInfosController#set_default has payout_infos set payout_info as default in the db" time="1.655610538">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayoutInfosController#set_default nonexistent payout_info" tests="1" time="0.529701797" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PayoutInfosController#set_default nonexistent payout_info returns 404" time="0.529373004">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayoutInfosController#set_default" tests="0" time="0.000210272" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayoutInfosController show" tests="2" time="2.079002179" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PayoutInfosController show should return things" time="1.522327147">
  </testcase>
  <testcase name="ApiPrivate::PayoutInfosController show should error for missing payout_info 404 error" time="0.556200186">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayoutInfosController" tests="0" time="0.000217629" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayoutsController change_payout_method" tests="4" time="5.147268906" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PayoutsController change_payout_method should be calling authorize_request" time="0.547761394">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController change_payout_method should 403 if no admin_id is given" time="1.959060168">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController change_payout_method should error if user_id differs on line_item and new payout_info" time="1.669062572">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController change_payout_method should update payout method for line_item" time="0.970575837">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayoutsController create successful creation" tests="2" time="2.246208054" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PayoutsController create successful creation return created values in json body" time="1.282960345">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController create successful creation should create the object in the db" time="0.962740868">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayoutsController create" tests="3" time="2.95260249" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PayoutsController create should be calling authorize_request" time="0.575183404">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController create should 403 if no admin_id is given" time="1.81435902">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController create should error if line_item validation fails" time="0.562386283">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayoutsController index" tests="5" time="5.476409813" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PayoutsController index should be calling authorize_request" time="0.585992895">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController index should return a line_item object" time="1.335054674">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController index should return an empty list of line_items" time="0.589753769">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController index should return a line_items for a reservation2 " time="2.405025638">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController index should 400 if 2 filters are provided" time="0.559773537">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayoutsController show" tests="4" time="3.514836307" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PayoutsController show should be calling authorize_request" time="0.635514622">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController show should 403 if no admin_id is given" time="1.047907247">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController show should 404 for non-existent line_item" time="0.904784442">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController show should return a line_item object" time="0.925842728">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayoutsController update stuff successful update" tests="2" time="1.962725299" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PayoutsController update stuff successful update return updated values in json body" time="1.005137334">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController update stuff successful update should update the value in the database" time="0.956286308">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayoutsController update stuff" tests="3" time="3.599899716" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PayoutsController update stuff should be calling authorize_request" time="0.601948217">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController update stuff should 403 if no admin_id is given" time="1.706609087">
  </testcase>
  <testcase name="ApiPrivate::PayoutsController update stuff should error if line_item validation fails" time="1.2907851">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PayoutsController" tests="0" time="0.000267906" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PushNotificationsController create" tests="2" time="1.468845013" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PushNotificationsController create needs a real recipient" time="0.626682457">
  </testcase>
  <testcase name="ApiPrivate::PushNotificationsController create creates a new push notification" time="0.841509658">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PushNotificationsController test" tests="1" time="1.235747634" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::PushNotificationsController test tests a new push notification" time="1.235406863">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::PushNotificationsController" tests="0" time="0.000274113" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::ReservationsController accept" tests="6" time="24.050721188" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::ReservationsController accept should 403 if no admin_id is given" time="4.416142634">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController accept should 404 for non-existent reservation2" time="0.626341462">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController accept should 400 when reservation is not pending" time="4.498337536">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController accept should 200 when reservation is pending" time="4.837025052">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController accept should return the updated reservation info" time="4.827576201">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController accept should change reservation to accepted state" time="4.844331231">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::ReservationsController add_coupon" tests="6" time="8.181873144" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::ReservationsController add_coupon should 403 if no admin_id is given" time="1.394126853">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController add_coupon should 404 for non-existent reservation2" time="0.570723526">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController add_coupon should 400 for non-existent coupon" time="1.844158017">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController add_coupon should apply coupon" time="1.511352961">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController add_coupon should return proper response after apply coupon" time="1.40513551">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController add_coupon should not apply expired coupon" time="1.455371618">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::ReservationsController cancel" tests="7" time="10.960060493" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::ReservationsController cancel should 403 if no admin_id is given" time="1.412136925">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController cancel should 404 for non-existent reservation2" time="0.615172178">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController cancel should 400 if cancel type is not given" time="1.439455558">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController cancel should 400 if cancel type is not valid" time="1.879627457">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController cancel should return valid response if cancel has failed" time="1.390952492">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController cancel should change reservation status if cancel has succeeded" time="2.004199475">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController cancel should return valid response if cancel has succeeded" time="2.21748453">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::ReservationsController clear_coupon" tests="4" time="5.404225204" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::ReservationsController clear_coupon should 403 if no admin_id is given" time="1.925111781">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController clear_coupon should 404 for non-existent reservation2" time="0.58897472">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController clear_coupon should clear applied coupon" time="1.458353023">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController clear_coupon should return proper response after clear" time="1.430992386">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::ReservationsController decline" tests="8" time="33.881562973" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::ReservationsController decline should 403 if no admin_id is given" time="4.702640346">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController decline should 404 for non-existent reservation2" time="0.608757713">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController decline should 400 when reservation is not pending" time="4.465328204">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController decline should 200 when reservation is pending" time="4.88810955">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController decline should return the updated reservation info" time="4.561512286">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController decline should change reservation to accepted state" time="4.993244165">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController decline should block dates if option is set" time="4.626322882">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController decline should not block dates if option is not set" time="5.034267877">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::ReservationsController revive" tests="7" time="13.79412333" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::ReservationsController revive should 403 if no admin_id is given" time="1.866137485">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController revive should 404 for non-existent reservation2" time="0.600316132">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController revive should 400 when reservation is not canceled" time="1.418542233">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController revive should 200 when reservation is canceled" time="1.948868937">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController revive should return the updated reservation info" time="1.506659318">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController revive should 400 if balance payments fails" time="4.223727663">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController revive should 400 when a Reservation2::Error is raised on Reservation2#revive!" time="2.22874985">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::ReservationsController show" tests="3" time="3.986492892" failures="0" errors="0" skipped="0">
  <testcase name="ApiPrivate::ReservationsController show should 403 if no admin_id is given" time="1.45396615">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController show should 404 for non-existent reservation2" time="0.626257007">
  </testcase>
  <testcase name="ApiPrivate::ReservationsController show should return a reservation2 object" time="1.905691021">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApiPrivate::ReservationsController" tests="0" time="0.000262792" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create reservations without special offers with hostings with needs_to_message (villages)" tests="2" time="3.644265308" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create reservations without special offers with hostings with needs_to_message (villages) allows bookings with a message response" time="2.002068811">
  </testcase>
  <testcase name="Api::ReservationsController#create reservations without special offers with hostings with needs_to_message (villages) does not allow bookings without a message response" time="1.64168423">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create reservations without special offers" tests="3" time="5.09094867" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create reservations without special offers creates a new reservation with valid reservation parameters" time="1.703204073">
  </testcase>
  <testcase name="Api::ReservationsController#create reservations without special offers displays descriptive error messages for maximum number of guests requirements" time="1.382132992">
  </testcase>
  <testcase name="Api::ReservationsController#create reservations without special offers presents an error message for stays greater than 28 days" time="2.00507706">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create reservations with special offers" tests="1" time="1.743152043" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create reservations with special offers creates a new reservation with a special offer" time="1.742741862">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with a special offer persistence" tests="1" time="2.434868633" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when logged in with a special offer persistence persists the reservation to the data store" time="2.434512303">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with a special offer response" tests="1" time="2.205436342" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when logged in with a special offer response returns a reservation" time="2.205058714">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with a special offer validation" tests="2" time="4.059382041" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when logged in with a special offer validation validates the owner of the special offer" time="2.02907911">
  </testcase>
  <testcase name="Api::ReservationsController#create when logged in with a special offer validation validates that the special offer exists" time="2.029762765">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with a special offer" tests="0" time="0.000160071" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in without a special offer persistence" tests="1" time="2.38494955" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when logged in without a special offer persistence saves a reservation to the data store" time="2.384587257">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in without a special offer response" tests="1" time="2.064271102" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when logged in without a special offer response returns a reservation" time="2.063938021">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in without a special offer validation" tests="5" time="10.15070059" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when logged in without a special offer validation validates that the hosting exists" time="1.830402152">
  </testcase>
  <testcase name="Api::ReservationsController#create when logged in without a special offer validation validates that start_date is set" time="1.736139029">
  </testcase>
  <testcase name="Api::ReservationsController#create when logged in without a special offer validation validates the number of nights, defaulting it to 1 if &gt; Airbnb::STAY_MAX_NIGHTS" time="2.333093891">
  </testcase>
  <testcase name="Api::ReservationsController#create when logged in without a special offer validation validates the number_of_guests is between 1 and 16, defaulting to 1 if &gt;16" time="2.538159015">
  </testcase>
  <testcase name="Api::ReservationsController#create when logged in without a special offer validation validates the checkin date is not in the past" time="1.712058477">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in without a special offer" tests="0" time="0.000186978" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with/without a special offer google wallet coupon when trebuchet feature is launched logging" tests="1" time="2.4226357" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when logged in with/without a special offer google wallet coupon when trebuchet feature is launched logging logs the google wallet coupon" time="2.4221707">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with/without a special offer google wallet coupon when trebuchet feature is launched persistence" tests="1" time="2.063182566" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when logged in with/without a special offer google wallet coupon when trebuchet feature is launched persistence applies the google wallet coupon" time="2.06281174">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with/without a special offer google wallet coupon when trebuchet feature is launched response" tests="1" time="2.321704675" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when logged in with/without a special offer google wallet coupon when trebuchet feature is launched response applies the google wallet coupon" time="2.321362636">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with/without a special offer google wallet coupon when trebuchet feature is launched" tests="0" time="0.000169836" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with/without a special offer google wallet coupon when trebuchet feature is not launched" tests="1" time="2.105789915" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when logged in with/without a special offer google wallet coupon when trebuchet feature is not launched applies the google wallet coupon" time="2.105409525">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with/without a special offer google wallet coupon" tests="0" time="0.000188005" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with/without a special offer logging" tests="1" time="1.935007887" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when logged in with/without a special offer logging logs the CheckoutFlowEvent" time="1.934620123">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with/without a special offer reservation errors" tests="1" time="1.709060601" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when logged in with/without a special offer reservation errors renders an error when Reservation2.begin_reservation throws a Reservation2::Error" time="1.708721953">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with/without a special offer validation with hostings with needs_to_message (countries &amp; villages)" tests="2" time="4.82371304" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when logged in with/without a special offer validation with hostings with needs_to_message (countries &amp; villages) allows bookings with a message response" time="2.841716872">
  </testcase>
  <testcase name="Api::ReservationsController#create when logged in with/without a special offer validation with hostings with needs_to_message (countries &amp; villages) does not allow bookings without a message response" time="1.981098819">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with/without a special offer validation" tests="1" time="2.08841982" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when logged in with/without a special offer validation validates that the reservation does not have monthly pricing" time="2.088051019">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when logged in with/without a special offer" tests="0" time="0.000205781" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create when not logged in" tests="1" time="0.793180629" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#create when not logged in returns an error" time="0.792808113">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#create" tests="0" time="0.000205053" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#pay with an existing payment instrument" tests="2" time="4.375821294" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#pay with an existing payment instrument should accept payment from an existing, valid credit card" time="2.624027923">
  </testcase>
  <testcase name="Api::ReservationsController#pay with an existing payment instrument should fail to process with an invalid credit card" time="1.751335678">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/lib/calendar/constants/definition.rb:7: warning: already initialized constant SQUARE
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#pay with providing a new payment instrument" tests="3" time="6.193587679" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#pay with providing a new payment instrument should accept payment for a valid reservation with a valid credit card number" time="2.002468293">
  </testcase>
  <testcase name="Api::ReservationsController#pay with providing a new payment instrument should present an error if billing address is missing" time="1.641131661">
  </testcase>
  <testcase name="Api::ReservationsController#pay with providing a new payment instrument should not allow a guest to be charged twice for a reservation" time="2.54901148">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#pay" tests="0" time="0.000181053" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#relationship accessing unauthorized threads or reservations" tests="3" time="7.975061766" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#relationship accessing unauthorized threads or reservations prevents access supplying reservation_id" time="2.380650853">
  </testcase>
  <testcase name="Api::ReservationsController#relationship accessing unauthorized threads or reservations prevents access supplying thread_id" time="2.296294371">
  </testcase>
  <testcase name="Api::ReservationsController#relationship accessing unauthorized threads or reservations only returns user object when supplying user_id" time="3.297469758">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#relationship" tests="3" time="7.755380137" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#relationship fetches the correct reservation with reservation_id" time="2.894469743">
  </testcase>
  <testcase name="Api::ReservationsController#relationship fetches the correct reservation with related thread_id" time="2.191471705">
  </testcase>
  <testcase name="Api::ReservationsController#relationship fetches the correct reservation with related user_id" time="2.668898741">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController#show" tests="3" time="6.753485915" failures="0" errors="0" skipped="0">
  <testcase name="Api::ReservationsController#show shows the reservation to the guest" time="2.254962569">
  </testcase>
  <testcase name="Api::ReservationsController#show shows the reservation to the host" time="2.399360931">
  </testcase>
  <testcase name="Api::ReservationsController#show renders an error for random users" time="2.09857286">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ReservationsController" tests="0" time="0.000339879" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ThreadsController#create with inquiry parameters" tests="3" time="5.089587723" failures="0" errors="0" skipped="0">
  <testcase name="Api::ThreadsController#create with inquiry parameters should create an inquiry post if given additional params" time="2.044156916">
  </testcase>
  <testcase name="Api::ThreadsController#create with inquiry parameters should return a validation error if given invalid checkin" time="1.665583174">
  </testcase>
  <testcase name="Api::ThreadsController#create with inquiry parameters should return a validation error if given invalid checkout" time="1.379218054">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ThreadsController#create" tests="1" time="2.047376322" failures="0" errors="0" skipped="0">
  <testcase name="Api::ThreadsController#create should create a post with a message" time="2.047068717">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ThreadsController#index" tests="2" time="6.976584678" failures="0" errors="0" skipped="0">
  <testcase name="Api::ThreadsController#index should load index" time="2.824627246">
  </testcase>
  <testcase name="Api::ThreadsController#index should load index with offset" time="4.151534772">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ThreadsController#update with special offer with invalid value for nights param" tests="4" time="9.456159716" failures="0" errors="0" skipped="0">
  <testcase name="Api::ThreadsController#update with special offer with invalid value for nights param should return validation error if nights is a non-numeric string" time="1.922606032">
  </testcase>
  <testcase name="Api::ThreadsController#update with special offer with invalid value for nights param should properly round a floating-point number string" time="2.528176692">
  </testcase>
  <testcase name="Api::ThreadsController#update with special offer with invalid value for nights param should properly round a floating-point number" time="2.591189243">
  </testcase>
  <testcase name="Api::ThreadsController#update with special offer with invalid value for nights param should return validation error if nights is a hex string" time="2.413406827">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ThreadsController#update with special offer" tests="4" time="9.638828104" failures="0" errors="0" skipped="0">
  <testcase name="Api::ThreadsController#update with special offer should create a special offer if given one" time="2.81953376">
  </testcase>
  <testcase name="Api::ThreadsController#update with special offer should return validation error if special offer fails to save" time="1.941199114">
  </testcase>
  <testcase name="Api::ThreadsController#update with special offer should return validation error if special offer dates are not available" time="2.252503647">
  </testcase>
  <testcase name="Api::ThreadsController#update with special offer should return validation error if date doesn't parse" time="2.624960387">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ThreadsController#update" tests="0" time="0.000181474" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::ThreadsController" tests="0" time="0.000222459" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::TrebuchetController multi" tests="1" time="0.820047758" failures="0" errors="0" skipped="0">
  <testcase name="Api::TrebuchetController multi should support multiple features" time="0.819600343">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::TrebuchetController show" tests="2" time="1.630150116" failures="0" errors="0" skipped="0">
  <testcase name="Api::TrebuchetController show should support a single feature, if it doesn't exist" time="0.830402796">
  </testcase>
  <testcase name="Api::TrebuchetController show should support a single feature, if it does exist" time="0.799318802">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::TrebuchetController" tests="0" time="0.000219695" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::UsersController#listings when getting the requested user's listings" tests="2" time="7.930665679" failures="0" errors="0" skipped="0">
  <testcase name="Api::UsersController#listings when getting the requested user's listings should default to returning only available listings" time="3.70367937">
  </testcase>
  <testcase name="Api::UsersController#listings when getting the requested user's listings should respect the include_unavailable parameter" time="4.226442985">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::UsersController#listings" tests="0" time="0.00016139" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::UsersController#show when logged in as a random user" tests="1" time="1.821859227" failures="0" errors="0" skipped="0">
  <testcase name="Api::UsersController#show when logged in as a random user shows the user" time="1.821451622">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::UsersController#show when logged in as the same user" tests="1" time="1.741059934" failures="0" errors="0" skipped="0">
  <testcase name="Api::UsersController#show when logged in as the same user shows the user" time="1.740542009">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::UsersController#show when not logged in" tests="1" time="1.63035901" failures="0" errors="0" skipped="0">
  <testcase name="Api::UsersController#show when not logged in shows the user" time="1.63001892">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::UsersController#show" tests="0" time="0.000165592" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Api::UsersController" tests="0" time="0.00022702" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApplicationHelper date formatting" tests="5" time="1.929276128" failures="0" errors="0" skipped="0">
  <testcase name="ApplicationHelper date formatting should correctly internationalize dates and timestamps in English" time="0.364907394">
  </testcase>
  <testcase name="ApplicationHelper date formatting should correctly internationalize dates and timestamps in French" time="0.402806849">
  </testcase>
  <testcase name="ApplicationHelper date formatting should correctly internationalize dates and timestamps in Japanese" time="0.408704625">
  </testcase>
  <testcase name="ApplicationHelper date formatting should treat Dates and Times the same in English" time="0.393087842">
  </testcase>
  <testcase name="ApplicationHelper date formatting should treat Dates and Times the same in English" time="0.357415502">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApplicationHelper nest_params_in_form" tests="4" time="1.541222591" failures="0" errors="0" skipped="0">
  <testcase name="ApplicationHelper nest_params_in_form should generate fields" time="0.420613859">
  </testcase>
  <testcase name="ApplicationHelper nest_params_in_form should generate fields for nested arrays" time="0.380273651">
  </testcase>
  <testcase name="ApplicationHelper nest_params_in_form should generate fields for nested hashes" time="0.385253446">
  </testcase>
  <testcase name="ApplicationHelper nest_params_in_form should return an html_safe string" time="0.353396245">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApplicationHelper smarter_time_ago_in_words" tests="9" time="4.672232194" failures="0" errors="0" skipped="0">
  <testcase name="ApplicationHelper smarter_time_ago_in_words should work for nil" time="0.415508254">
  </testcase>
  <testcase name="ApplicationHelper smarter_time_ago_in_words should work for a few minutes ago" time="0.366471097">
  </testcase>
  <testcase name="ApplicationHelper smarter_time_ago_in_words should work for a few hours ago" time="0.384172097">
  </testcase>
  <testcase name="ApplicationHelper smarter_time_ago_in_words should work for yesterday" time="0.389256045">
  </testcase>
  <testcase name="ApplicationHelper smarter_time_ago_in_words should work for a few days ago" time="0.380922545">
  </testcase>
  <testcase name="ApplicationHelper smarter_time_ago_in_words should work for a few weeks ago, last year" time="0.372536932">
  </testcase>
  <testcase name="ApplicationHelper smarter_time_ago_in_words should work for a few weeks ago, this year" time="0.389233367">
  </testcase>
  <testcase name="ApplicationHelper smarter_time_ago_in_words should work with timezones today" time="1.231922052">
  </testcase>
  <testcase name="ApplicationHelper smarter_time_ago_in_words should work with yesterday" time="0.738927224">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApplicationHelper thread timestamps" tests="4" time="3.577489385" failures="0" errors="0" skipped="0">
  <testcase name="ApplicationHelper thread timestamps should convert to a given valid timezone" time="0.746669095">
  </testcase>
  <testcase name="ApplicationHelper thread timestamps should not blow up with a blank timezone" time="1.294806724">
  </testcase>
  <testcase name="ApplicationHelper thread timestamps should not blow up with a nil timezone" time="0.773309756">
  </testcase>
  <testcase name="ApplicationHelper thread timestamps should not blow up with a nonsense timezone" time="0.760512231">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApplicationHelper time_ago_in_days_weeks_months" tests="8" time="3.126796935" failures="0" errors="0" skipped="0">
  <testcase name="ApplicationHelper time_ago_in_days_weeks_months should work for nil" time="0.409207362">
  </testcase>
  <testcase name="ApplicationHelper time_ago_in_days_weeks_months should work for a few minutes ago" time="0.420252383">
  </testcase>
  <testcase name="ApplicationHelper time_ago_in_days_weeks_months should work for a few hours ago" time="0.381130976">
  </testcase>
  <testcase name="ApplicationHelper time_ago_in_days_weeks_months should work for yesterday" time="0.390285085">
  </testcase>
  <testcase name="ApplicationHelper time_ago_in_days_weeks_months should work for a few days ago" time="0.385350415">
  </testcase>
  <testcase name="ApplicationHelper time_ago_in_days_weeks_months should work for a week ago" time="0.373356811">
  </testcase>
  <testcase name="ApplicationHelper time_ago_in_days_weeks_months should work for a few weeks ago" time="0.38474135">
  </testcase>
  <testcase name="ApplicationHelper time_ago_in_days_weeks_months should work for a few months ago" time="0.378957836">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ApplicationHelper" tests="0" time="0.001630605" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="a search for a location an associated hero image without a specific hero image" tests="1" time="0.39459516" failures="0" errors="0" skipped="0">
  <testcase name="a search for a location an associated hero image without a specific hero image defaults to a generic one" time="0.394052158">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="a search for a location an associated hero image" tests="1" time="0.405250408" failures="0" errors="0" skipped="0">
  <testcase name="a search for a location an associated hero image is a search specific one for a top10 market" time="0.40488351">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="a search for a location" tests="1" time="0.968276529" failures="0" errors="0" skipped="0">
  <testcase name="a search for a location has a name" time="0.967903979">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AttributeStat get_shared_attributes and get_overview work correctly" tests="1" time="6.299649733" failures="0" errors="0" skipped="0">
  <testcase name="AttributeStat get_shared_attributes and get_overview work correctly should return list of attributes shared between multiple users" time="6.299209771">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AttributeStat" tests="0" time="0.000235239" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BackgroundCheckReview when reviewing a BackgroundCheckReview #approve_with_reason!" tests="1" time="1.241324628" failures="0" errors="0" skipped="0">
  <testcase name="BackgroundCheckReview when reviewing a BackgroundCheckReview #approve_with_reason! updates the reason field to new reason value" time="1.240970719">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BackgroundCheckReview when reviewing a BackgroundCheckReview #deny_with_reason!" tests="1" time="0.74903013" failures="0" errors="0" skipped="0">
  <testcase name="BackgroundCheckReview when reviewing a BackgroundCheckReview #deny_with_reason! updates the reason field to new reason value" time="0.748696521">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BackgroundCheckReview when reviewing a BackgroundCheckReview #reset_state! when previously approved" tests="2" time="2.123317866" failures="0" errors="0" skipped="0">
  <testcase name="BackgroundCheckReview when reviewing a BackgroundCheckReview #reset_state! when previously approved resets to pending" time="1.072138034">
  </testcase>
  <testcase name="BackgroundCheckReview when reviewing a BackgroundCheckReview #reset_state! when previously approved destroys previous admin flag" time="1.050693998">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BackgroundCheckReview when reviewing a BackgroundCheckReview #reset_state! when previously denied" tests="2" time="2.128117128" failures="0" errors="0" skipped="0">
  <testcase name="BackgroundCheckReview when reviewing a BackgroundCheckReview #reset_state! when previously denied resets to pending" time="1.079710103">
  </testcase>
  <testcase name="BackgroundCheckReview when reviewing a BackgroundCheckReview #reset_state! when previously denied destroys previous admin flag" time="1.047939491">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BackgroundCheckReview when reviewing a BackgroundCheckReview #reset_state! when previously pending" tests="1" time="0.736882037" failures="0" errors="0" skipped="0">
  <testcase name="BackgroundCheckReview when reviewing a BackgroundCheckReview #reset_state! when previously pending does nothing" time="0.736499795">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BackgroundCheckReview when reviewing a BackgroundCheckReview #reset_state! when previously requiring additional verification when redacting ghosting" tests="2" time="2.163184058" failures="0" errors="0" skipped="0">
  <testcase name="BackgroundCheckReview when reviewing a BackgroundCheckReview #reset_state! when previously requiring additional verification when redacting ghosting redacts the ghosting on the user on approve status" time="1.087179859">
  </testcase>
  <testcase name="BackgroundCheckReview when reviewing a BackgroundCheckReview #reset_state! when previously requiring additional verification when redacting ghosting doesn't redact ghosting on deny status" time="1.075461302">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BackgroundCheckReview when reviewing a BackgroundCheckReview #reset_state! when previously requiring additional verification" tests="1" time="1.608504616" failures="0" errors="0" skipped="0">
  <testcase name="BackgroundCheckReview when reviewing a BackgroundCheckReview #reset_state! when previously requiring additional verification resets to pending" time="1.608170701">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BackgroundCheckReview when reviewing a BackgroundCheckReview #reset_state!" tests="0" time="0.000225438" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BackgroundCheckReview when reviewing a BackgroundCheckReview" tests="0" time="0.000164974" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BackgroundCheckReview" tests="0" time="0.000234381" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BackgroundCheck" tests="1" time="0.000490945" failures="0" errors="0" skipped="1">
  <testcase name="BackgroundCheck add some examples to (or delete) /home/lt3/airbnb/spec/models/trust_and_safety/background_check_spec.rb (PENDING)" time="0.000129745">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BankOfAmerica.sanitize_account_name_for_batch" tests="6" time="2.222430999" failures="0" errors="0" skipped="0">
  <testcase name="BankOfAmerica.sanitize_account_name_for_batch leaves strings that don't contain invalid characters alone" time="0.371904294">
  </testcase>
  <testcase name="BankOfAmerica.sanitize_account_name_for_batch replaces apostrophes with spaces" time="0.371578352">
  </testcase>
  <testcase name="BankOfAmerica.sanitize_account_name_for_batch replaces commas with spaces" time="0.371132718">
  </testcase>
  <testcase name="BankOfAmerica.sanitize_account_name_for_batch replaces &#233; with e" time="0.382135747">
  </testcase>
  <testcase name="BankOfAmerica.sanitize_account_name_for_batch replaces &#237; with i" time="0.355363226">
  </testcase>
  <testcase name="BankOfAmerica.sanitize_account_name_for_batch replaces multiple invalid characters in the same string" time="0.369489996">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BankOfAmerica" tests="0" time="0.000246764" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BouncerObserver after_commit after_create" tests="1" time="0.534666403" failures="0" errors="0" skipped="0">
  <testcase name="BouncerObserver after_commit after_create fires a bouncer event" time="0.534336304">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BouncerObserver after_commit after update" tests="1" time="0.743780872" failures="0" errors="0" skipped="0">
  <testcase name="BouncerObserver after_commit after update fires a bouncer event" time="0.743412735">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BouncerObserver after_commit" tests="0" time="0.000164048" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BouncerObserver.event_data_from_model" tests="10" time="6.166522499" failures="0" errors="0" skipped="0">
  <testcase name="BouncerObserver.event_data_from_model returns nil if user is nil" time="0.379629032">
  </testcase>
  <testcase name="BouncerObserver.event_data_from_model returns a hash" time="0.991189896">
  </testcase>
  <testcase name="BouncerObserver.event_data_from_model requires a user for User" time="0.669317495">
  </testcase>
  <testcase name="BouncerObserver.event_data_from_model requires a user for PhoneNumber" time="0.665334613">
  </testcase>
  <testcase name="BouncerObserver.event_data_from_model requires a user for KbaResult" time="0.698206222">
  </testcase>
  <testcase name="BouncerObserver.event_data_from_model requires a user for JumioResult" time="0.520301683">
  </testcase>
  <testcase name="BouncerObserver.event_data_from_model requires a user for AdminFlag" time="0.516303869">
  </testcase>
  <testcase name="BouncerObserver.event_data_from_model requires a user for Pictures" time="0.557094996">
  </testcase>
  <testcase name="BouncerObserver.event_data_from_model returns a UserOauthKey hash" time="0.662188866">
  </testcase>
  <testcase name="BouncerObserver.event_data_from_model returns nil with an invalid model" time="0.505642096">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BouncerObserver.fire_bouncer_event" tests="6" time="3.186760331" failures="0" errors="0" skipped="0">
  <testcase name="BouncerObserver.fire_bouncer_event gets a user for the model" time="0.541994295">
  </testcase>
  <testcase name="BouncerObserver.fire_bouncer_event short-circuits if model is nil" time="0.531243379">
  </testcase>
  <testcase name="BouncerObserver.fire_bouncer_event sets the event type as routing key" time="0.511041619">
  </testcase>
  <testcase name="BouncerObserver.fire_bouncer_event skips nil event data" time="0.533598032">
  </testcase>
  <testcase name="BouncerObserver.fire_bouncer_event skips nil event types" time="0.530659307">
  </testcase>
  <testcase name="BouncerObserver.fire_bouncer_event passes a JSON string to Trust::EventPublisher" time="0.537320759">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BouncerObserver.should_handle? AdminFlag" tests="3" time="1.649343996" failures="0" errors="0" skipped="0">
  <testcase name="BouncerObserver.should_handle? AdminFlag returns true for user verified id flags" time="0.533614246">
  </testcase>
  <testcase name="BouncerObserver.should_handle? AdminFlag returns false for non-user flags" time="0.549887762">
  </testcase>
  <testcase name="BouncerObserver.should_handle? AdminFlag returns false for non-verified id flags" time="0.565214742">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BouncerObserver.should_handle? JumioResult" tests="1" time="0.429527295" failures="0" errors="0" skipped="0">
  <testcase name="BouncerObserver.should_handle? JumioResult returns true for a new model" time="0.429198065">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BouncerObserver.should_handle? KbaResult" tests="1" time="0.531825082" failures="0" errors="0" skipped="0">
  <testcase name="BouncerObserver.should_handle? KbaResult returns true for a new model" time="0.531488731">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BouncerObserver.should_handle? PhoneNumber" tests="2" time="1.84938361" failures="0" errors="0" skipped="0">
  <testcase name="BouncerObserver.should_handle? PhoneNumber returns true for verified_at changes" time="1.069082393">
  </testcase>
  <testcase name="BouncerObserver.should_handle? PhoneNumber returns false for other updates" time="0.779855376">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BouncerObserver.should_handle? User" tests="3" time="2.357325032" failures="0" errors="0" skipped="0">
  <testcase name="BouncerObserver.should_handle? User returns true for email changes" time="0.796250633">
  </testcase>
  <testcase name="BouncerObserver.should_handle? User returns true for email confirmed changes" time="0.785785595">
  </testcase>
  <testcase name="BouncerObserver.should_handle? User returns false for other changes" time="0.774771413">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BouncerObserver.should_handle?" tests="0" time="0.000170546" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BouncerObserver.user_from_model" tests="6" time="4.220134983" failures="0" errors="0" skipped="0">
  <testcase name="BouncerObserver.user_from_model returns a user for user Pictures" time="0.854860874">
  </testcase>
  <testcase name="BouncerObserver.user_from_model returns nil for listings pictures" time="0.395742368">
  </testcase>
  <testcase name="BouncerObserver.user_from_model returns nil for an invalid model" time="0.423738818">
  </testcase>
  <testcase name="BouncerObserver.user_from_model returns  a user for KbaResults" time="0.77311326">
  </testcase>
  <testcase name="BouncerObserver.user_from_model returns  a user for JumioResults" time="1.236385055">
  </testcase>
  <testcase name="BouncerObserver.user_from_model returns a user for AdminFlag" time="0.535422879">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BouncerObserver" tests="1" time="0.68578298" failures="0" errors="0" skipped="0">
  <testcase name="BouncerObserver is registered" time="0.685449923">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BraintreeResponse" tests="1" time="0.444440674" failures="0" errors="0" skipped="0">
  <testcase name="BraintreeResponse should parse the response" time="0.444024308">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Bunny::Ext::NewRelicInstrumentation patches Bunny::Channel" tests="3" time="1.192363021" failures="0" errors="0" skipped="0">
  <testcase name="Bunny::Ext::NewRelicInstrumentation patches Bunny::Channel calls the traced method" time="0.409504493">
  </testcase>
  <testcase name="Bunny::Ext::NewRelicInstrumentation patches Bunny::Channel calls trace with the correct action" time="0.40856034">
  </testcase>
  <testcase name="Bunny::Ext::NewRelicInstrumentation patches Bunny::Channel calls trace with a host derived from the channel" time="0.373544708">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Bunny::Ext::NewRelicInstrumentation patches Bunny::Session" tests="3" time="1.137385323" failures="0" errors="0" skipped="0">
  <testcase name="Bunny::Ext::NewRelicInstrumentation patches Bunny::Session calls the traced method" time="0.380651599">
  </testcase>
  <testcase name="Bunny::Ext::NewRelicInstrumentation patches Bunny::Session calls trace with the correct action" time="0.379591157">
  </testcase>
  <testcase name="Bunny::Ext::NewRelicInstrumentation patches Bunny::Session calls trace with a host derived from the session" time="0.376599423">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Bunny::Ext::NewRelicInstrumentation patches" tests="0" time="0.000188686" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Bunny::Ext::NewRelicInstrumentation.trace when not recording a web transaction" tests="1" time="0.379113324" failures="0" errors="0" skipped="0">
  <testcase name="Bunny::Ext::NewRelicInstrumentation.trace when not recording a web transaction traces with the web metric" time="0.378753292">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Bunny::Ext::NewRelicInstrumentation.trace when recording a web transaction" tests="1" time="0.42642416" failures="0" errors="0" skipped="0">
  <testcase name="Bunny::Ext::NewRelicInstrumentation.trace when recording a web transaction traces with the web metric" time="0.426069939">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Bunny::Ext::NewRelicInstrumentation.trace" tests="2" time="0.757278673" failures="0" errors="0" skipped="0">
  <testcase name="Bunny::Ext::NewRelicInstrumentation.trace yields" time="0.380568112">
  </testcase>
  <testcase name="Bunny::Ext::NewRelicInstrumentation.trace traces with the base metrics" time="0.376250487">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Bunny::Ext::NewRelicInstrumentation" tests="0" time="0.000259988" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Cachunk" tests="1" time="0.000422565" failures="0" errors="0" skipped="1">
  <testcase name="Cachunk Marshal compatible memory store (memcache_store_equivalent) (PENDING)" time="0.000134838">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CalendarController#single" tests="1" time="1.313184053" failures="0" errors="0" skipped="0">
  <testcase name="CalendarController#single should not bomb out" time="1.312523083">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CalendarController" tests="0" time="0.000232878" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Calendar.calendar_for_listing_id!" tests="2" time="1.70160127" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::Calendar.calendar_for_listing_id! should retrieve calendar dates for listing_id and date range" time="0.865797927">
  </testcase>
  <testcase name="Calendar::Domain::Calendar.calendar_for_listing_id! should handle case where reservation checkout after requested end date" time="0.835384753">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Calendar schedule_object" tests="1" time="0.840795953" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::Calendar schedule_object generates calendar view json" time="0.840415531">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::CalendarSquare force_mark_updated!" tests="2" time="1.329754099" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::CalendarSquare force_mark_updated! marks correct hosting squares as updated" time="0.898565557">
  </testcase>
  <testcase name="Calendar::Domain::CalendarSquare force_mark_updated! marks correct set of hosting squares as updated" time="0.430607063">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::CalendarSquare.remove_imported_squares" tests="1" time="0.40465993" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::CalendarSquare.remove_imported_squares should delete_imported_squares" time="0.404253697">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::CalendarSquare" tests="0" time="0.000200428" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Calendar" tests="0" time="0.0002084" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Ical.generate_ical" tests="6" time="6.452542636" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::Ical.generate_ical should produce empty ical results" time="0.881383542">
  </testcase>
  <testcase name="Calendar::Domain::Ical.generate_ical should export reservations" time="1.730351252">
  </testcase>
  <testcase name="Calendar::Domain::Ical.generate_ical should not export discontinuous dates of the same type as one event" time="0.859511097">
  </testcase>
  <testcase name="Calendar::Domain::Ical.generate_ical should not break if there is only one square to export" time="0.859323409">
  </testcase>
  <testcase name="Calendar::Domain::Ical.generate_ical should properly export notes on outside reservations" time="0.873101921">
  </testcase>
  <testcase name="Calendar::Domain::Ical.generate_ical should only export the reservation if a listing has a reservation and is marked unavailable for the same dates" time="1.247920999">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/lib/calendar/constants/definition.rb:7: warning: already initialized constant SQUARE
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Ical" tests="0" time="0.000224871" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkin earlier and there is a conflict" tests="1" time="1.360167133" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkin earlier and there is a conflict should return false" time="1.359821653">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkin earlier and there is no conflict" tests="2" time="1.697176269" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkin earlier and there is no conflict should return true" time="0.82173853">
  </testcase>
  <testcase name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkin earlier and there is no conflict should return true for deleted conflict squares" time="0.874971177">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkin later than the checkout" tests="1" time="0.831523536" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkin later than the checkout should return false" time="0.831132599">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkin later" tests="1" time="0.83485573" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkin later should return false" time="0.834480656">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkout earlier than the checkin" tests="1" time="0.862822727" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkout earlier than the checkin should return false" time="0.862468153">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkout earlier" tests="1" time="0.857812602" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkout earlier should return true" time="0.857433393">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkout later and there is a conflict" tests="1" time="0.857782219" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkout later and there is a conflict should return false" time="0.857360767">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkout later and there is no conflict" tests="2" time="1.703410226" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkout later and there is no conflict should return true" time="0.851551756">
  </testcase>
  <testcase name="Calendar::Domain::Reservation2 can_alter_dates_to? if you are moving the checkout later and there is no conflict should return true for deleted conflict squares" time="0.851420636">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Reservation2 can_alter_dates_to?" tests="0" time="0.00020567" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Reservation2.reservation_square_check All squares are blocked off" tests="1" time="0.412720532" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::Reservation2.reservation_square_check All squares are blocked off returns ok" time="0.412069502">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Reservation2.reservation_square_check No squares are blocked off" tests="1" time="0.398033178" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::Reservation2.reservation_square_check No squares are blocked off returns error" time="0.397719005">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Reservation2.reservation_square_check Some squares are blocked off" tests="1" time="0.395023463" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Domain::Reservation2.reservation_square_check Some squares are blocked off returns some" time="0.394670158">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Reservation2.reservation_square_check" tests="0" time="0.000194222" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Domain::Reservation2" tests="0" time="0.000233831" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Availability.force_mark_updated!" tests="2" time="1.218836493" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Availability.force_mark_updated! calls .force_mark_updated! on calendar square domain" time="0.829578105">
  </testcase>
  <testcase name="Calendar::Services::Availability.force_mark_updated! calls .force_mark_updated! with array of listings on calendar square domain" time="0.388704863">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Availability.get_unavilable_dates_for_date_range" tests="1" time="0.851233642" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Availability.get_unavilable_dates_for_date_range calls .get_unavailability_dates_for_listing_id_and_date_range on calendar square domain" time="0.850855595">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Availability.is_available_ignoring_reservation_id?" tests="1" time="1.202702353" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Availability.is_available_ignoring_reservation_id? calls .is_available_for_date_range_ignoring_reservation? on calendar square domain" time="1.202294179">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Availability.is_available?" tests="1" time="0.834906336" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Availability.is_available? calls .is_available_for_date_range? on calendar square domain" time="0.834557964">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Availability.remove_imported_by_source" tests="1" time="1.330372818" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Availability.remove_imported_by_source calls .remove_imported_by_source! on calendar square domain" time="1.330020457">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Availability.reset_calendar" tests="1" time="0.839580003" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Availability.reset_calendar calls .reset_calendar on calendar square domain" time="0.839230834">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Availability.set_available_for_date_range!" tests="1" time="0.862207438" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Availability.set_available_for_date_range! calls .set_available_for_dates! on service" time="0.861856873">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Availability.set_available_for_dates!" tests="1" time="0.853220698" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Availability.set_available_for_dates! calls .set_available_for_dates! on calendar square domain" time="0.852872945">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Availability.set_explicit_available_for_date_range!" tests="1" time="1.368759079" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Availability.set_explicit_available_for_date_range! calls .set_explicit_available_for_date_range! on calendar domain" time="1.368432711">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Availability.set_unavailable_for_date_range!" tests="1" time="0.831918049" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Availability.set_unavailable_for_date_range! calls .set_unavailable_for_dates! on service" time="0.83156593">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Availability.set_unavailable_for_dates!" tests="1" time="0.820875573" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Availability.set_unavailable_for_dates! calls .set_unavailable_for_dates! on calendar square domain" time="0.820531294">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Availability.sync_external_calendar" tests="1" time="0.842754568" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Availability.sync_external_calendar calls .sync_existing_with_new_busy_dates on calendar square domain" time="0.842389197">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Availability.unavailability_for_listing" tests="1" time="0.840474727" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Availability.unavailability_for_listing calls .unavailability_for_listing on calendar domain" time="0.840171945">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Availability" tests="0" time="0.000267731" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Calendar.calendar_for_listing_id" tests="1" time="3.611760163" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Calendar.calendar_for_listing_id calls calendar_for_listing_id on calendar domain" time="3.611449021">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Calendar has_seen_listing? when calendar data does not exist" tests="1" time="4.03319261" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Calendar has_seen_listing? when calendar data does not exist should return false" time="4.032833091">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Calendar has_seen_listing? when the service has seen and deleted the hosting" tests="1" time="1.312284152" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Calendar has_seen_listing? when the service has seen and deleted the hosting should return true" time="1.311859512">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Calendar has_seen_listing? when the service has seen the hosting" tests="1" time="4.145139588" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Calendar has_seen_listing? when the service has seen the hosting should return true" time="4.144766371">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Calendar has_seen_listing?" tests="0" time="0.000183038" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Calendar.last_created_at with no squares" tests="1" time="0.947767539" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Calendar.last_created_at with no squares should return nil" time="0.947440632">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Calendar.last_created_at with squares" tests="1" time="4.286276774" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Calendar.last_created_at with squares should find last square" time="4.285897865">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Calendar.last_created_at" tests="0" time="0.000161716" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Calendar.modify_calendar" tests="1" time="4.837504576" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Calendar.modify_calendar modifies the calendar via the calendar domain object" time="4.837155956">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Calendar.parse_date_data with invalid input" tests="1" time="1.673864513" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Calendar.parse_date_data with invalid input should throw exception for invalid date" time="1.673471624">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Calendar.parse_date_data with valid input" tests="1" time="2.771839973" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Calendar.parse_date_data with valid input should parse as expected" time="2.771506858">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Calendar.parse_date_data" tests="0" time="0.000290937" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Calendar.update" tests="1" time="1.665186454" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Calendar.update should work as expected" time="1.664689324">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Calendar" tests="0" time="0.000205612" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::DailyPricing.create_or_update_for_date_range" tests="1" time="0.855795727" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::DailyPricing.create_or_update_for_date_range calls the calendar daily pricing" time="0.855418535">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::DailyPricing.reduce!" tests="1" time="0.369770329" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::DailyPricing.reduce! calls the calendar reduce_price" time="0.369420526">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::DailyPricing.remove_for_date_range!" tests="1" time="0.38308825" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::DailyPricing.remove_for_date_range! calls the calendar remove_daily_pricing_for_listing_id_and_date_range" time="0.382691382">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::DailyPricing" tests="0" time="0.000232561" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::MonthlyPricing.create_or_update_pricing_for_listing" tests="1" time="0.824644746" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::MonthlyPricing.create_or_update_pricing_for_listing calls Schedule2.create_or_update_monthly_pricing_for_hosting_and_schedule_dates" time="0.824286625">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::MonthlyPricing.pricing_for_listing_id_indexed_by_month" tests="1" time="0.815118799" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::MonthlyPricing.pricing_for_listing_id_indexed_by_month calls Schedule2.monthly_pricing_for_hosting_id_indexed_by_month" time="0.81464415">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::MonthlyPricing" tests="0" time="0.000208755" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Note update notes" tests="1" time="0.378519274" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Note update notes supports batched update notes" time="0.378135796">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Note update_note" tests="1" time="0.354419655" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Note update_note calls calendar daily pricing" time="0.354114853">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Note" tests="0" time="0.000240669" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Reservation#create_reservation_dates!" tests="1" time="0.376403483" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Reservation#create_reservation_dates! should call Reservation2#block_off_availability" time="0.376056922">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Reservation#delete_by_reservation_id!" tests="2" time="0.82476913" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::Reservation#delete_by_reservation_id! should remove reservation dates" time="0.396560108">
  </testcase>
  <testcase name="Calendar::Services::Reservation#delete_by_reservation_id! should remove reservation dates and set busy" time="0.427615266">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::Reservation" tests="0" time="0.000227508" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::SubletPricing.create_pricing No Trebuchet experiments enabled" tests="1" time="0.855190549" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::SubletPricing.create_pricing No Trebuchet experiments enabled calls both the new and old sublet create function" time="0.854811603">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::SubletPricing.create_pricing Trebuchet stop_legacy_sublet_writes is enabled" tests="1" time="1.373878329" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::SubletPricing.create_pricing Trebuchet stop_legacy_sublet_writes is enabled calls the new sublet create function but not the old" time="1.373491465">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::SubletPricing.create_pricing" tests="0" time="0.000144917" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::SubletPricing.destroy_pricing" tests="1" time="0.861996962" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::SubletPricing.destroy_pricing calls both the new and old sublet delete function" time="0.861673429">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::SubletPricing.sublet_pricing_for_listing_id" tests="2" time="1.709822818" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::SubletPricing.sublet_pricing_for_listing_id returns sublet information" time="0.886550935">
  </testcase>
  <testcase name="Calendar::Services::SubletPricing.sublet_pricing_for_listing_id returns an array of sublet hashes when there is no sublet info" time="0.822777068">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::SubletPricing" tests="0" time="0.000237432" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::WeekendPricing remove_weekend_price!" tests="3" time="2.368106524" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::WeekendPricing remove_weekend_price! always dual-deletes" time="0.782300122">
  </testcase>
  <testcase name="Calendar::Services::WeekendPricing remove_weekend_price! should mark-deleted weekend squares with same PAYLOAD_DAILY_PRICING amount" time="0.808769932">
  </testcase>
  <testcase name="Calendar::Services::WeekendPricing remove_weekend_price! should NOT mark-deleted weekend squares with different PAYLOAD_DAILY_PRICING amount" time="0.776375355">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::WeekendPricing.set_weekend_price legacy writes disabled" tests="1" time="0.816000222" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::WeekendPricing.set_weekend_price legacy writes disabled does not do legacy writes" time="0.815670986">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::WeekendPricing.set_weekend_price legacy writes enabled with existing squares with prices" tests="1" time="1.3687195" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::WeekendPricing.set_weekend_price legacy writes enabled with existing squares with prices should not override any existing prices" time="1.368339302">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::WeekendPricing.set_weekend_price legacy writes enabled without any conflicting calendar squares" tests="1" time="0.804937816" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::WeekendPricing.set_weekend_price legacy writes enabled without any conflicting calendar squares should set weekend price to given value over provided days" time="0.804584217">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::WeekendPricing.set_weekend_price legacy writes enabled" tests="1" time="0.81546115" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::WeekendPricing.set_weekend_price legacy writes enabled should dual-write" time="0.815170415">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::WeekendPricing.set_weekend_price" tests="3" time="2.380126547" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::WeekendPricing.set_weekend_price removes legacy weekend price if a legacy weekend price is found" time="0.815449436">
  </testcase>
  <testcase name="Calendar::Services::WeekendPricing.set_weekend_price does not remove a legacy weekend price if there is no legacy weekend price" time="0.786998079">
  </testcase>
  <testcase name="Calendar::Services::WeekendPricing.set_weekend_price always sets the weekend price in the new schema" time="0.777220479">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::WeekendPricing" tests="0" time="0.000212146" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::WeeklyPricing.create_or_update_pricing_for_listing" tests="1" time="0.844174422" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::WeeklyPricing.create_or_update_pricing_for_listing should call Schedule2.create_or_update_weekly_pricing_for_hosting_and_schedule_dates" time="0.843819981">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::WeeklyPricing.pricing_for_listing_id_indexed_by_week" tests="1" time="0.851694863" failures="0" errors="0" skipped="0">
  <testcase name="Calendar::Services::WeeklyPricing.pricing_for_listing_id_indexed_by_week should call Schedule2.weekly_pricing_for_hosting_id_indexed_by_week" time="0.851309085">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Calendar::Services::WeeklyPricing" tests="0" time="0.000212488" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CalendarSquare.get_squares_for_dates_tng" tests="5" time="5.77842816" failures="0" errors="0" skipped="0">
  <testcase name="CalendarSquare.get_squares_for_dates_tng should get the most recently written square for a date" time="0.95831244">
  </testcase>
  <testcase name="CalendarSquare.get_squares_for_dates_tng should get busy dominant square if busy last" time="0.981683427">
  </testcase>
  <testcase name="CalendarSquare.get_squares_for_dates_tng should get busy dominant square if busy first" time="0.996490628">
  </testcase>
  <testcase name="CalendarSquare.get_squares_for_dates_tng should not get squares that have been marked for deletion" time="1.749803039">
  </testcase>
  <testcase name="CalendarSquare.get_squares_for_dates_tng should ensure reservation squares take priority regardless of lower id" time="1.091306821">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CalendarSquare#is_available_during_dates_ignoring_reservation?" tests="4" time="6.710923638" failures="0" errors="0" skipped="0">
  <testcase name="CalendarSquare#is_available_during_dates_ignoring_reservation? should be available if no CalendarSquare exists during the specified period" time="0.864379096">
  </testcase>
  <testcase name="CalendarSquare#is_available_during_dates_ignoring_reservation? should be available if a CalendarSquare exists in the specified period belonging to the reservation to be ignored" time="1.681248013">
  </testcase>
  <testcase name="CalendarSquare#is_available_during_dates_ignoring_reservation? should not be available if a CalendarSquare exists in the specified period belonging to another reservation" time="1.941933429">
  </testcase>
  <testcase name="CalendarSquare#is_available_during_dates_ignoring_reservation? should not be available if any CalendarSquare with is_available = false exists in the specified period, even without a status code" time="2.222609505">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CalendarSquare pricing squares" tests="4" time="6.966405572" failures="0" errors="0" skipped="0">
  <testcase name="CalendarSquare pricing squares should behave correctly if only one pricing square" time="1.692235322">
  </testcase>
  <testcase name="CalendarSquare pricing squares should detect and log the duplicate pricing error" time="1.485470315">
  </testcase>
  <testcase name="CalendarSquare pricing squares should detect duplicates for the hosting and date range" time="1.496899557">
  </testcase>
  <testcase name="CalendarSquare pricing squares should clean up duplicates for the hosting and date range" time="2.290991048">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CalendarSquare validations validating reference code for SQUARE_TYPE_RESERVATION" tests="2" time="1.758529828" failures="0" errors="0" skipped="0">
  <testcase name="CalendarSquare validations validating reference code for SQUARE_TYPE_RESERVATION should be true for squares not of SQUARE_TYPE_RESERVATION" time="0.882624195">
  </testcase>
  <testcase name="CalendarSquare validations validating reference code for SQUARE_TYPE_RESERVATION should be false for squares of SQUARE_TYPE_RESERVATION" time="0.875414404">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CalendarSquare validations" tests="0" time="0.000397331" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CalendarSquare" tests="0" time="0.000297536" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CalendarUpdatedMemory" tests="3" time="2.473856471" failures="0" errors="0" skipped="0">
  <testcase name="CalendarUpdatedMemory should allow confirming calendar up-to-datedness with a memory" time="0.831548988">
  </testcase>
  <testcase name="CalendarUpdatedMemory should not allow multiple memories within time period" time="0.823083159">
  </testcase>
  <testcase name="CalendarUpdatedMemory should allow another memory on the next calendar day" time="0.818573862">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Chargeback Chargeback.payment_from_processor_order_number" tests="8" time="3.939892575" failures="0" errors="0" skipped="0">
  <testcase name="Chargeback Chargeback.payment_from_processor_order_number should return nil for blank order numbers" time="0.405927209">
  </testcase>
  <testcase name="Chargeback Chargeback.payment_from_processor_order_number should look up by processor code for order numbers with non-digits" time="1.034683271">
  </testcase>
  <testcase name="Chargeback Chargeback.payment_from_processor_order_number should not be case sensitive with non-digits" time="0.43854721">
  </testcase>
  <testcase name="Chargeback Chargeback.payment_from_processor_order_number should look up by id for order numbers with all digits but not 6 digits" time="0.426824469">
  </testcase>
  <testcase name="Chargeback Chargeback.payment_from_processor_order_number should look up by id or processor_code for order numbers with 6 digits" time="0.415888908">
  </testcase>
  <testcase name="Chargeback Chargeback.payment_from_processor_order_number should look up by id or processor_code for order numbers with 6 digits" time="0.403559761">
  </testcase>
  <testcase name="Chargeback Chargeback.payment_from_processor_order_number should fallback on charge amount native when there are possible blue and orange payments" time="0.406146026">
  </testcase>
  <testcase name="Chargeback Chargeback.payment_from_processor_order_number should default to nil when it can't be sure" time="0.406194237">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Chargeback" tests="0" time="0.000232017" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CleaningJob.set_preference_template!" tests="2" time="1.737806229" failures="0" errors="0" skipped="0">
  <testcase name="CleaningJob.set_preference_template! creates a new preference template" time="0.873625248">
  </testcase>
  <testcase name="CleaningJob.set_preference_template! modifies an existing preference template" time="0.863541372">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CleaningJobsHelper" tests="1" time="0.001958806" failures="0" errors="0" skipped="1">
  <testcase name="CleaningJobsHelper add some examples to (or delete) /home/lt3/airbnb/spec/helpers/cleaning_jobs_helper_spec.rb (PENDING)" time="0.000135098">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CleaningJob" tests="0" time="0.000246043" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Collection add_hosting with string source" tests="2" time="0.790164151" failures="0" errors="0" skipped="0">
  <testcase name="Collection add_hosting with string source should still handle integer source" time="0.371251772">
  </testcase>
  <testcase name="Collection add_hosting with string source should handle string source" time="0.418416229">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Collection aggregate_listing_wishlisted_count" tests="1" time="1.731017365" failures="0" errors="0" skipped="0">
  <testcase name="Collection aggregate_listing_wishlisted_count should aggregate total number of times a user's listings have been wish listed" time="1.730648736">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CollectionCountObserver" tests="3" time="1.448588283" failures="0" errors="0" skipped="1">
  <testcase name="CollectionCountObserver should correctly get the key" time="0.734704222">
  </testcase>
  <testcase name="CollectionCountObserver should correctly cache things" time="0.713060633">
  </testcase>
  <testcase name="CollectionCountObserver should correctly expire caches (PENDING)" time="0.000111966">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Collection hosting count updating" tests="1" time="0.881998132" failures="0" errors="0" skipped="0">
  <testcase name="Collection hosting count updating should update the hosting_count to the number of availabile listings" time="0.881584017">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Collection hosting_ids order" tests="2" time="7.512181051" failures="0" errors="0" skipped="0">
  <testcase name="Collection hosting_ids order should order hosting_ids by last added, rather than by order of hosting creation" time="4.158566218">
  </testcase>
  <testcase name="Collection hosting_ids order should order available_hostings by last added, rather than by order of hosting creation" time="3.35293034">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CollectionHosting populate_feeds" tests="1" time="3.861756085" failures="0" errors="0" skipped="0">
  <testcase name="CollectionHosting populate_feeds should be called when a place is wishlisted" time="3.861420799">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CollectionHostingsHashObserver" tests="2" time="1.547768674" failures="0" errors="0" skipped="0">
  <testcase name="CollectionHostingsHashObserver should correctly get the key" time="0.772153479">
  </testcase>
  <testcase name="CollectionHostingsHashObserver should correctly cache things" time="0.775032677">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CollectionHosting source_to_string" tests="2" time="0.940275128" failures="0" errors="0" skipped="0">
  <testcase name="CollectionHosting source_to_string should properly map a known string" time="0.585536472">
  </testcase>
  <testcase name="CollectionHosting source_to_string should fall back to unknown source for bogus string" time="0.354219218">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CollectionHosting" tests="0" time="0.000247877" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Collection listing_wishlisted_count" tests="1" time="1.589575425" failures="0" errors="0" skipped="0">
  <testcase name="Collection listing_wishlisted_count should keep track of the total number of times a listing has been wishlisted" time="1.589186188">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Collection" tests="3" time="3.245610656" failures="0" errors="0" skipped="0">
  <testcase name="Collection should be able to add a hosting to the collection" time="0.921179316">
  </testcase>
  <testcase name="Collection should be able to remove a hosting from the collection" time="1.443696281">
  </testcase>
  <testcase name="Collection should not add duplicates to the collection" time="0.880061214">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon coupon.rake" tests="1" time="2.153176585" failures="0" errors="0" skipped="0">
  <testcase name="Coupon coupon.rake should update coupon cached values" time="2.152824792">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon#generate_employee_travel_coupons with full_time_employee role  with a previously coupon  that wasn't used" tests="1" time="1.350064098" failures="0" errors="0" skipped="0">
  <testcase name="Coupon#generate_employee_travel_coupons with full_time_employee role  with a previously coupon  that wasn't used should not result in rollover" time="1.349714745">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon#generate_employee_travel_coupons with full_time_employee role  with a previously coupon  that was used" tests="1" time="2.493266229" failures="0" errors="0" skipped="0">
  <testcase name="Coupon#generate_employee_travel_coupons with full_time_employee role  with a previously coupon  that was used should result in rollove" time="2.492846479">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon#generate_employee_travel_coupons with full_time_employee role  with a previously coupon " tests="0" time="0.00023234" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon#generate_employee_travel_coupons with full_time_employee role " tests="1" time="1.075678446" failures="0" errors="0" skipped="0">
  <testcase name="Coupon#generate_employee_travel_coupons with full_time_employee role  should get a coupon" time="1.075343661">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon#generate_employee_travel_coupons without full_time_employee role " tests="1" time="0.715762397" failures="0" errors="0" skipped="0">
  <testcase name="Coupon#generate_employee_travel_coupons without full_time_employee role  should get a coupon" time="0.715394643">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon#generate_employee_travel_coupons" tests="0" time="0.000198357" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon get_savings" tests="6" time="3.128325877" failures="0" errors="0" skipped="0">
  <testcase name="Coupon get_savings should return 0 for invalid coupons" time="0.915651594">
  </testcase>
  <testcase name="Coupon get_savings should return 0 if and only if the reservation cost is below the coupon's minimum trip price" time="0.373068565">
  </testcase>
  <testcase name="Coupon get_savings should top out at reservation total price" time="0.359956636">
  </testcase>
  <testcase name="Coupon get_savings should cover price of extras" time="0.37155865">
  </testcase>
  <testcase name="Coupon get_savings should still work if no extras price given" time="0.381601671">
  </testcase>
  <testcase name="Coupon get_savings should still work if extras price is nil" time="0.368208387">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon#get_valid_coupon_from_code" tests="3" time="1.931711901" failures="0" errors="0" skipped="0">
  <testcase name="Coupon#get_valid_coupon_from_code should return coupon if valid" time="0.382361015">
  </testcase>
  <testcase name="Coupon#get_valid_coupon_from_code should return error if invalid" time="0.652166009">
  </testcase>
  <testcase name="Coupon#get_valid_coupon_from_code should return error if coupon not found" time="0.896617612">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon host cancel coupon create_host_cancel_coupon! Coupon savings" tests="4" time="3.382223395" failures="0" errors="0" skipped="0">
  <testcase name="Coupon host cancel coupon create_host_cancel_coupon! Coupon savings should default to $50 savings" time="0.714306938">
  </testcase>
  <testcase name="Coupon host cancel coupon create_host_cancel_coupon! Coupon savings should have $100 savings for short large amounts" time="0.71074733">
  </testcase>
  <testcase name="Coupon host cancel coupon create_host_cancel_coupon! Coupon savings should have $150 savings for short large amounts" time="1.233890362">
  </testcase>
  <testcase name="Coupon host cancel coupon create_host_cancel_coupon! Coupon savings should have $50 savings for far in the future" time="0.722616658">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon host cancel coupon create_host_cancel_coupon! monthly pricing" tests="2" time="1.425303978" failures="0" errors="0" skipped="0">
  <testcase name="Coupon host cancel coupon create_host_cancel_coupon! monthly pricing should not allow monthly pricing coupons" time="0.699942333">
  </testcase>
  <testcase name="Coupon host cancel coupon create_host_cancel_coupon! monthly pricing should create a couponpricing coupons" time="0.724784471">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon host cancel coupon create_host_cancel_coupon!" tests="3" time="2.174310513" failures="0" errors="0" skipped="0">
  <testcase name="Coupon host cancel coupon create_host_cancel_coupon! should not create coupon for $0" time="0.719517086">
  </testcase>
  <testcase name="Coupon host cancel coupon create_host_cancel_coupon! uses the right prefix" time="0.742232848">
  </testcase>
  <testcase name="Coupon host cancel coupon create_host_cancel_coupon! should raise exception on duplicat creation" time="0.712041992">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon host cancel coupon get_host_cancel_coupon" tests="2" time="1.468674124" failures="0" errors="0" skipped="0">
  <testcase name="Coupon host cancel coupon get_host_cancel_coupon should not get cancel coupon for monthly pricing" time="0.734802546">
  </testcase>
  <testcase name="Coupon host cancel coupon get_host_cancel_coupon should get cancel coupon" time="0.733412137">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon host cancel coupon" tests="0" time="0.000197742" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon no_savings_reason" tests="2" time="2.603789698" failures="0" errors="0" skipped="0">
  <testcase name="Coupon no_savings_reason should limit normal coupons to a single user per user" time="0.888235651">
  </testcase>
  <testcase name="Coupon no_savings_reason should allow REUSABLE_COUPON_CODES to be used more than once per user" time="0.87182891">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon#rollover_employee_travel_coupons with a reservation after accept" tests="1" time="1.760664857" failures="0" errors="0" skipped="0">
  <testcase name="Coupon#rollover_employee_travel_coupons with a reservation after accept should process coupon as after accept" time="1.760293219">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon#rollover_employee_travel_coupons with a reservation at accept" tests="1" time="2.39808187" failures="0" errors="0" skipped="0">
  <testcase name="Coupon#rollover_employee_travel_coupons with a reservation at accept should process coupon as accept" time="2.397703704">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon#rollover_employee_travel_coupons with a reservation before accept" tests="1" time="1.590942824" failures="0" errors="0" skipped="0">
  <testcase name="Coupon#rollover_employee_travel_coupons with a reservation before accept should process no coupons" time="1.590586005">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon#rollover_employee_travel_coupons without a reservation " tests="1" time="1.058867423" failures="0" errors="0" skipped="0">
  <testcase name="Coupon#rollover_employee_travel_coupons without a reservation  should process no coupons" time="1.058529803">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon#rollover_employee_travel_coupons" tests="0" time="0.000215004" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CouponsController#create" tests="3" time="2.474911002" failures="0" errors="0" skipped="0">
  <testcase name="CouponsController#create should not allow a site visitor to create a coupon" time="0.792354632">
  </testcase>
  <testcase name="CouponsController#create should not allow a non_admin user, logged in, to create a coupon" time="0.779256627">
  </testcase>
  <testcase name="CouponsController#create should create an actual lantern coupon for an appropriate admin" time="0.902719655">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CouponsController p4 endpoints #apply_reservation" tests="3" time="4.314174356" failures="0" errors="0" skipped="0">
  <testcase name="CouponsController p4 endpoints #apply_reservation should apply and return with updated pricing information" time="1.794590516">
  </testcase>
  <testcase name="CouponsController p4 endpoints #apply_reservation should return error if reservation does not exist" time="1.29044068">
  </testcase>
  <testcase name="CouponsController p4 endpoints #apply_reservation should return error if guest does not have permission to alter reservation" time="1.228568873">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CouponsController p4 endpoints #clear_reservation" tests="3" time="4.794777719" failures="0" errors="0" skipped="0">
  <testcase name="CouponsController p4 endpoints #clear_reservation should clear and return with updated pricing information" time="1.649642241">
  </testcase>
  <testcase name="CouponsController p4 endpoints #clear_reservation should return error if reservation does not exist" time="1.355993092">
  </testcase>
  <testcase name="CouponsController p4 endpoints #clear_reservation should return error if guest does not have permission to alter reservation" time="1.788510348">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CouponsController p4 endpoints" tests="0" time="0.000179268" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CouponsController" tests="0" time="0.000227527" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Coupon" tests="0" time="0.000235192" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CreateCleaningJobForReservationJob.perform" tests="1" time="2.727887873" failures="0" errors="0" skipped="0">
  <testcase name="CreateCleaningJobForReservationJob.perform calls CleaningJob.create_job_for_reservation_from_preference_template!" time="2.727513784">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CreateCleaningJobForReservationJob" tests="0" time="0.000269744" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CreatedAtIndex empty backend" tests="2" time="0.749636089" failures="0" errors="0" skipped="0">
  <testcase name="CreatedAtIndex empty backend adds &lt;= restrictions" time="0.375279413">
  </testcase>
  <testcase name="CreatedAtIndex empty backend adds &gt;= restrictions" time="0.373890471">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CreatedAtIndex s3 backend" tests="2" time="0.766297624" failures="0" errors="0" skipped="0">
  <testcase name="CreatedAtIndex s3 backend adds optimized &lt;= restriction" time="0.382426289">
  </testcase>
  <testcase name="CreatedAtIndex s3 backend adds optimized &gt;= restriction" time="0.383367721">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CreatedAtIndex" tests="0" time="0.000274193" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Currency price_string" tests="10" time="3.732188392" failures="0" errors="0" skipped="0">
  <testcase name="Currency price_string should put the currency symbol in the right place for English" time="0.387115792">
  </testcase>
  <testcase name="Currency price_string should put the currency symbol in the right place for French and Finnish" time="0.362211895">
  </testcase>
  <testcase name="Currency price_string should know about explicit currencies" time="0.387376214">
  </testcase>
  <testcase name="Currency price_string should know about explicit currencies" time="0.37516867">
  </testcase>
  <testcase name="Currency price_string should put the currency symbol in the right place" time="0.39062822">
  </testcase>
  <testcase name="Currency price_string should put spaces in the right place" time="0.354376155">
  </testcase>
  <testcase name="Currency price_string should put the currency symbol in the right place with span" time="0.368453373">
  </testcase>
  <testcase name="Currency price_string should put the currency symbol in the right place with code" time="0.380283674">
  </testcase>
  <testcase name="Currency price_string should format floats with precision" time="0.366971262">
  </testcase>
  <testcase name="Currency price_string should put delimiters between thousands" time="0.358240905">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Currency" tests="2" time="3.554798077" failures="0" errors="0" skipped="0">
  <testcase name="Currency has the correct missing rate warning configured" time="0.429401002">
  </testcase>
  <testcase name="Currency has the correct rate change warning configured" time="3.124907949">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Disaster applicable_to_hosting hostings_of_user_with_applicable_disaster" tests="2" time="2.54074615" failures="0" errors="0" skipped="0">
  <testcase name="Disaster applicable_to_hosting hostings_of_user_with_applicable_disaster should synopsize hostings in disaster zone" time="1.27583662">
  </testcase>
  <testcase name="Disaster applicable_to_hosting hostings_of_user_with_applicable_disaster should not include hostings not in an applicable disaster" time="1.264339919">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Disaster applicable_to_hosting" tests="4" time="3.843885279" failures="0" errors="0" skipped="0">
  <testcase name="Disaster applicable_to_hosting should work with lat lng zones" time="1.302807592">
  </testcase>
  <testcase name="Disaster applicable_to_hosting should not apply to listings outside disaster zones" time="0.903660169">
  </testcase>
  <testcase name="Disaster applicable_to_hosting should not apply to a listings inside disaster zones before or after disaster" time="1.215732772">
  </testcase>
  <testcase name="Disaster applicable_to_hosting should make a nice json hash" time="0.421060933">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="DisasterController lookup" tests="4" time="2.621089364" failures="0" errors="0" skipped="0">
  <testcase name="DisasterController lookup returns no relevant disasters" time="0.426737517">
  </testcase>
  <testcase name="DisasterController lookup works for logged-out case" time="0.458796696">
  </testcase>
  <testcase name="DisasterController lookup works for logged-in user with no listings" time="0.811774183">
  </testcase>
  <testcase name="DisasterController lookup works for logged-in user with a listing" time="0.923079476">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="DisasterController#set_zero_price_for_disaster" tests="3" time="3.806256311" failures="0" errors="0" skipped="0">
  <testcase name="DisasterController#set_zero_price_for_disaster should do nothing for a listing not in a disaster" time="1.475542636">
  </testcase>
  <testcase name="DisasterController#set_zero_price_for_disaster should do something for a listing in a disaster" time="1.092340584">
  </testcase>
  <testcase name="DisasterController#set_zero_price_for_disaster should 401 if not logged in" time="1.237826875">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="DisasterController" tests="0" time="0.000238802" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Disaster" tests="0" time="0.000251368" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Dispute.creating with ghosts" tests="2" time="2.664764647" failures="0" errors="0" skipped="0">
  <testcase name="Dispute.creating with ghosts only notifies host if host is ghost" time="1.331493932">
  </testcase>
  <testcase name="Dispute.creating with ghosts only notifies guest if guest is ghost" time="1.332720733">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Dispute.creating with no ghosts" tests="1" time="1.33787012" failures="0" errors="0" skipped="0">
  <testcase name="Dispute.creating with no ghosts notifies both parties" time="1.33749667">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Dispute.creating" tests="0" time="0.000169793" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="DisputeFlow alerting users #alert_other_party" tests="1" time="1.908236302" failures="0" errors="0" skipped="0">
  <testcase name="DisputeFlow alerting users #alert_other_party should update the payload updated_at" time="1.907828166">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="DisputeFlow alerting users #find_or_build_resolution_update_alert if no previous dashboard alert for this reservation" tests="1" time="1.749892474" failures="0" errors="0" skipped="0">
  <testcase name="DisputeFlow alerting users #find_or_build_resolution_update_alert if no previous dashboard alert for this reservation should build a new alert" time="1.749510015">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="DisputeFlow alerting users #find_or_build_resolution_update_alert if previous dashboard alert exists for the same reservation" tests="1" time="1.998353166" failures="0" errors="0" skipped="0">
  <testcase name="DisputeFlow alerting users #find_or_build_resolution_update_alert if previous dashboard alert exists for the same reservation should return alert if found" time="1.997987842">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="DisputeFlow alerting users #find_or_build_resolution_update_alert" tests="0" time="0.000170104" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="DisputeFlow alerting users" tests="0" time="0.000169169" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="DisputeFlow" tests="0" time="0.000229376" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Dispute" tests="0" time="0.000241924" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="DouanesController redirect" tests="4" time="1.672631174" failures="0" errors="0" skipped="0">
  <testcase name="DouanesController redirect should redirect to a given path" time="0.458825407">
  </testcase>
  <testcase name="DouanesController redirect should only redirect to the path if given full url with http" time="0.432884482">
  </testcase>
  <testcase name="DouanesController redirect should only redirect to the path if given full url with https" time="0.407330998">
  </testcase>
  <testcase name="DouanesController redirect should only redirect to the path if given full url with no protocol" time="0.372875945">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="DouanesController" tests="0" time="0.00022249" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Email" tests="1" time="0.990042836" failures="0" errors="0" skipped="0">
  <testcase name="Email should handle :reply_to in mail_options" time="0.98950726">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="EvaluatesContentFragments" tests="1" time="0.413171133" failures="0" errors="0" skipped="0">
  <testcase name="EvaluatesContentFragments supports locale fallbacks" time="0.407183823">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="EventPresenter" tests="2" time="0.787766935" failures="0" errors="0" skipped="0">
  <testcase name="EventPresenter has a title" time="0.419297915">
  </testcase>
  <testcase name="EventPresenter has a header" time="0.367985542">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="EventsController#show when the event is deleted" tests="1" time="0.398298666" failures="0" errors="0" skipped="0">
  <testcase name="EventsController#show when the event is deleted 301s to P2" time="0.397845006">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="EventsController#show with a nonexistent event name" tests="1" time="0.414723939" failures="0" errors="0" skipped="0">
  <testcase name="EventsController#show with a nonexistent event name 301s to the homepage" time="0.414340719">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="EventsController#show" tests="1" time="1.016276034" failures="0" errors="0" skipped="0">
  <testcase name="EventsController#show shows the event" time="1.015977497">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="EventsController" tests="0" time="0.000234102" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ExperianClient post_user_data" tests="3" time="1.266172821" failures="0" errors="0" skipped="0">
  <testcase name="ExperianClient post_user_data should return properly on a search with an error" time="0.406201831">
  </testcase>
  <testcase name="ExperianClient post_user_data should return properly on a search without match" time="0.472925645">
  </testcase>
  <testcase name="ExperianClient post_user_data should return properly on successful search" time="0.386412232">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ExperianClient processing uk search result" tests="2" time="0.770480416" failures="0" errors="0" skipped="0">
  <testcase name="ExperianClient processing uk search result should set error code and error message in returned hash" time="0.379794349">
  </testcase>
  <testcase name="ExperianClient processing uk search result should set items in returned hash" time="0.390217031">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ExperianClient process result hash" tests="4" time="1.544498238" failures="0" errors="0" skipped="0">
  <testcase name="ExperianClient process result hash should return failure and pass on the errors if experian gives an error code" time="0.372977915">
  </testcase>
  <testcase name="ExperianClient process result hash should return a failed status and proper reason for a deceased person" time="0.384169603">
  </testcase>
  <testcase name="ExperianClient process result hash should return a failed status and proper reason for no verification" time="0.399518016">
  </testcase>
  <testcase name="ExperianClient process result hash should return a failed status and proper reason for driver license mismatch" time="0.387121641">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ExperianClient" tests="3" time="1.122197914" failures="0" errors="0" skipped="0">
  <testcase name="ExperianClient should normalize phone numbers" time="0.368746859">
  </testcase>
  <testcase name="ExperianClient should normalize UK license number" time="0.366433043">
  </testcase>
  <testcase name="ExperianClient should generate request xml" time="0.386412433">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ExternalCalendarMapping#fix_url" tests="2" time="1.168510173" failures="0" errors="0" skipped="0">
  <testcase name="ExternalCalendarMapping#fix_url should prepend http:// if it's missing" time="0.76286409">
  </testcase>
  <testcase name="ExternalCalendarMapping#fix_url should replace webcal:// with http://" time="0.404854294">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ExternalCalendarMapping get_source_content" tests="3" time="2.78978871" failures="0" errors="0" skipped="0">
  <testcase name="ExternalCalendarMapping get_source_content logs an error on HTTP 404" time="0.901822938">
  </testcase>
  <testcase name="ExternalCalendarMapping get_source_content logs an error if host can't be resolved" time="0.89096938">
  </testcase>
  <testcase name="ExternalCalendarMapping get_source_content logs an error if URL is malformed" time="0.996367322">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ExternalCalendarMapping sync_with_ical_source! HomeAway connect" tests="1" time="0.928991111" failures="0" errors="0" skipped="0">
  <testcase name="ExternalCalendarMapping sync_with_ical_source! HomeAway connect should not import tentative dates" time="0.928594929">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ExternalCalendarMapping sync_with_ical_source!" tests="13" time="12.402791765" failures="0" errors="0" skipped="2">
  <testcase name="ExternalCalendarMapping sync_with_ical_source! should log an error if the calendar file is invalid" time="0.984614369">
  </testcase>
  <testcase name="ExternalCalendarMapping sync_with_ical_source! should log an error if the calendar file contains no calendars" time="0.909075206">
  </testcase>
  <testcase name="ExternalCalendarMapping sync_with_ical_source! should record the number of imported events, set last_attempted_at, and clear errors" time="1.937830563">
  </testcase>
  <testcase name="ExternalCalendarMapping sync_with_ical_source! should sync one day events" time="0.919285502">
  </testcase>
  <testcase name="ExternalCalendarMapping sync_with_ical_source! should sync multi-day events" time="0.98449747">
  </testcase>
  <testcase name="ExternalCalendarMapping sync_with_ical_source! should sync overlapping events" time="0.906878859">
  </testcase>
  <testcase name="ExternalCalendarMapping sync_with_ical_source! should ignore shorter events in favor of longer events" time="1.006857605">
  </testcase>
  <testcase name="ExternalCalendarMapping sync_with_ical_source! should not import events in the past (PENDING)" time="0.000116575">
    <skipped/>
  </testcase>
  <testcase name="ExternalCalendarMapping sync_with_ical_source! should sync events that are less than a day long" time="0.918423675">
  </testcase>
  <testcase name="ExternalCalendarMapping sync_with_ical_source! should sync bounded recurring events" time="1.922288379">
  </testcase>
  <testcase name="ExternalCalendarMapping sync_with_ical_source! should not sync dates in the past (PENDING)" time="0.000227844">
    <skipped/>
  </testcase>
  <testcase name="ExternalCalendarMapping sync_with_ical_source! should sync unbounded recurring events" time="0.994851675">
  </testcase>
  <testcase name="ExternalCalendarMapping sync_with_ical_source! should import freebusies" time="0.916206315">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ExternalCalendarMapping sync_with_source!" tests="1" time="0.912911277" failures="0" errors="0" skipped="0">
  <testcase name="ExternalCalendarMapping sync_with_source! should log an error if the calendar source is unknown" time="0.912521566">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ExternalCalendarMapping" tests="1" time="0.943037224" failures="0" errors="0" skipped="0">
  <testcase name="ExternalCalendarMapping should not consider inactive mappings when checking for duplicate URLs" time="0.942560873">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="External::GoogleService Creating a new client" tests="2" time="3.133477104" failures="0" errors="0" skipped="0">
  <testcase name="External::GoogleService Creating a new client raises an exception if the oauth key isn't for Google" time="2.414610957">
  </testcase>
  <testcase name="External::GoogleService Creating a new client refreshes the token if it's expired" time="0.718365336">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="External::GoogleService google api calls" tests="3" time="2.899582215" failures="0" errors="0" skipped="0">
  <testcase name="External::GoogleService google api calls returns a user's real name" time="1.05851987">
  </testcase>
  <testcase name="External::GoogleService google api calls returns google drive metadata" time="0.765753924">
  </testcase>
  <testcase name="External::GoogleService google api calls returns google contacts" time="1.074709845">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="External::GoogleService" tests="0" time="0.009756239" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FacebookFriendList" tests="1" time="0.000596362" failures="0" errors="0" skipped="1">
  <testcase name="FacebookFriendList add some examples to (or delete) /home/lt3/airbnb/spec/models/core/facebook_friend_list_spec.rb (PENDING)" time="0.000159329">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Facebook::UserFacebook" tests="1" time="0.761729185" failures="0" errors="0" skipped="0">
  <testcase name="Facebook::UserFacebook should update the user properly" time="0.761301057">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FaqExperimentMapper filter only showing if in or out of experiment" tests="2" time="1.05963821" failures="0" errors="0" skipped="0">
  <testcase name="FaqExperimentMapper filter only showing if in or out of experiment should support filtering out FAQ if not in experiment" time="0.549509004">
  </testcase>
  <testcase name="FaqExperimentMapper filter only showing if in or out of experiment should support filtering out FAQ if in experiment" time="0.509632959">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FaqExperimentMapper filter swapping two FAQs arbitrary conditions based on user" tests="2" time="1.040095766" failures="0" errors="0" skipped="0">
  <testcase name="FaqExperimentMapper filter swapping two FAQs arbitrary conditions based on user should use the first ID if experiment is launched" time="0.528249349">
  </testcase>
  <testcase name="FaqExperimentMapper filter swapping two FAQs arbitrary conditions based on user should use the second ID if experiment is not launched" time="0.511361831">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FaqExperimentMapper filter swapping two FAQs Trebuchet experiments" tests="2" time="1.29472056" failures="0" errors="0" skipped="0">
  <testcase name="FaqExperimentMapper filter swapping two FAQs Trebuchet experiments should use the first ID if experiment is launched" time="0.767430226">
  </testcase>
  <testcase name="FaqExperimentMapper filter swapping two FAQs Trebuchet experiments should use the second ID if experiment is not launched" time="0.526883067">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FaqExperimentMapper filter swapping two FAQs" tests="0" time="0.000145868" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FaqExperimentMapper filter" tests="0" time="0.000139506" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FaqExperimentMapper" tests="0" time="0.000204464" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Faq localized answer" tests="3" time="1.736551333" failures="0" errors="0" skipped="0">
  <testcase name="Faq localized answer should localize FAQs" time="0.897389338">
  </testcase>
  <testcase name="Faq localized answer should rewrite URLs to point to the right hostname" time="0.423402029">
  </testcase>
  <testcase name="Faq localized answer should select appropriately by country" time="0.413546011">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FaqTag filter_by_platform" tests="2" time="0.88767048" failures="0" errors="0" skipped="0">
  <testcase name="FaqTag filter_by_platform filters out any Faqs that don't match the given platform" time="0.481208987">
  </testcase>
  <testcase name="FaqTag filter_by_platform filters array of FAQ ids, not just array of FAQs" time="0.405920735">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FaqTag" tests="0" time="0.00023651" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Faq" tests="0" time="0.000265728" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="fix_malformed_html_translations rake hosting_name_i18n:pull_from_phrases" tests="1" time="0.601104438" failures="0" errors="0" skipped="0">
  <testcase name="fix_malformed_html_translations rake hosting_name_i18n:pull_from_phrases should work" time="0.600699666">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="fix_malformed_html_translations" tests="0" time="0.000199477" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::Cache::SupernodeAttributes the user_attribute supernode cache" tests="5" time="19.054759483" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::Cache::SupernodeAttributes the user_attribute supernode cache should be empty by default" time="0.369189587">
  </testcase>
  <testcase name="Fraud::Cache::SupernodeAttributes the user_attribute supernode cache should determine that infrequently used attributes are not supernodes" time="1.620276381">
  </testcase>
  <testcase name="Fraud::Cache::SupernodeAttributes the user_attribute supernode cache should determine that frequently used attributes are supernodes" time="3.997345894">
  </testcase>
  <testcase name="Fraud::Cache::SupernodeAttributes the user_attribute supernode cache should determine that frequently used attributes are supernodes, even with one ghost" time="5.551659135">
  </testcase>
  <testcase name="Fraud::Cache::SupernodeAttributes the user_attribute supernode cache should determine that frequently used attributes are not supernodes if enough ghosts are on them" time="7.515396789">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::Cache::SupernodeAttributes" tests="0" time="0.000202752" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::Cache::WhitelistedAttributes the user_attribute whitelisting cache" tests="3" time="3.068617822" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::Cache::WhitelistedAttributes the user_attribute whitelisting cache should be empty by default" time="0.386577166">
  </testcase>
  <testcase name="Fraud::Cache::WhitelistedAttributes the user_attribute whitelisting cache should load properly from the database" time="2.275723056">
  </testcase>
  <testcase name="Fraud::Cache::WhitelistedAttributes the user_attribute whitelisting cache should gracefully add and delete members" time="0.405654806">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::Cache::WhitelistedAttributes" tests="0" time="0.000243332" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostAgent ghosting a user by multiple actions" tests="3" time="7.739898633" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::GhostAgent ghosting a user by multiple actions should register the ghostings" time="2.694400399">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting a user by multiple actions should keep all users ghosted if first action is redacted" time="2.291636329">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting a user by multiple actions should un-ghost all users if both actions are redacted" time="2.753273051">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostAgent ghosting a user for investigation" tests="1" time="5.623435448" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::GhostAgent ghosting a user for investigation should not create secondary ghostings" time="5.623096768">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostAgent ghosting a user with a first-order association" tests="4" time="10.166369994" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::GhostAgent ghosting a user with a first-order association should register the association ghosting" time="2.206870446">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting a user with a first-order association should unghost the users if the action is redacted" time="2.738821987">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting a user with a first-order association should ghost a user if they add a new attribute that matches them to the primary" time="2.341718236">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting a user with a first-order association should ghost a user if they add a new attribute that matches them to a secondary" time="2.8783013">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostAgent ghosting a user with an associated admin" tests="1" time="8.446568305" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::GhostAgent ghosting a user with an associated admin should not traverse through that admin" time="8.446160582">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostAgent ghosting a user with first and second order associations" tests="5" time="12.865034137" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::GhostAgent ghosting a user with first and second order associations should register the association ghosting" time="2.284227062">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting a user with first and second order associations should unghost the users if the action is redacted" time="2.858290505">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting a user with first and second order associations should unghost B and C if B is redacted" time="2.358662571">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting a user with first and second order associations should allow attribute-ghosting C on A, even after B was redacted" time="2.915558953">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting a user with first and second order associations should allow attribute-ghosting B on A after B was redacted, if attribute is new" time="2.447433962">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostAgent ghosting a user with no associations" tests="2" time="4.574169521" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::GhostAgent ghosting a user with no associations should store ghosting flags" time="1.992881505">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting a user with no associations should unstack properly with redactions" time="2.580837841">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostAgent ghosting multiple users that are second order from each other" tests="7" time="35.017744417" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::GhostAgent ghosting multiple users that are second order from each other should register the ghostings" time="2.369923405">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting multiple users that are second order from each other should keep all users ghosted if first action is redacted" time="3.013770606">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting multiple users that are second order from each other should keep all users ghosted if second action is redacted" time="2.376126505">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting multiple users that are second order from each other should un-ghost all users if both actions are redacted" time="6.315530176">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting multiple users that are second order from each other should keep all users ghosted if first action is redacted on B" time="5.635749801">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting multiple users that are second order from each other should un-ghost B if both actions are redacted for them" time="8.930304497">
  </testcase>
  <testcase name="Fraud::GhostAgent ghosting multiple users that are second order from each other should un-ghost A if first action is redacted and A is redacted from the second action" time="6.375327552">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostAgent ghosting the same user twice" tests="1" time="2.408051927" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::GhostAgent ghosting the same user twice should not create more ghostings" time="2.407714342">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostAgent user_attribute supernode skipping" tests="3" time="36.029716418" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::GhostAgent user_attribute supernode skipping should not use supernodes to ghost" time="9.617003664">
  </testcase>
  <testcase name="Fraud::GhostAgent user_attribute supernode skipping should ghost users if supernode status is lost" time="19.488568644">
  </testcase>
  <testcase name="Fraud::GhostAgent user_attribute supernode skipping should unghost users if supernode status is gained" time="6.923599184">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostAgent user_attribute whitelisting" tests="6" time="37.546091924" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::GhostAgent user_attribute whitelisting should be clear by default" time="8.297929993">
  </testcase>
  <testcase name="Fraud::GhostAgent user_attribute whitelisting should handle whitelisting one attribute" time="5.349144051">
  </testcase>
  <testcase name="Fraud::GhostAgent user_attribute whitelisting should handle whitelisting two attributes" time="4.961420107">
  </testcase>
  <testcase name="Fraud::GhostAgent user_attribute whitelisting should handle whitelisting two attributes then whitelisting one" time="6.38572574">
  </testcase>
  <testcase name="Fraud::GhostAgent user_attribute whitelisting should only whitelist an attribute once" time="7.299968915">
  </testcase>
  <testcase name="Fraud::GhostAgent user_attribute whitelisting should only handle and recover from multiple faulty unwhitelistings" time="5.250996946">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostAgent when ghosting someone creates secondary ghostings when autoghosting a guest" tests="2" time="5.633571043" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::GhostAgent when ghosting someone creates secondary ghostings when autoghosting a guest autoghosts a guest without an upcoming accepted reservation" time="2.391975204">
  </testcase>
  <testcase name="Fraud::GhostAgent when ghosting someone creates secondary ghostings when autoghosting a guest does not autoghost a guest with upcoming accepted reservation" time="3.241149419">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostAgent when ghosting someone creates secondary ghostings when autoghosting a host" tests="2" time="5.251670992" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::GhostAgent when ghosting someone creates secondary ghostings when autoghosting a host does not autoghost a host with accepted reservation" time="2.470077624">
  </testcase>
  <testcase name="Fraud::GhostAgent when ghosting someone creates secondary ghostings when autoghosting a host autoghosts a host without an accepted reservation" time="2.781163014">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostAgent when ghosting someone creates secondary ghostings" tests="0" time="0.00017111" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostAgent" tests="0" time="0.000206686" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostBuster supernode handling" tests="1" time="6.979888226" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::GhostBuster supernode handling should not use connect using supernodes" time="6.979445207">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostBuster user attribute walking" tests="4" time="9.448791487" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::GhostBuster user attribute walking should find first-order and second-order connections" time="2.225789711">
  </testcase>
  <testcase name="Fraud::GhostBuster user attribute walking should ignore non-flaggable attributes" time="2.492093755">
  </testcase>
  <testcase name="Fraud::GhostBuster user attribute walking should ignore non-verified phone numbers" time="2.11249919">
  </testcase>
  <testcase name="Fraud::GhostBuster user attribute walking should use verified phone numbers" time="2.61774229">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::GhostBuster" tests="0" time="0.000208688" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FraudReview ReservationFraudReview" tests="1" time="1.291590922" failures="0" errors="0" skipped="0">
  <testcase name="FraudReview ReservationFraudReview should get matching computers" time="1.291169395">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FraudReview UserFraudReview" tests="9" time="14.372292167" failures="0" errors="0" skipped="0">
  <testcase name="FraudReview UserFraudReview should auto freeze future payouts when a host is flagged" time="4.19239589">
  </testcase>
  <testcase name="FraudReview UserFraudReview should encrypt and decrypt a user id" time="0.731753869">
  </testcase>
  <testcase name="FraudReview UserFraudReview should not include plain user id in data to sift" time="0.759424178">
  </testcase>
  <testcase name="FraudReview UserFraudReview should work for normals ranges" time="0.369073069">
  </testcase>
  <testcase name="FraudReview UserFraudReview should work for inverted ranges" time="0.363983717">
  </testcase>
  <testcase name="FraudReview UserFraudReview should get max score correctly" time="0.395797069">
  </testcase>
  <testcase name="FraudReview UserFraudReview should match user payment instruments" time="2.714516414">
  </testcase>
  <testcase name="FraudReview UserFraudReview should match user payout info" time="4.020875856">
  </testcase>
  <testcase name="FraudReview UserFraudReview should calculate failed credit card entries" time="0.823311429">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FraudReview" tests="0" time="0.000208962" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Fraud::StepLadder" tests="5" time="2.348486652" failures="0" errors="0" skipped="0">
  <testcase name="Fraud::StepLadder knows whether a user completed a step" time="0.386916651">
  </testcase>
  <testcase name="Fraud::StepLadder knows whether a user completed any step in the ladder" time="0.862855934">
  </testcase>
  <testcase name="Fraud::StepLadder knows how to handle an except clause" time="0.369961603">
  </testcase>
  <testcase name="Fraud::StepLadder knows the amount of steps associated with an action" time="0.368753225">
  </testcase>
  <testcase name="Fraud::StepLadder knows which steps a user completed" time="0.356962561">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FraudTrace.trace_raw" tests="2" time="5.669052789" failures="0" errors="0" skipped="0">
  <testcase name="FraudTrace.trace_raw with no ghosted users" time="3.079187433">
  </testcase>
  <testcase name="FraudTrace.trace_raw with 1 linked ghost" time="2.589265999">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FraudTrace" tests="6" time="8.572793442" failures="0" errors="0" skipped="0">
  <testcase name="FraudTrace should match based on phone" time="1.149174456">
  </testcase>
  <testcase name="FraudTrace should match based on facebook_id" time="0.972858176">
  </testcase>
  <testcase name="FraudTrace should match based on facebook friends" time="1.237278029">
  </testcase>
  <testcase name="FraudTrace should match based on signup ip" time="1.550732646">
  </testcase>
  <testcase name="FraudTrace should ignore supernodes when matching by ip" time="1.818730402">
  </testcase>
  <testcase name="FraudTrace should have fewer points for a fb friend than a phone number match" time="1.843077024">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FraudUserAttributeObserver ghosting related user_attribute changes" tests="1" time="1.697652391" failures="0" errors="0" skipped="0">
  <testcase name="FraudUserAttributeObserver ghosting related user_attribute changes updates user_attributes when phone numbers are added" time="1.697161256">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
An expectation of :ach_salt was set on nil. Called from /home/lt3/airbnb/spec/spec_helper.rb:420:in `stub_user_attribute_salts'. Use allow_message_expectations_on_nil to disable warnings.
An expectation of :envoy_salt was set on nil. Called from /home/lt3/airbnb/spec/spec_helper.rb:422:in `stub_user_attribute_salts'. Use allow_message_expectations_on_nil to disable warnings.
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FraudUserAttributeObserver payout_info change" tests="2" time="5.484780335" failures="0" errors="0" skipped="0">
  <testcase name="FraudUserAttributeObserver payout_info change updates user_attributes when envoy payout_infos are added" time="2.650374639">
  </testcase>
  <testcase name="FraudUserAttributeObserver payout_info change updates user_attributes when ach payout_infos are added" time="2.833988133">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
An expectation of :ach_salt was set on nil. Called from /home/lt3/airbnb/spec/spec_helper.rb:420:in `stub_user_attribute_salts'. Use allow_message_expectations_on_nil to disable warnings.
An expectation of :envoy_salt was set on nil. Called from /home/lt3/airbnb/spec/spec_helper.rb:422:in `stub_user_attribute_salts'. Use allow_message_expectations_on_nil to disable warnings.
An expectation of :ach_salt was set on nil. Called from /home/lt3/airbnb/spec/spec_helper.rb:420:in `stub_user_attribute_salts'. Use allow_message_expectations_on_nil to disable warnings.
An expectation of :envoy_salt was set on nil. Called from /home/lt3/airbnb/spec/spec_helper.rb:422:in `stub_user_attribute_salts'. Use allow_message_expectations_on_nil to disable warnings.
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FraudUserAttributeObserver" tests="0" time="0.000197317" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FriendRecommendation associated user's friend counter" tests="2" time="2.811242517" failures="0" errors="0" skipped="0">
  <testcase name="FriendRecommendation associated user's friend counter should update properly using the update_user_recommendation_count method" time="1.457397915">
  </testcase>
  <testcase name="FriendRecommendation associated user's friend counter should decrement when a friend recommendation is deleted" time="1.35323974">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FriendRecommendation" tests="0" time="0.000255167" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FuzzyMatch levenshtein_distance_fast" tests="4" time="1.481474342" failures="0" errors="0" skipped="0">
  <testcase name="FuzzyMatch levenshtein_distance_fast should handle simple deletion with penalty" time="0.382658438">
  </testcase>
  <testcase name="FuzzyMatch levenshtein_distance_fast should handle simple deletion with no penalty" time="0.362335528">
  </testcase>
  <testcase name="FuzzyMatch levenshtein_distance_fast should let you assign different penalties for insertion and deletion" time="0.353848926">
  </testcase>
  <testcase name="FuzzyMatch levenshtein_distance_fast should work for strings and arrays" time="0.381870529">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FuzzyMatch" tests="0" time="0.000228954" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GDCClient post_user_data" tests="2" time="0.721496597" failures="0" errors="0" skipped="0">
  <testcase name="GDCClient post_user_data should return proper no match response" time="0.360871899">
  </testcase>
  <testcase name="GDCClient post_user_data should return proper match response" time="0.360115547">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GDCClient" tests="3" time="1.206686176" failures="0" errors="0" skipped="0">
  <testcase name="GDCClient should generate proper xml fragment from the data fields" time="0.398919144">
  </testcase>
  <testcase name="GDCClient should prepare the data hash" time="0.413472473">
  </testcase>
  <testcase name="GDCClient should generate soap request xml" time="0.393671756">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Ghosting ghosting user" tests="1" time="2.372035745" failures="0" errors="0" skipped="0">
  <testcase name="Ghosting ghosting user should ghost first-order and second-order connections" time="2.371683289">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Ghosting redacting user" tests="3" time="8.041762533" failures="0" errors="0" skipped="0">
  <testcase name="Ghosting redacting user should redact first-order and second-order connections" time="3.366949811">
  </testcase>
  <testcase name="Ghosting redacting user should not reghost secondary user after redaction" time="2.325210199">
  </testcase>
  <testcase name="Ghosting redacting user should reghost secondary user if different bad connection available" time="2.348948139">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GhostingReview when reviewing a GhostingReview #reset_state! when previously approved" tests="2" time="2.197831944" failures="0" errors="0" skipped="0">
  <testcase name="GhostingReview when reviewing a GhostingReview #reset_state! when previously approved resets to pending" time="1.096598432">
  </testcase>
  <testcase name="GhostingReview when reviewing a GhostingReview #reset_state! when previously approved destroys previous admin flag" time="1.100784812">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GhostingReview when reviewing a GhostingReview #reset_state! when previously denied" tests="3" time="4.242883376" failures="0" errors="0" skipped="0">
  <testcase name="GhostingReview when reviewing a GhostingReview #reset_state! when previously denied resets to pending" time="1.10619442">
  </testcase>
  <testcase name="GhostingReview when reviewing a GhostingReview #reset_state! when previously denied destroys previous admin flag" time="1.45735368">
  </testcase>
  <testcase name="GhostingReview when reviewing a GhostingReview #reset_state! when previously denied redacts associated ghosting" time="1.678723051">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GhostingReview when reviewing a GhostingReview #reset_state! when previously pending" tests="1" time="0.746745723" failures="0" errors="0" skipped="0">
  <testcase name="GhostingReview when reviewing a GhostingReview #reset_state! when previously pending does nothing" time="0.746375714">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GhostingReview when reviewing a GhostingReview #reset_state! when previously requiring additional verification" tests="3" time="3.737027652" failures="0" errors="0" skipped="0">
  <testcase name="GhostingReview when reviewing a GhostingReview #reset_state! when previously requiring additional verification resets to pending" time="1.173767343">
  </testcase>
  <testcase name="GhostingReview when reviewing a GhostingReview #reset_state! when previously requiring additional verification destroys previous admin flag" time="1.102141615">
  </testcase>
  <testcase name="GhostingReview when reviewing a GhostingReview #reset_state! when previously requiring additional verification removes associated dashboard alert" time="1.460399153">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GhostingReview when reviewing a GhostingReview #reset_state!" tests="0" time="0.000169478" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GhostingReview when reviewing a GhostingReview" tests="0" time="0.000171332" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GhostingReview" tests="0" time="0.00024029" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Ghosting" tests="0" time="0.000285082" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GhostUserJob when ghosting a user #perform" tests="1" time="1.155717754" failures="0" errors="0" skipped="0">
  <testcase name="GhostUserJob when ghosting a user #perform ghosts the user with correct reason and notes" time="1.155270867">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GhostUserJob when ghosting a user" tests="0" time="0.000154741" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GhostUserJob" tests="0" time="0.000246485" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GracefulDead::Fallback Strategy::RaiseException" tests="2" time="0.75787945" failures="0" errors="0" skipped="0">
  <testcase name="GracefulDead::Fallback Strategy::RaiseException should return normally on success" time="0.385138289">
  </testcase>
  <testcase name="GracefulDead::Fallback Strategy::RaiseException should raise error on failure" time="0.372326487">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GracefulDead::Fallback Strategy::ReturnValue" tests="2" time="0.741749435" failures="0" errors="0" skipped="0">
  <testcase name="GracefulDead::Fallback Strategy::ReturnValue should return normally on success" time="0.381291288">
  </testcase>
  <testcase name="GracefulDead::Fallback Strategy::ReturnValue should raise error on failure" time="0.359904802">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GracefulDead::Fallback" tests="0" time="0.000227536" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GraylistedIp" tests="2" time="5.073035525" failures="0" errors="0" skipped="0">
  <testcase name="GraylistedIp should add, remove, and find ips" time="0.381441425">
  </testcase>
  <testcase name="GraylistedIp should add ips to the graylist once more than 10 signups happen in the same hour" time="4.691084578">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="GuestIncident" tests="2" time="2.795174649" failures="0" errors="0" skipped="0">
  <testcase name="GuestIncident should return readable options" time="0.964180203">
  </testcase>
  <testcase name="GuestIncident should delegate to reservation" time="1.830480883">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Answer localization of text" tests="2" time="0.723513492" failures="0" errors="0" skipped="0">
  <testcase name="Help::Answer localization of text localizes if option is passed" time="0.366652416">
  </testcase>
  <testcase name="Help::Answer localization of text does not localize if option is not passed" time="0.356385645">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Answer" tests="0" time="0.000235167" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::BuildingBlock dynamic content methods defined by Help::BuildingBlock" tests="3" time="1.140183222" failures="0" errors="0" skipped="0">
  <testcase name="Help::BuildingBlock dynamic content methods defined by Help::BuildingBlock should define DYNAMIC_DETAILS (at a class level) if .has_dynamic_content? is true" time="0.366309026">
  </testcase>
  <testcase name="Help::BuildingBlock dynamic content methods defined by Help::BuildingBlock should define dynamic_key if .has_dynamic_content? is true" time="0.36933266">
  </testcase>
  <testcase name="Help::BuildingBlock dynamic content methods defined by Help::BuildingBlock should return nil for dynamic_evaluate if .has_dynamic_content? is not true" time="0.404000112">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::BuildingBlock parent and child methods defined by Help::BuildingBlock" tests="6" time="2.630487148" failures="0" errors="0" skipped="0">
  <testcase name="Help::BuildingBlock parent and child methods defined by Help::BuildingBlock should add children to all building blocks appropriately" time="0.506319412">
  </testcase>
  <testcase name="Help::BuildingBlock parent and child methods defined by Help::BuildingBlock should not add answers to building blocks where has_answers? is false" time="0.584146616">
  </testcase>
  <testcase name="Help::BuildingBlock parent and child methods defined by Help::BuildingBlock should add answers to building blocks where has_answers? is true and is_branching? is false" time="0.364902797">
  </testcase>
  <testcase name="Help::BuildingBlock parent and child methods defined by Help::BuildingBlock should not allow adding answer + child to building blocks where has_answers? is true and is_branching? is false" time="0.35885905">
  </testcase>
  <testcase name="Help::BuildingBlock parent and child methods defined by Help::BuildingBlock should not allow adding answer without child to building blocks where is_branching? is true" time="0.371072856">
  </testcase>
  <testcase name="Help::BuildingBlock parent and child methods defined by Help::BuildingBlock should allow adding answer + child to building blocks where is_branching? is true" time="0.444314141">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::BuildingBlock required subclass methods" tests="6" time="2.900514361" failures="0" errors="0" skipped="0">
  <testcase name="Help::BuildingBlock required subclass methods should define issue_type as a symbol" time="0.457631591">
  </testcase>
  <testcase name="Help::BuildingBlock required subclass methods should define has_answers? as a boolean" time="0.379812755">
  </testcase>
  <testcase name="Help::BuildingBlock required subclass methods should define is_branching? as a boolean" time="0.371689751">
  </testcase>
  <testcase name="Help::BuildingBlock required subclass methods should define has_descendants as a boolean" time="0.417462526">
  </testcase>
  <testcase name="Help::BuildingBlock required subclass methods should define render_object_in_path as a json object" time="0.380693411">
  </testcase>
  <testcase name="Help::BuildingBlock required subclass methods should define has_dynamic_content? as a boolean" time="0.892390132">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::BuildingBlock" tests="0" time="0.000252558" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::ContactPresenterNew basic exception check" tests="1" time="0.534782675" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::ContactPresenterNew basic exception check shouldn't throw any exceptions when calling as_json" time="0.534395824">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::ContactPresenterNew#topics" tests="2" time="1.202212656" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::ContactPresenterNew#topics should not include HSM topic if user is not host_success_group" time="0.64767515">
  </testcase>
  <testcase name="HelpCenter::ContactPresenterNew#topics should include HSM topic if user is in host_success_group" time="0.554115912">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::ContactPresenterNew" tests="0" time="0.000226736" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::ContactReservationsPresenter reservations" tests="6" time="9.799302498" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::ContactReservationsPresenter reservations should return CHECKPOINT resos if you're the guest" time="1.27050438">
  </testcase>
  <testcase name="HelpCenter::ContactReservationsPresenter reservations should return CHECKPOINT resos if you're the host" time="1.583413478">
  </testcase>
  <testcase name="HelpCenter::ContactReservationsPresenter reservations should return CANCELED_BY_HOST resos that start no later than 4 weeks ago" time="2.0691616">
  </testcase>
  <testcase name="HelpCenter::ContactReservationsPresenter reservations should not return CANCELED_BY_HOST resos that start later than 4 weeks ago" time="1.924658482">
  </testcase>
  <testcase name="HelpCenter::ContactReservationsPresenter reservations should return ACCEPTED resos that end no later than 4 weeks ago" time="1.722224711">
  </testcase>
  <testcase name="HelpCenter::ContactReservationsPresenter reservations should not return ACCEPTED resos that end later than 4 weeks ago" time="1.228151775">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::ContactReservationsPresenter" tests="0" time="0.000214214" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree CHECKPOINT" tests="1" time="0.399860111" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree CHECKPOINT should support CHECKPOINT" time="0.399533517">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Evaluator Malformed trees" tests="2" time="0.709958311" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Evaluator Malformed trees should raise exception if missing :pass" time="0.351486691">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Evaluator Malformed trees should raise exception if missing :fail" time="0.357971511">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Evaluator" tests="2" time="0.776642541" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Evaluator should evaluate properly at first level" time="0.380072648">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Evaluator should evaluate properly at second level" time="0.396118879">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree HOST_CANCELED" tests="2" time="3.709527152" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree HOST_CANCELED should support HOST_CANCELED" time="1.319616806">
  </testcase>
  <testcase name="HelpCenter::DecisionTree HOST_CANCELED should support HOST_RESERVATION" time="2.389499587">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree REQUEST_REFUND / GIVE_REFUND" tests="3" time="4.385244132" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree REQUEST_REFUND / GIVE_REFUND should choose REQUEST_REFUND if guest has no listings" time="1.348877378">
  </testcase>
  <testcase name="HelpCenter::DecisionTree REQUEST_REFUND / GIVE_REFUND should choose REQUEST_REFUND even if guest has listings" time="1.348927656">
  </testcase>
  <testcase name="HelpCenter::DecisionTree REQUEST_REFUND / GIVE_REFUND should choose GIVE_REFUND if user is host on reservation" time="1.686885659">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree self.status_string" tests="1" time="0.385434205" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree self.status_string should properly map stati" time="0.38495717">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester guest_has_checked_in_more_than_day_ago?" tests="4" time="6.141375064" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_checked_in_more_than_day_ago? should be false if guest checkin is in future" time="1.72047907">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_checked_in_more_than_day_ago? should be false if guest checked in today" time="1.877505766">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_checked_in_more_than_day_ago? should be false if reservation starts two days ago but is not accepted" time="1.259913958">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_checked_in_more_than_day_ago? should be true if guest has checked in two days ago" time="1.282145632">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester guest_has_checked_out_between_1_and_30_days_ago?" tests="6" time="8.913714867" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_checked_out_between_1_and_30_days_ago? should be false if guest has not checked out yet" time="1.262169047">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_checked_out_between_1_and_30_days_ago? should be false if guest checked out today" time="1.293665514">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_checked_out_between_1_and_30_days_ago? should be true if guest checked out a day ago" time="1.375516159">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_checked_out_between_1_and_30_days_ago? should be false if guest checked out 31 days ago" time="2.319843192">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_checked_out_between_1_and_30_days_ago? should be false if guest checked out 29 days ago but reservation is not accepted" time="1.346462286">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_checked_out_between_1_and_30_days_ago? should be true if guest checked out 29 days ago" time="1.315183407">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester guest_has_checked_out_in_past?" tests="4" time="6.115914219" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_checked_out_in_past? should be false if guest has not checked out yet" time="1.269781448">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_checked_out_in_past? should be false if guest checked out two days ago but reservation is not accepted" time="1.631981743">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_checked_out_in_past? should be true if guest checked out yesterday" time="1.905201125">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_checked_out_in_past? should be true if guest checked out two days ago" time="1.308295488">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester guest_has_just_started_reservation?" tests="4" time="6.019212375" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_just_started_reservation? should be false for a reservation more than one day in the past" time="1.375007837">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_just_started_reservation? should be false for a reservation in the future" time="1.305584693">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_just_started_reservation? should be true for a reservation one day in the past" time="1.238930498">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_has_just_started_reservation? should be true for a reservation that starts today" time="2.09904426">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester guest_recent_host_cancellation?" tests="4" time="5.178887514" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester guest_recent_host_cancellation? should not pass if there's not a cancelled reservation as guest" time="1.215327313">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_recent_host_cancellation? should not pass if there's a cancelled reservation as guest, but older than 10 days" time="1.195290907">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_recent_host_cancellation? should not pass if there's a cancelled reservation as host, within 10 days ago" time="1.586685357">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_recent_host_cancellation? should pass with reservation if there's a cancelled reservation as guest, within 10 days ago" time="1.180864207">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester guest_reservation_in_checkpoint?" tests="4" time="2.562987261" failures="0" errors="0" skipped="2">
  <testcase name="HelpCenter::DecisionTree::Tester guest_reservation_in_checkpoint? should be false if the guest has no reservation in checkpoint" time="1.239936005">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_reservation_in_checkpoint? should be true if the guest does have a reservation in checkpoint" time="1.322166808">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_reservation_in_checkpoint? should be false if the host has no reservation in checkpoint (PENDING)" time="0.000185196">
    <skipped/>
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester guest_reservation_in_checkpoint? should be true if the host does have a reservation in checkpoint (PENDING)" time="0.000167714">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester has_recent_active_inquiries?" tests="3" time="3.697634298" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester has_recent_active_inquiries? should be false if user has no message threads" time="0.786774079">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester has_recent_active_inquiries? should be false if user only has question threads updated more than 3 days ago" time="1.764204811">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester has_recent_active_inquiries? should be true if user has message thread updated less than 3 days ago" time="1.145911317">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester host_has_guest_checked_in?" tests="3" time="5.960790627" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester host_has_guest_checked_in? should be false if accepted reservation hasn't begun" time="1.662160336">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_has_guest_checked_in? should be false if pending reservation has begun" time="1.987456614">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_has_guest_checked_in? should be true if accepted reservation has begun" time="2.310612573">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester host_has_guest_checked_out?" tests="3" time="5.022087511" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester host_has_guest_checked_out? should be false if accepted reservation hasn't ended" time="1.695353883">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_has_guest_checked_out? should be false if pending reservation has ended" time="1.654948738">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_has_guest_checked_out? should be true if accepted reservation has ended" time="1.671221813">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester host_has_left_review?" tests="5" time="12.016440931" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester host_has_left_review? should be false if the user has no review record" time="2.007631703">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_has_left_review? should be false if the user has a review record as host that has been submitted, but for wrong reservation" time="2.663699889">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_has_left_review? should be false if the user has a review record that isn't submitted" time="2.165826745">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_has_left_review? should be false if the user has a review record as guest that is submitted" time="2.057505182">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_has_left_review? should be true if the user has a review record as host that has been submitted" time="3.121000007">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester host_has_pending_reservation?" tests="4" time="6.03327623" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester host_has_pending_reservation? should be false if host has no reservations" time="0.768582225">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_has_pending_reservation? should be false if host only has accepted reservation" time="1.682754671">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_has_pending_reservation? should be false if host has a pending reservation that has already started" time="1.629935908">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_has_pending_reservation? should be true if host has a pending reservation that hasn't started yet" time="1.951320914">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester host_has_reservation_ended_past_seven_days?" tests="3" time="5.004953723" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester host_has_reservation_ended_past_seven_days? should not pass if the host has an accepted reservation ending more than 7 days ago" time="1.68319954">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_has_reservation_ended_past_seven_days? should not pass if the host has a non-accepted reservation ending in the past 7 days" time="1.641732585">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_has_reservation_ended_past_seven_days? should pass with reservation if the host has an accepted reservation ending in the past 7 days" time="1.679466633">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester host_reservation_in_checkpoint?" tests="3" time="2.390578748" failures="0" errors="0" skipped="1">
  <testcase name="HelpCenter::DecisionTree::Tester host_reservation_in_checkpoint? should be false if the host has no reservation in checkpoint" time="0.76336551">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_reservation_in_checkpoint? should be true if the host does have a reservation in checkpoint" time="1.626489323">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester host_reservation_in_checkpoint? should be true if has a reservation in checkpoint as guest (PENDING)" time="0.000208293">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester is_active_host?" tests="2" time="2.795362964" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester is_active_host? should return true and not capture hosting in meta if user is active host" time="1.295388477">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester is_active_host? should return false and capture hosting in meta if user is not active host" time="1.499500013">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester is_host?" tests="3" time="1.197802215" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester is_host? should be false for not a host" time="0.37854989">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester is_host? should be true for a user with one listing" time="0.421113105">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester is_host? should be true for a user with more than one listing" time="0.397619046">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester recent_guest_cancellation?" tests="6" time="10.545692555" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester recent_guest_cancellation? should not pass if there's not a cancelled reservation as host" time="2.627391344">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester recent_guest_cancellation? should not pass if there's not a cancelled reservation as guest" time="1.32824829">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester recent_guest_cancellation? should not pass if there's a cancelled reservation as host, but older than 7 days" time="1.559547185">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester recent_guest_cancellation? should not pass if there's a cancelled reservation as guest, but older than 7 days" time="1.198361286">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester recent_guest_cancellation? should pass with reservation if there's a cancelled reservation as host, within 7 days ago" time="2.065651963">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester recent_guest_cancellation? should pass with reservation if there's a cancelled reservation as guest, within 7 days ago" time="1.765585048">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester suspended?" tests="2" time="0.774596274" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::DecisionTree::Tester suspended? should be false normally" time="0.388522643">
  </testcase>
  <testcase name="HelpCenter::DecisionTree::Tester suspended? should be true if host_suspended?" time="0.385530079">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree::Tester" tests="0" time="0.000221317" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::DecisionTree" tests="0" time="0.000228563" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::RecentReservationsPresenter eligible_reservations" tests="1" time="10.448277593" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::RecentReservationsPresenter eligible_reservations should include accepted resos that are upcoming, in progress, or ended in past 6 weeks" time="10.447965515">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::RecentReservationsPresenter reservations" tests="6" time="32.070523554" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::RecentReservationsPresenter reservations should return two in progress resos, if they exist" time="6.012487517">
  </testcase>
  <testcase name="HelpCenter::RecentReservationsPresenter reservations should return one in progress and one upcoming reso, if they exist" time="5.104558721">
  </testcase>
  <testcase name="HelpCenter::RecentReservationsPresenter reservations should return one in progress and one recent host reso, if they exist" time="4.890071369">
  </testcase>
  <testcase name="HelpCenter::RecentReservationsPresenter reservations should return two upcoming resos, if they exist" time="5.886610826">
  </testcase>
  <testcase name="HelpCenter::RecentReservationsPresenter reservations should return one upcoming and one recent host reso, if they exist" time="5.609607408">
  </testcase>
  <testcase name="HelpCenter::RecentReservationsPresenter reservations should return two recent host resos, if they exist" time="4.566285334">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::RecentReservationsPresenter" tests="0" time="0.000231693" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter#browser" tests="1" time="1.088818123" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter#browser should work" time="1.088455035">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter#description" tests="1" time="1.245275067" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter#description should include info about the listing" time="1.244950616">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter#is_cpe?" tests="2" time="2.057286339" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter#is_cpe? should be true if passed in integer params" time="0.738141229">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#is_cpe? should be false if passed in string params" time="1.318739709">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter#listing" tests="2" time="1.911929069" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter#listing should be nil if param not given" time="0.726678341">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#listing should exist if param given" time="1.184807008">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter new, with page editor contact_display" tests="1" time="0.823842534" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter new, with page editor contact_display should return the correct object based on params" time="0.814435609">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter new, with page editor form_answers" tests="1" time="0.805617148" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter new, with page editor form_answers should notify an error but fail gracefully if answer node not found" time="0.805262343">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter new, with page editor issue_obj" tests="1" time="0.994400685" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter new, with page editor issue_obj should be correct" time="0.994055719">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter new, with page editor issue_tree when criteria are involved" tests="2" time="2.32007279" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter new, with page editor issue_tree when criteria are involved should fail when no node param for answer provided" time="1.45633376">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter new, with page editor issue_tree when criteria are involved should succeed when proper node param for answer provided" time="0.863225323">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter new, with page editor issue_tree" tests="1" time="1.170376096" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter new, with page editor issue_tree should be correct for the basic case" time="1.170062193">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter new, with page editor issue" tests="1" time="0.790861714" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter new, with page editor issue should be correct" time="0.790521304">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter new, with page editor" tests="0" time="0.000162322" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter#node_params" tests="3" time="2.210142356" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter#node_params should not blow up if :nodes is nil" time="0.743394837">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#node_params should not blow up if :nodes is a String" time="0.737777385">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#node_params should remove the '_' key" time="0.728354183">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter#os" tests="1" time="0.729973164" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter#os should work" time="0.729614704">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter#reservation" tests="2" time="2.661845641" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter#reservation should be nil by default" time="0.744822262">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#reservation should support confirmation_code" time="1.916497002">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter" tests="0" time="0.000234248" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter#zendesk_custom_fields" tests="2" time="1.465388484" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_custom_fields should set the User Issue field if present on ContactDisplay" time="0.721951874">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_custom_fields should not set the User Issue field if blank on ContactDisplay" time="0.742931669">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter#zendesk_group_id" tests="1" time="0.808632053" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_group_id is the user policing group if user is a ghost" time="0.808275589">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter#zendesk_priority" tests="3" time="3.37520705" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_priority should return 'low' by default" time="0.760673978">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_priority should return 'high' if superhost" time="0.722599861">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_priority should return 'urgent' if reservation in progress" time="1.891369017">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter#zendesk_subject" tests="2" time="2.605144753" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_subject should default to user's name" time="0.772237929">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_subject should reference reservation if present" time="1.832451905">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitContactPresenter#zendesk_tags" tests="9" time="8.365157066" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_tags should add a 'whiteglove' tag" time="1.048144634">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_tags should not allow spaces in tags" time="0.748658596">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_tags should not add an HSM tag for a non-HSM host" time="0.756391693">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_tags should add an HSM tag for an HSM host" time="0.741437541">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_tags should add browser-upgrade-varation tag if present" time="1.162366805">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_tags should add 'ghost' tag if user is ghosted" time="1.398654194">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_tags should add tag for ML group" time="0.877241642">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_tags should add tag for LYS group" time="0.84619526">
  </testcase>
  <testcase name="HelpCenter::SubmitContactPresenter#zendesk_tags should add any tags specified by the ContactDisplay" time="0.784741393">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitNeighborsPresenter description" tests="4" time="2.966519926" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitNeighborsPresenter description properly formats the form answers for key 0" time="1.080842543">
  </testcase>
  <testcase name="HelpCenter::SubmitNeighborsPresenter description properly formats the form answers for key 1" time="0.819615934">
  </testcase>
  <testcase name="HelpCenter::SubmitNeighborsPresenter description properly formats the form answers for key 2, with answer 'yes'" time="0.537184226">
  </testcase>
  <testcase name="HelpCenter::SubmitNeighborsPresenter description adds phone number if present" time="0.528096936">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitNeighborsPresenter errors" tests="5" time="2.635443571" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitNeighborsPresenter errors requires message" time="0.545039711">
  </testcase>
  <testcase name="HelpCenter::SubmitNeighborsPresenter errors requires name if not logged in" time="0.55030131">
  </testcase>
  <testcase name="HelpCenter::SubmitNeighborsPresenter errors requires email if not logged in" time="0.508961023">
  </testcase>
  <testcase name="HelpCenter::SubmitNeighborsPresenter errors requires valid email address if not logged in" time="0.51288871">
  </testcase>
  <testcase name="HelpCenter::SubmitNeighborsPresenter errors does not require name, email params if logged in" time="0.517513881">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitNeighborsPresenter question_tree" tests="1" time="0.854946443" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitNeighborsPresenter question_tree returns the correct question given a param" time="0.854632905">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitNeighborsPresenter ticket_options" tests="1" time="0.536847063" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitNeighborsPresenter ticket_options does not blow up" time="0.53655265">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitNeighborsPresenter" tests="0" time="0.000206186" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HelpCenter::SubmitNeighborsPresenter zendesk_group_id" tests="2" time="1.062490034" failures="0" errors="0" skipped="0">
  <testcase name="HelpCenter::SubmitNeighborsPresenter zendesk_group_id returns custom value for key 2" time="0.546450065">
  </testcase>
  <testcase name="HelpCenter::SubmitNeighborsPresenter zendesk_group_id returns default value for key 0" time="0.515615266">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::ContactDisplay#additional_tags_array=" tests="2" time="0.847263265" failures="0" errors="0" skipped="0">
  <testcase name="Help::ContactDisplay#additional_tags_array= strips and parameterizes values" time="0.44787152">
  </testcase>
  <testcase name="Help::ContactDisplay#additional_tags_array= fails gracefully when passed nil" time="0.398899709">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::ContactDisplay" tests="0" time="0.000283729" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Criterion build_path" tests="2" time="1.638631891" failures="0" errors="0" skipped="0">
  <testcase name="Help::Criterion build_path should include all answers when called without options" time="0.613213573">
  </testcase>
  <testcase name="Help::Criterion build_path should evaluate the criterion when called with options" time="1.024937662">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Criterion dynamic_evaluate" tests="1" time="0.565409969" failures="0" errors="0" skipped="0">
  <testcase name="Help::Criterion dynamic_evaluate should evaluate 'user_suspended'" time="0.565082247">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Criterion#object_for_options" tests="2" time="0.828797257" failures="0" errors="0" skipped="0">
  <testcase name="Help::Criterion#object_for_options should support :user" time="0.399847565">
  </testcase>
  <testcase name="Help::Criterion#object_for_options should support :reservation" time="0.428415842">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Criterion#render_answers" tests="2" time="1.43403377" failures="0" errors="0" skipped="0">
  <testcase name="Help::Criterion#render_answers should raise AnswerNotFoundError if answer not found" time="0.714930462">
  </testcase>
  <testcase name="Help::Criterion#render_answers should return child of correct answer" time="0.718398492">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Criterion#should_evaluate?" tests="3" time="1.300560401" failures="0" errors="0" skipped="0">
  <testcase name="Help::Criterion#should_evaluate? should be true if the :user is present, and :object_type == :user" time="0.411777579">
  </testcase>
  <testcase name="Help::Criterion#should_evaluate? should be true if the :reservation is present, and :object_type == :reservation" time="0.452249347">
  </testcase>
  <testcase name="Help::Criterion#should_evaluate? should be false if the :user is missing, and :object_type == :user" time="0.435900412">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Criterion" tests="0" time="0.000225693" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Element dynamic_element estimated_payout_date" tests="4" time="6.138633274" failures="0" errors="0" skipped="0">
  <testcase name="Help::Element dynamic_element estimated_payout_date should correctly evaluate" time="1.465656055">
  </testcase>
  <testcase name="Help::Element dynamic_element estimated_payout_date should correctly render" time="1.231696551">
  </testcase>
  <testcase name="Help::Element dynamic_element estimated_payout_date should fail gracefully if no reservation is passed" time="1.235160752">
  </testcase>
  <testcase name="Help::Element dynamic_element estimated_payout_date should fail gracefully if no options are passed" time="2.205466707">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Element dynamic_element" tests="0" time="0.000195607" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Element localization of text" tests="21" time="8.931739881" failures="0" errors="0" skipped="0">
  <testcase name="Help::Element localization of text localizes if option is passed and type is 'dropdown_question'" time="0.407490704">
  </testcase>
  <testcase name="Help::Element localization of text does not localize if option is not passed and type is 'dropdown_question'" time="0.393910771">
  </testcase>
  <testcase name="Help::Element localization of text localizes if option is passed and type is 'freeform_question'" time="0.386186444">
  </testcase>
  <testcase name="Help::Element localization of text does not localize if option is not passed and type is 'freeform_question'" time="0.400575807">
  </testcase>
  <testcase name="Help::Element localization of text localizes if option is passed and type is 'dropdown_question_with_logic'" time="0.415527691">
  </testcase>
  <testcase name="Help::Element localization of text does not localize if option is not passed and type is 'dropdown_question_with_logic'" time="0.389859421">
  </testcase>
  <testcase name="Help::Element localization of text localizes if option is passed and type is 'button_to_contact'" time="0.399571771">
  </testcase>
  <testcase name="Help::Element localization of text does not localize if option is not passed and type is 'button_to_contact'" time="0.382897657">
  </testcase>
  <testcase name="Help::Element localization of text localizes if option is passed and type is 'dropdown_question'" time="0.412665906">
  </testcase>
  <testcase name="Help::Element localization of text does not localize if option is not passed and type is 'dropdown_question'" time="0.367200974">
  </testcase>
  <testcase name="Help::Element localization of text localizes if option is passed and type is 'freeform_question'" time="0.404829934">
  </testcase>
  <testcase name="Help::Element localization of text does not localize if option is not passed and type is 'freeform_question'" time="0.401899114">
  </testcase>
  <testcase name="Help::Element localization of text localizes if option is passed and type is 'dropdown_question_with_logic'" time="0.400263148">
  </testcase>
  <testcase name="Help::Element localization of text does not localize if option is not passed and type is 'dropdown_question_with_logic'" time="0.387244941">
  </testcase>
  <testcase name="Help::Element localization of text localizes if option is passed and type is 'button_to_contact'" time="0.446413015">
  </testcase>
  <testcase name="Help::Element localization of text does not localize if option is not passed and type is 'button_to_contact'" time="0.401216519">
  </testcase>
  <testcase name="Help::Element localization of text localizes from JSON if option is passed and type is 'airbnb_linked_button'" time="0.946409314">
  </testcase>
  <testcase name="Help::Element localization of text does not localize from JSON if option is not passed and type is 'airbnb_linked_button'" time="0.398865986">
  </testcase>
  <testcase name="Help::Element localization of text localizes from JSON if option is passed and type is 'external_linked_button'" time="0.380766872">
  </testcase>
  <testcase name="Help::Element localization of text does not localize from JSON if option is not passed and type is 'external_linked_button'" time="0.4002621">
  </testcase>
  <testcase name="Help::Element localization of text does not localize if option is passed and type is 'custom_text'" time="0.405068712">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Element special element logic: airbnb_linked_button" tests="2" time="0.789395908" failures="0" errors="0" skipped="0">
  <testcase name="Help::Element special element logic: airbnb_linked_button should correctly save" time="0.390563134">
  </testcase>
  <testcase name="Help::Element special element logic: airbnb_linked_button should correctly render" time="0.398354024">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Element special element logic: list_of_faqs" tests="3" time="1.251460717" failures="0" errors="0" skipped="0">
  <testcase name="Help::Element special element logic: list_of_faqs should correctly save" time="0.441236924">
  </testcase>
  <testcase name="Help::Element special element logic: list_of_faqs should allow saving of a list_of_faqs with no linked faqs" time="0.387254308">
  </testcase>
  <testcase name="Help::Element special element logic: list_of_faqs should correctly render" time="0.422405197">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Element special element logic:" tests="0" time="0.000173998" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Element" tests="0" time="0.000239924" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Issue branching + path + platform" tests="3" time="1.327358039" failures="0" errors="0" skipped="0">
  <testcase name="Help::Issue branching + path + platform should return the full path if platform is nil" time="0.457015349">
  </testcase>
  <testcase name="Help::Issue branching + path + platform should return empty hash if platform is not supported by the topic" time="0.42595324">
  </testcase>
  <testcase name="Help::Issue branching + path + platform should return the specific path if platform is supported" time="0.443748539">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Issue not branching" tests="6" time="3.497211269" failures="0" errors="0" skipped="0">
  <testcase name="Help::Issue not branching should successfully create a help issue from a topic" time="0.898128325">
  </testcase>
  <testcase name="Help::Issue not branching should successfully create a help issue from a topic id" time="0.478951112">
  </testcase>
  <testcase name="Help::Issue not branching should successfully serialize" time="0.535813089">
  </testcase>
  <testcase name="Help::Issue not branching should successfully deserialize" time="0.589743471">
  </testcase>
  <testcase name="Help::Issue not branching should successfully generate selected_path" time="0.478891171">
  </testcase>
  <testcase name="Help::Issue not branching should successfully destroy an issue: the topic and its whole path (not its parents)" time="0.514834775">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Issue" tests="0" time="0.000206966" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Topic is_secondary_topic?" tests="1" time="0.459631029" failures="0" errors="0" skipped="0">
  <testcase name="Help::Topic is_secondary_topic? should be true for a topic that has children that are topics" time="0.459244548">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Topic is_tertiary_topic?" tests="1" time="0.389685133" failures="0" errors="0" skipped="0">
  <testcase name="Help::Topic is_tertiary_topic? should be true for a topic that has non-topic children" time="0.389313338">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Topic is_top_level_topic?" tests="1" time="0.415887907" failures="0" errors="0" skipped="0">
  <testcase name="Help::Topic is_top_level_topic? should be true for a top-level topic, based on text" time="0.415515451">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Topic localization of text" tests="2" time="0.799700039" failures="0" errors="0" skipped="0">
  <testcase name="Help::Topic localization of text localizes if option is passed" time="0.407914047">
  </testcase>
  <testcase name="Help::Topic localization of text does not localize if option is not passed" time="0.391274186">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Topic self.filter_topics_by_platform" tests="1" time="0.509066172" failures="0" errors="0" skipped="0">
  <testcase name="Help::Topic self.filter_topics_by_platform should return only the topics that are visible to the given platform" time="0.508698607">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Topic topics_for_options" tests="3" time="1.255477731" failures="0" errors="0" skipped="0">
  <testcase name="Help::Topic topics_for_options should not exclude the HSM topic if user is nil" time="0.427916563">
  </testcase>
  <testcase name="Help::Topic topics_for_options should exclude the HSM topic if user is not in program" time="0.410738548">
  </testcase>
  <testcase name="Help::Topic topics_for_options should include the HSM topic if user is in the program" time="0.416077831">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Topic top_level_topics" tests="3" time="1.237130876" failures="0" errors="0" skipped="0">
  <testcase name="Help::Topic top_level_topics should return the top level topics, minus Photography, if passed no user" time="0.432044227">
  </testcase>
  <testcase name="Help::Topic top_level_topics should return the top level topics, minus Photography, if passed a user that's not a photographer" time="0.41042019">
  </testcase>
  <testcase name="Help::Topic top_level_topics should return the top level topics, plus Photography, if passed a user that is photographer" time="0.394101057">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Topic visible_to_platform?" tests="5" time="2.623729217" failures="0" errors="0" skipped="1">
  <testcase name="Help::Topic visible_to_platform? should be true for a top-level-topic" time="0.411044746">
  </testcase>
  <testcase name="Help::Topic visible_to_platform? should be equal to whether a secondary topic has children that support that platform (PENDING)" time="0.378946547">
    <skipped/>
  </testcase>
  <testcase name="Help::Topic visible_to_platform? should be true if a secondary topic doesn't have any variants" time="0.416187748">
  </testcase>
  <testcase name="Help::Topic visible_to_platform? should be equal to whether a tertiary topic supports that platform" time="0.969709885">
  </testcase>
  <testcase name="Help::Topic visible_to_platform? should be true if a tertiary topic doesn't have any variants" time="0.447039397">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Topic" tests="0" time="0.000321551" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::VideoFaqPair associating" tests="1" time="1.105567214" failures="0" errors="0" skipped="0">
  <testcase name="Help::VideoFaqPair associating should properly associate the two" time="1.10510824">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::VideoFaqPair" tests="0" time="0.000302675" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Video published" tests="1" time="0.457362233" failures="0" errors="0" skipped="0">
  <testcase name="Help::Video published should support 'published'" time="0.456995076">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Help::Video" tests="0" time="0.000238077" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController affiliate cookies using af and c parameters" tests="4" time="1.920918471" failures="0" errors="0" skipped="0">
  <testcase name="HomeController affiliate cookies using af and c parameters should set affiliate and campaign based on af and c parameters" time="0.409052028">
  </testcase>
  <testcase name="HomeController affiliate cookies using af and c parameters should still set affiliate if c parameter is nil" time="0.38587886">
  </testcase>
  <testcase name="HomeController affiliate cookies using af and c parameters should set campaign with affiliate 27202 if af parameter is nil" time="0.732788967">
  </testcase>
  <testcase name="HomeController affiliate cookies using af and c parameters should prioritize af and c over referrer" time="0.392521035">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController affiliate cookies using fb_action_types parameter" tests="3" time="1.239024175" failures="0" errors="0" skipped="0">
  <testcase name="HomeController affiliate cookies using fb_action_types parameter should set affiliate and campaign based on presence of fb_action_types" time="0.409193628">
  </testcase>
  <testcase name="HomeController affiliate cookies using fb_action_types parameter should prioritize fb_action_types over af and c" time="0.419242481">
  </testcase>
  <testcase name="HomeController affiliate cookies using fb_action_types parameter should prioritize fb_action_types over referrer" time="0.409864613">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController affiliate cookies using referrer special Google exclusions" tests="2" time="0.828292431" failures="0" errors="0" skipped="0">
  <testcase name="HomeController affiliate cookies using referrer special Google exclusions should exclude google.com/aclk" time="0.423785951">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer special Google exclusions should exclude google.com/uds/afs" time="0.403973272">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController affiliate cookies using referrer" tests="17" time="7.966492036" failures="0" errors="0" skipped="0">
  <testcase name="HomeController affiliate cookies using referrer should work for http://www.twitter.com" time="0.437044255">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer should work for http://www.facebook.com" time="0.388885156">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer should work for http://www.google.com" time="0.424451209">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer should work for http://plus.google.com" time="0.407942103">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer should work for http://www.bing.com" time="0.718235429">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer should work for http://search.yahoo.com" time="0.389002052">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer should work for http://m.yahoo.com" time="0.387436036">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer should work for http://search.yahoo.co.jp" time="0.382389167">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer should work for http://yandex.com" time="0.425343871">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer should work for http://yandex.ru" time="0.423132597">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer should work for http://baidu.com" time="0.783624417">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer should work for http://vkontakte.ru" time="0.385528244">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer should work for http://vk.com" time="0.411141569">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer should work for http://pinterest.com" time="0.455573221">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer should not overwrite existing referrer cookies" time="0.41055764">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer does not set affiliate and campaign if referrer is airbnb.com" time="0.411268738">
  </testcase>
  <testcase name="HomeController affiliate cookies using referrer does not set affiliate and campaign for any arbitrary referrer" time="0.722611281">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController affiliate cookies using short_af_code parameter" tests="4" time="2.092970716" failures="0" errors="0" skipped="0">
  <testcase name="HomeController affiliate cookies using short_af_code parameter should set affiliate and campaign based on short_af_code" time="0.593221766">
  </testcase>
  <testcase name="HomeController affiliate cookies using short_af_code parameter should prioritize short_af_code over fb_action_types" time="0.387747417">
  </testcase>
  <testcase name="HomeController affiliate cookies using short_af_code parameter should prioritize short_af_code over af and c" time="0.390037456">
  </testcase>
  <testcase name="HomeController affiliate cookies using short_af_code parameter should prioritize short_af_code over referrer" time="0.720985958">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController affiliate cookies" tests="0" time="0.00025118" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController#ajax_trebuchet" tests="3" time="1.623010589" failures="0" errors="0" skipped="0">
  <testcase name="HomeController#ajax_trebuchet should support a single feature, if it doesn't exist" time="0.766241964">
  </testcase>
  <testcase name="HomeController#ajax_trebuchet should support a single feature, if it does exist" time="0.443048277">
  </testcase>
  <testcase name="HomeController#ajax_trebuchet should support multiple features" time="0.413146666">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController#dashboard when the user has an open graph reservation notification queued" tests="4" time="6.660288944" failures="0" errors="0" skipped="1">
  <testcase name="HomeController#dashboard when the user has an open graph reservation notification queued should pop the open graph reservation notification from the queue (PENDING)" time="0.000230979">
    <skipped/>
  </testcase>
  <testcase name="HomeController#dashboard when the user has an open graph reservation notification queued should load for a logged-in guest" time="2.05738855">
  </testcase>
  <testcase name="HomeController#dashboard when the user has an open graph reservation notification queued should load for a logged-in host with one listing" time="2.041666145">
  </testcase>
  <testcase name="HomeController#dashboard when the user has an open graph reservation notification queued should load for a logged-in host with multiple listings" time="2.560353938">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController#dashboard" tests="0" time="0.000163281" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController#first_and_last_day_of_calendar" tests="6" time="2.677411348" failures="0" errors="0" skipped="0">
  <testcase name="HomeController#first_and_last_day_of_calendar returns next year if specified month is before current month" time="0.380727837">
  </testcase>
  <testcase name="HomeController#first_and_last_day_of_calendar returns surrounding month's dates to fill square calendar" time="0.400897534">
  </testcase>
  <testcase name="HomeController#first_and_last_day_of_calendar returns surrounding month's dates to fill square calendar for locale with Saturday as first day of week" time="0.419404086">
  </testcase>
  <testcase name="HomeController#first_and_last_day_of_calendar returns surrounding month's dates to fill square calendar for locale with Monday as first day of week" time="0.675604457">
  </testcase>
  <testcase name="HomeController#first_and_last_day_of_calendar returns surrounding month's dates to fill square calendar across last year" time="0.390967406">
  </testcase>
  <testcase name="HomeController#first_and_last_day_of_calendar returns surrounding month's dates to fill square calendar across last year" time="0.4086064">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController#inbox" tests="3" time="38.118622237" failures="0" errors="0" skipped="0">
  <testcase name="HomeController#inbox should get a full first page" time="14.017416122">
  </testcase>
  <testcase name="HomeController#inbox should have the correct count" time="12.233738068">
  </testcase>
  <testcase name="HomeController#inbox should get a partial second page" time="11.866619154">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController locale / country redirection IP address geolocation" tests="3" time="1.194422335" failures="0" errors="0" skipped="0">
  <testcase name="HomeController locale / country redirection IP address geolocation should not do our own IP geolocation when Akamai EdgeScape header is present" time="0.385909843">
  </testcase>
  <testcase name="HomeController locale / country redirection IP address geolocation should use Akamai EdgeScape header to get country-level geolocation of request" time="0.394792672">
  </testcase>
  <testcase name="HomeController locale / country redirection IP address geolocation should do its own IP address geolocation if no CDN geocoding header is present" time="0.41303236">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController locale / country redirection" tests="30" time="17.216061168" failures="0" errors="0" skipped="0">
  <testcase name="HomeController locale / country redirection should redirect from airbnb.com to www.airbnb.com" time="0.384719593">
  </testcase>
  <testcase name="HomeController locale / country redirection should not set sticky_locale cookie on www.airbnb.com without explicit locale parameter" time="0.385864438">
  </testcase>
  <testcase name="HomeController locale / country redirection should set sticky_locale cookie on www.airbnb.com with explicit locale parameter" time="0.726946304">
  </testcase>
  <testcase name="HomeController locale / country redirection should set sticky_locale cookie on www.airbnb.ca" time="0.428043842">
  </testcase>
  <testcase name="HomeController locale / country redirection should not set sticky_locale cookie on www.airbnb.fr" time="0.426637308">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from airbnb.com to zh.airbnb.com with zh-CN browser language" time="0.379291649">
  </testcase>
  <testcase name="HomeController locale / country redirection should not redirect from airbnb.com to he.airbnb.com with Hebrew browser language because Hebrew is not a public language" time="0.383209784">
  </testcase>
  <testcase name="HomeController locale / country redirection should NOT redirect from airbnb.com to zh.airbnb.com with zh-CN browser language and sticky locale cookie" time="0.410207125">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from airbnb.com to no.airbnb.com with Norwegian browser language" time="0.753364169">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from airbnb.com to no.airbnb.com with Norwegian (Bokm&#229;l) language" time="0.415492587">
  </testcase>
  <testcase name="HomeController locale / country redirection should remove sticky_locale cookie when requesting a different locale" time="0.398473706">
  </testcase>
  <testcase name="HomeController locale / country redirection should set locale query parameter when redirecting to English" time="0.411909472">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from airbnb.com?locale=fr&amp;country_override=US to fr.airbnb.com" time="0.430828993">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from airbnb.com?locale=fr&amp;country_override=FR to www.airbnb.fr with a 302 for logged-out user" time="0.408971055">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from airbnb.com?locale=fr&amp;country_override=FR to www.airbnb.fr with POST for logged-in user" time="1.20705224">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from airbnb.com?locale=fr in France to www.airbnb.fr" time="0.874888163">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from airbnb.de?locale=fr&amp;country_override=ES to fr.airbnb.com" time="1.202433889">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from airbnb.com?locale=fr&amp;country_override=FR to fr.airbnb.com when af parameter is set" time="0.384974701">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from internal.airbnb.com?locale=fr&amp;country_override=FR to fr.internal.airbnb.com because there is no internal.airbnb.fr" time="0.409798207">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect to airbnb.cat for Catalan" time="0.403485538">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from airbnb.ca?locale=fr to fr.airbnb.ca" time="0.407926899">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from airbnb.ca with French browser to fr.airbnb.ca" time="0.397859746">
  </testcase>
  <testcase name="HomeController locale / country redirection should not redirect from airbnb.ca with French browser and sticky locale to fr.airbnb.ca" time="0.690886198">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from airbnb.com?locale=fr&amp;country_override=CA to fr.airbnb.ca" time="0.858319141">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from airbnb.com?country_override=CA to www.airbnb.ca" time="1.254176586">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from airbnb.com?country_override=CA&amp;cdn_locale_redirect=1 to www.airbnb.ca without extra undesired parameter" time="0.855645403">
  </testcase>
  <testcase name="HomeController locale / country redirection should redirect from fr.airbnb.ca?locale=en to airbnb.ca?locale=en" time="0.389079794">
  </testcase>
  <testcase name="HomeController locale / country redirection should show coming soon on airbnb.kg" time="0.409150489">
  </testcase>
  <testcase name="HomeController locale / country redirection should not redirect away from internal.airbnb.com" time="0.426736747">
  </testcase>
  <testcase name="HomeController locale / country redirection should not redirect away from internal.airbnb.com even with country override" time="0.696159806">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController locale / country setting" tests="19" time="8.643674452" failures="0" errors="0" skipped="0">
  <testcase name="HomeController locale / country setting should set locale on visit to airbnb.com" time="0.432609094">
  </testcase>
  <testcase name="HomeController locale / country setting should set locale to French on visit to airbnb.fr" time="0.405205887">
  </testcase>
  <testcase name="HomeController locale / country setting should set locale to French on visit to fr.airbnb.com" time="0.39611462">
  </testcase>
  <testcase name="HomeController locale / country setting should set locale to Canadian French on visit to fr.airbnb.ca" time="0.685715648">
  </testcase>
  <testcase name="HomeController locale / country setting should set locale to en-GB on visit to www.airbnb.co.uk" time="0.419210676">
  </testcase>
  <testcase name="HomeController locale / country setting should set locale to Traditional Chinese on visit to www.airbnb.com.tw" time="0.398601603">
  </testcase>
  <testcase name="HomeController locale / country setting should set locale to Traditional Chinese (Hong Kong) on visit to www.airbnb.com.hk" time="0.40002674">
  </testcase>
  <testcase name="HomeController locale / country setting should set locale to Spain Spanish on visit to airbnb.es" time="0.408968696">
  </testcase>
  <testcase name="HomeController locale / country setting should set locale to Latin-American Spanish on visit to airbnb.mx" time="0.407072971">
  </testcase>
  <testcase name="HomeController locale / country setting should set locale to Latin-American Spanish on visit to es.airbnb.com" time="0.706371703">
  </testcase>
  <testcase name="HomeController locale / country setting should set locale to Catalan and country to US on a visit to ca.airbnb.com" time="0.400990315">
  </testcase>
  <testcase name="HomeController locale / country setting should set zh-TW locale on visit to airbnb.com?locale=zh-Hant" time="0.403782872">
  </testcase>
  <testcase name="HomeController locale / country setting should set en locale on visit to airbnb.com?locale=&#1077;&#1085; " time="0.414642026">
  </testcase>
  <testcase name="HomeController locale / country setting should set zh locale on visit to airbnb.com?locale=zh-Hans" time="0.407962899">
  </testcase>
  <testcase name="HomeController locale / country setting should set :no locale on visit to airbnb.com?locale=nb" time="0.416238928">
  </testcase>
  <testcase name="HomeController locale / country setting should set :no locale on visit with 'nb' HTTP_ACCEPT_LANGUAGE" time="0.693799721">
  </testcase>
  <testcase name="HomeController locale / country setting should set :fr locale on visit with 'fr-fr' HTTP_ACCEPT_LANGUAGE" time="0.401461025">
  </testcase>
  <testcase name="HomeController locale / country setting should ignore languages that are not yet public in HTTP_ACCEPT_LANGUAGE" time="0.408429857">
  </testcase>
  <testcase name="HomeController locale / country setting should set :en locale on visit with empty HTTP_ACCEPT_LANGUAGE" time="0.433941277">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController my listings" tests="1" time="1.398726795" failures="0" errors="0" skipped="0">
  <testcase name="HomeController my listings should show the reservation" time="1.398297765">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController URL canonicalization" tests="16" time="7.854501868" failures="0" errors="0" skipped="0">
  <testcase name="HomeController URL canonicalization should set @canonical_url" time="0.431144028">
  </testcase>
  <testcase name="HomeController URL canonicalization should have canonical for ca.airbnb.com to www.airbnb.cat" time="0.418483262">
  </testcase>
  <testcase name="HomeController URL canonicalization should have canonical URL for www.airbnb.com.hk" time="0.698479752">
  </testcase>
  <testcase name="HomeController URL canonicalization should have canonical host for fr.airbnb.ch" time="0.405650995">
  </testcase>
  <testcase name="HomeController URL canonicalization should have canonical for fr.airbnb.ca to fr.airbnb.ca" time="0.446272785">
  </testcase>
  <testcase name="HomeController URL canonicalization should have canonical host for airbnb.com.sg" time="0.410340397">
  </testcase>
  <testcase name="HomeController URL canonicalization should not have rel=canonical if request host is same as canonical host" time="0.471570324">
  </testcase>
  <testcase name="HomeController URL canonicalization should no-index internal.airbnb.com" time="0.402665236">
  </testcase>
  <testcase name="HomeController URL canonicalization should no-index aws.airbnb.com" time="0.697661473">
  </testcase>
  <testcase name="HomeController URL canonicalization should noindex non-public locales" time="0.422395618">
  </testcase>
  <testcase name="HomeController URL canonicalization redirect from airbedandbreakfast.com to airbnb.com" time="0.722296864">
  </testcase>
  <testcase name="HomeController URL canonicalization redirect from www.airbedandbreakfast.com to airbnb.com" time="0.391963214">
  </testcase>
  <testcase name="HomeController URL canonicalization redirect from da.airbedandbreakfast.com to airbnb.com" time="0.414488858">
  </testcase>
  <testcase name="HomeController URL canonicalization redirect from lol.cat to airbnb.com" time="0.406019994">
  </testcase>
  <testcase name="HomeController URL canonicalization redirect from pluck.airbnb.com to airbnb.com" time="0.705822517">
  </testcase>
  <testcase name="HomeController URL canonicalization should not include cdn_locale_redirect in canonical URL" time="0.407030439">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController user checkpoint flagged handling" tests="2" time="2.104206251" failures="0" errors="0" skipped="0">
  <testcase name="HomeController user checkpoint flagged handling should redirect to verification for a flagged user" time="0.794453197">
  </testcase>
  <testcase name="HomeController user checkpoint flagged handling should not redirect if they've been verified" time="1.309257915">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController when a user visits the home page" tests="1" time="1.595993068" failures="0" errors="0" skipped="0">
  <testcase name="HomeController when a user visits the home page should update the user's most recent IP" time="1.595616126">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HomeController" tests="0" time="0.000231648" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting address censoring #formatted_address_censored" tests="1" time="0.615568974" failures="0" errors="0" skipped="0">
  <testcase name="Hosting address censoring #formatted_address_censored should censor street numbers" time="0.615178588">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting address censoring #formatted_address_native_censored" tests="1" time="0.447343347" failures="0" errors="0" skipped="0">
  <testcase name="Hosting address censoring #formatted_address_native_censored should censor street numbers" time="0.446886866">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting address censoring #street_name" tests="1" time="3.447020543" failures="0" errors="0" skipped="0">
  <testcase name="Hosting address censoring #street_name should censor street numbers" time="3.446675314">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting address censoring" tests="0" time="0.000193756" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting address" tests="2" time="0.893015045" failures="0" errors="0" skipped="0">
  <testcase name="Hosting address should return the full address in different formats" time="0.494553719">
  </testcase>
  <testcase name="Hosting address should not break if a location field is nil" time="0.398010687">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingAnalyticsClient.format_data" tests="3" time="1.724915161" failures="0" errors="0" skipped="0">
  <testcase name="HostingAnalyticsClient.format_data should work" time="0.417433243">
  </testcase>
  <testcase name="HostingAnalyticsClient.format_data should handle the nil case" time="0.915997858">
  </testcase>
  <testcase name="HostingAnalyticsClient.format_data should handle the empty case" time="0.390980873">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingAnalyticsClient.truncate_metrics!" tests="1" time="0.389790029" failures="0" errors="0" skipped="0">
  <testcase name="HostingAnalyticsClient.truncate_metrics! should delete the proper keys from Redis" time="0.389435442">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingAnalyticsClient.update_metrics!" tests="1" time="0.492165245" failures="0" errors="0" skipped="0">
  <testcase name="HostingAnalyticsClient.update_metrics! should properly store the data in Redis" time="0.491840692">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingAnalyticsClient" tests="0" time="0.000203088" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting as_json_hash privileged fields through reservation" tests="2" time="3.047462036" failures="0" errors="0" skipped="0">
  <testcase name="Hosting as_json_hash privileged fields through reservation should include privileged fields in hash when accessed through reservation if accepted" time="1.716385314">
  </testcase>
  <testcase name="Hosting as_json_hash privileged fields through reservation should not include privileged fields in hash when accessed though reservation if not accepted" time="1.330416144">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting as_json_hash privileged fields" tests="3" time="2.78910259" failures="0" errors="0" skipped="0">
  <testcase name="Hosting as_json_hash privileged fields should include lat, lng, house_manual, directions, address, full_address if owner" time="0.876478766">
  </testcase>
  <testcase name="Hosting as_json_hash privileged fields should include lat, lng, house_manual, directions, address, full_address if :is_accepted_guest" time="0.87968043">
  </testcase>
  <testcase name="Hosting as_json_hash privileged fields should not include lat, lng, house_manual, directions, address, full_address if not owner or :is_accepted_guest" time="1.032368019">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting as_json_hash" tests="0" time="0.000219786" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#autopricing_params" tests="1" time="1.13598465" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#autopricing_params should return a Hash with the room type, person capacity, location, and visible review count" time="1.135644461">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#change_picture_order!" tests="1" time="0.958084722" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#change_picture_order! does nothing if this Hosting has no photos" time="0.957705927">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#check_in_string" tests="3" time="5.204263153" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#check_in_string should say flexible for unset check-in" time="1.396485085">
  </testcase>
  <testcase name="Hosting#check_in_string should work in English" time="0.403469597">
  </testcase>
  <testcase name="Hosting#check_in_string should work in Japanese" time="1.580579283">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#check_out_string" tests="3" time="6.809252523" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#check_out_string should say flexible for unset checkout" time="1.084341951">
  </testcase>
  <testcase name="Hosting#check_out_string should work in English" time="0.420979082">
  </testcase>
  <testcase name="Hosting#check_out_string should work in Japanese" time="3.431026379">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection setting security deposit only section should set security deposit native if security deposit native is blank" tests="1" time="0.981557588" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#ajax_save_pricing_subsection setting security deposit only section should set security deposit native if security deposit native is blank should set security deposit native to nil" time="0.981199912">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection setting security deposit only section should set security deposit native if security deposit native is not blank" tests="1" time="0.901621344" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#ajax_save_pricing_subsection setting security deposit only section should set security deposit native if security deposit native is not blank should set security deposit native to amount" time="0.901144897">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection setting security deposit only section should set security deposit native" tests="0" time="0.000178344" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection setting security deposit only section" tests="0" time="0.000204817" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection setting taxes section if hosting is taxable if tax percent basis points is blank" tests="1" time="0.903574157" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#ajax_save_pricing_subsection setting taxes section if hosting is taxable if tax percent basis points is blank should set tax percent basis points to nil" time="0.903226828">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection setting taxes section if hosting is taxable if tax percent basis points is NOT blank" tests="1" time="0.871911845" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#ajax_save_pricing_subsection setting taxes section if hosting is taxable if tax percent basis points is NOT blank should update tax percent basis points" time="0.871389457">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection setting taxes section if hosting is taxable" tests="0" time="0.000171166" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection setting taxes section" tests="0" time="0.000185091" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection setting weekend pricing section if weekend_price_amount_native is blank" tests="1" time="0.862764432" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#ajax_save_pricing_subsection setting weekend pricing section if weekend_price_amount_native is blank should remove the weekend price" time="0.862416117">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection setting weekend pricing section if weekend_price_amount_native is NOT blank" tests="1" time="0.832954818" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#ajax_save_pricing_subsection setting weekend pricing section if weekend_price_amount_native is NOT blank should remove the weekend price" time="0.832572876">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection setting weekend pricing section" tests="0" time="0.000195497" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection updating monthly pricing section" tests="1" time="0.91099661" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#ajax_save_pricing_subsection updating monthly pricing section should create or update schedule2s for the four schedule dates" time="0.910541847">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection updating prorating section" tests="2" time="1.753277027" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#ajax_save_pricing_subsection updating prorating section  should set is_weekly_price_prorated on Hosting" time="0.906330131">
  </testcase>
  <testcase name="HostingController#ajax_save_pricing_subsection updating prorating section should set is_monthly_price_prorated on Hosting" time="0.846464542">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection updating weekly pricing section" tests="1" time="1.37677402" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#ajax_save_pricing_subsection updating weekly pricing section should create or update schedule2s for the schedule date and schedule date + 6.days" time="1.376409919">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#ajax_save_pricing_subsection" tests="1" time="0.91889811" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#ajax_save_pricing_subsection assigns the listing" time="0.918590969">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing assigning can be fake deleted" tests="1" time="0.876053685" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#pricing assigning can be fake deleted should be assigned Hosting#can_be_fake_deleted?" time="0.875660261">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing assigning max nights options" tests="1" time="1.380648566" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#pricing assigning max nights options should get them from the hosting class" time="1.380261157">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing assigning min nights options" tests="1" time="0.861205711" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#pricing assigning min nights options should get them from the hosting class" time="0.860822165">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing assigning sublet if sublet pricing has monthly price" tests="1" time="0.995042903" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#pricing assigning sublet if sublet pricing has monthly price should assign monthly price to sublet_price" time="0.994620975">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing assigning sublet if sublet pricing has only daily price but no monthly price" tests="1" time="1.016775145" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#pricing assigning sublet if sublet pricing has only daily price but no monthly price should assign sublet price by multiplying daily price against days in reservation" time="1.016407934">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing assigning sublet if sublet pricing is not found" tests="1" time="0.864906355" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#pricing assigning sublet if sublet pricing is not found should not assign sublet" time="0.864522807">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing assigning sublet pricing" tests="1" time="1.023569974" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#pricing assigning sublet pricing assigns sublet pricing" time="1.023201087">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing assigning sublet" tests="0" time="0.000190435" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing assigning weekly and monthly pricing" tests="3" time="3.45709934" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#pricing assigning weekly and monthly pricing should assign weekly pricing" time="0.997063269">
  </testcase>
  <testcase name="HostingController#pricing assigning weekly and monthly pricing should assign monthly pricing" time="1.430524184">
  </testcase>
  <testcase name="HostingController#pricing assigning weekly and monthly pricing should assign sublet pricing" time="1.028936991">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing assigning weekly/monthly_low/monthly_high pricing per day if monthly_price_native is nil on hosting" tests="2" time="1.745050695" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#pricing assigning weekly/monthly_low/monthly_high pricing per day if monthly_price_native is nil on hosting should assign monthly pricing per day low as 0" time="0.874563604">
  </testcase>
  <testcase name="HostingController#pricing assigning weekly/monthly_low/monthly_high pricing per day if monthly_price_native is nil on hosting should assign monthly pricing per day high as 0" time="0.870013648">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing assigning weekly/monthly_low/monthly_high pricing per day if monthly_price_native is set on hosting" tests="2" time="2.257162913" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#pricing assigning weekly/monthly_low/monthly_high pricing per day if monthly_price_native is set on hosting should assign monthly pricing per day low as monthly price native divided by 31" time="1.387626482">
  </testcase>
  <testcase name="HostingController#pricing assigning weekly/monthly_low/monthly_high pricing per day if monthly_price_native is set on hosting should assign monthly pricing per day high as monthly price native divided by 28" time="0.869030667">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing assigning weekly/monthly_low/monthly_high pricing per day if weekly_price_native is nil on hosting" tests="1" time="0.871147806" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#pricing assigning weekly/monthly_low/monthly_high pricing per day if weekly_price_native is nil on hosting should assign weekly pricing per day as 0" time="0.870802338">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing assigning weekly/monthly_low/monthly_high pricing per day if weekly_price_native is set on hosting" tests="1" time="0.865347499" failures="0" errors="0" skipped="0">
  <testcase name="HostingController#pricing assigning weekly/monthly_low/monthly_high pricing per day if weekly_price_native is set on hosting should assign weekly pricing per day as 0" time="0.864966303">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing assigning weekly/monthly_low/monthly_high pricing per day" tests="0" time="0.000196225" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController#pricing" tests="0" time="0.000163104" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingController" tests="0" time="0.000237958" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting default availability" tests="2" time="1.965675212" failures="0" errors="0" skipped="0">
  <testcase name="Hosting default availability should save its status when toggled" time="0.962489917">
  </testcase>
  <testcase name="Hosting default availability should create appropriate calendar data when toggled " time="1.002736201">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting deleting" tests="4" time="5.221655222" failures="0" errors="0" skipped="0">
  <testcase name="Hosting deleting should turn off the listing if its active" time="1.311899279">
  </testcase>
  <testcase name="Hosting deleting should delete and record the deletion" time="0.926650178">
  </testcase>
  <testcase name="Hosting deleting should not allow deleting of hosting with upcoming reservation" time="1.699100726">
  </testcase>
  <testcase name="Hosting deleting should not show deleted hostings in user.hostings" time="1.283260528">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#description_length for a hosting with a description attribute but not associated HostingDescriptions" tests="1" time="0.918656281" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#description_length for a hosting with a description attribute but not associated HostingDescriptions should return the length of the description attribute" time="0.918199879">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#description_length for a hosting with an associated HostingDescription but no description attribute" tests="1" time="0.941941502" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#description_length for a hosting with an associated HostingDescription but no description attribute should return the length of the associated HostingDescription" time="0.941543829">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#description_length for a hosting with both a description attribute and an associated HostingDescription" tests="1" time="1.300460899" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#description_length for a hosting with both a description attribute and an associated HostingDescription should prefer the length of the description attribute over the associated HostingDescription" time="1.299991431">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#description_length for a hosting with multiple associated HostingDescriptions (but no description attribute)" tests="1" time="0.918287993" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#description_length for a hosting with multiple associated HostingDescriptions (but no description attribute) should return the length of the first HostingDescription's description" time="0.917887216">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#description_length for a hosting with no description attribute and no associated HostingDescriptions" tests="1" time="0.927299615" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#description_length for a hosting with no description attribute and no associated HostingDescriptions should return 0" time="0.926946396">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#description_length" tests="0" time="0.000203685" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingDescription validation" tests="4" time="2.38181255" failures="0" errors="0" skipped="0">
  <testcase name="HostingDescription validation requires presence of hosting_id" time="0.402178424">
  </testcase>
  <testcase name="HostingDescription validation requires presence of locale" time="0.439077763">
  </testcase>
  <testcase name="HostingDescription validation requires inclusion of locale in our set of active languages" time="0.583959168">
  </testcase>
  <testcase name="HostingDescription validation requires uniqueness per locale and hosting_id" time="0.955741625">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingDescription" tests="0" time="0.00023164" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#extra_people_price" tests="1" time="0.923998472" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#extra_people_price should return 0 if bogus data was passed in" time="0.42218382">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting fill_available_dates_with_daily_price" tests="1" time="0.844572702" failures="0" errors="0" skipped="0">
  <testcase name="Hosting fill_available_dates_with_daily_price updates the price" time="0.844215522">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting first_became_available_between scope" tests="3" time="10.16553546" failures="0" errors="0" skipped="0">
  <testcase name="Hosting first_became_available_between scope should include a hosting that first became available between the given times" time="3.758449908">
  </testcase>
  <testcase name="Hosting first_became_available_between scope should exclude a hosting that first became available before the earliest time" time="4.63232213">
  </testcase>
  <testcase name="Hosting first_became_available_between scope should exclude a hosting that first became available after the latest time" time="1.77420344">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#geocode_from_location" tests="1" time="0.785344906" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#geocode_from_location should correctly save small islands" time="0.784979541">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#has_ever_been_available? even if the hosting is currently unavailable" tests="3" time="1.637370942" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#has_ever_been_available? even if the hosting is currently unavailable returns true if the has_ever_been_available dyson property is true" time="0.449795902">
  </testcase>
  <testcase name="Hosting#has_ever_been_available? even if the hosting is currently unavailable returns true if the hosting_info's progress says it's been available in the past" time="0.770152915">
  </testcase>
  <testcase name="Hosting#has_ever_been_available? even if the hosting is currently unavailable returns false if the hosting_info's progress says hasn't been available in the past" time="0.416814153">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#has_ever_been_available?" tests="2" time="0.849465966" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#has_ever_been_available? returns false for a brand new hosting" time="0.402301288">
  </testcase>
  <testcase name="Hosting#has_ever_been_available? returns true if the hosting is currently available" time="0.44674949">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#has_guidebook?" tests="2" time="1.883305717" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#has_guidebook? should return true iff there is at least one place recommendation" time="0.946712725">
  </testcase>
  <testcase name="Hosting#has_guidebook? should not count deleted recommendations" time="0.936128209">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting hash_visible_to_owner_or_guest?" tests="4" time="3.86265949" failures="0" errors="0" skipped="0">
  <testcase name="Hosting hash_visible_to_owner_or_guest? should be true if is owner" time="0.806779281">
  </testcase>
  <testcase name="Hosting hash_visible_to_owner_or_guest? should be true if admin" time="0.947628616">
  </testcase>
  <testcase name="Hosting hash_visible_to_owner_or_guest? should be true if :is_accepted_guest is true" time="0.801564293">
  </testcase>
  <testcase name="Hosting hash_visible_to_owner_or_guest? should be false otherwise" time="1.305967244">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#has_lengthy_description?" tests="5" time="5.084977566" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#has_lengthy_description? should be true if any human-translated description length &gt; specified length" time="0.935223041">
  </testcase>
  <testcase name="Hosting#has_lengthy_description? should be false if no human-translated description length &gt; specified length" time="0.936459067">
  </testcase>
  <testcase name="Hosting#has_lengthy_description? should be true if any human-translated description length in words &gt; specified length in words" time="1.313011842">
  </testcase>
  <testcase name="Hosting#has_lengthy_description? should be false if any human-translated description length in words &lt; specified length" time="0.933785073">
  </testcase>
  <testcase name="Hosting#has_lengthy_description? should be true if any human-translated description in Chinese length in characters &gt; specified length in words" time="0.96565907">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#impressions_count" tests="2" time="2.271154274" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#impressions_count should be read from Redis" time="1.285919319">
  </testcase>
  <testcase name="Hosting#impressions_count should write to Redis" time="0.984739411">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#increment_impressions_count_in_redis!" tests="2" time="4.878425693" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#increment_impressions_count_in_redis! should be 0 for a hosting that's never been viewed" time="3.997701365">
  </testcase>
  <testcase name="Hosting#increment_impressions_count_in_redis! should be 5 for a hosting that's had 5 increment calls" time="0.880238917">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#increment_impressions_count!" tests="1" time="0.961673174" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#increment_impressions_count! should increment the impressions count 10 times" time="0.961296116">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingInfoCriteria OPTIONAL_CRITERIA has_lengthier_character_description" tests="2" time="1.953785857" failures="0" errors="0" skipped="0">
  <testcase name="HostingInfoCriteria OPTIONAL_CRITERIA has_lengthier_character_description should be set to true if hosting description &gt;= OPTIONAL_DESCRIPTION_WORD_LENGTH words" time="0.989121504">
  </testcase>
  <testcase name="HostingInfoCriteria OPTIONAL_CRITERIA has_lengthier_character_description should be set to false if hosting description &lt; OPTIONAL_DESCRIPTION_WORD_LENGTH words" time="0.964220582">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingInfoCriteria OPTIONAL_CRITERIA" tests="0" time="0.000142855" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingInfoCriteria" tests="0" time="0.00020998" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingInfo PROGRESS_REQUIREMENTS" tests="2" time="0.800619128" failures="0" errors="0" skipped="0">
  <testcase name="HostingInfo PROGRESS_REQUIREMENTS should have 1.0 as the total sum of all requirement values" time="0.391088163">
  </testcase>
  <testcase name="HostingInfo PROGRESS_REQUIREMENTS should have a unique set of names" time="0.408928491">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingInfo" tests="0" time="0.000236308" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting initialization" tests="4" time="1.751975329" failures="0" errors="0" skipped="0">
  <testcase name="Hosting initialization initializes with correct defaults" time="0.430501555">
  </testcase>
  <testcase name="Hosting initialization correctly sets/overrides attributes" time="0.458664752">
  </testcase>
  <testcase name="Hosting initialization initializes with default locale" time="0.421545393">
  </testcase>
  <testcase name="Hosting initialization initializes with correct locale" time="0.440407655">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting instant booking" tests="4" time="5.392059858" failures="0" errors="0" skipped="0">
  <testcase name="Hosting instant booking should not be instant_bookable if instant_book_allowed is off" time="1.647352616">
  </testcase>
  <testcase name="Hosting instant booking is possible if the host is invited" time="1.24016276">
  </testcase>
  <testcase name="Hosting instant booking is not possible if the current user requires messaging" time="1.309440998">
  </testcase>
  <testcase name="Hosting instant booking is possible to set instant book to allowed if the host is eligible" time="1.194408242">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#localized_people_pricing_description" tests="2" time="1.405502869" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#localized_people_pricing_description should work for one included night" time="0.454624423">
  </testcase>
  <testcase name="Hosting#localized_people_pricing_description should work for two included nights" time="0.436763984">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#mark_price_as_set in a disaster" tests="2" time="8.618173487" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#mark_price_as_set in a disaster should be allowed to set price to 0 during an active disaster" time="4.168617199">
  </testcase>
  <testcase name="Hosting#mark_price_as_set in a disaster should not be allowed to set price to 0 without an active disaster" time="4.449074074">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#mark_price_as_set when hosting has never had a price set before and the hosting has availability set to false" tests="3" time="6.764318691" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#mark_price_as_set when hosting has never had a price set before and the hosting has availability set to false is called when updating attributes" time="1.48959753">
  </testcase>
  <testcase name="Hosting#mark_price_as_set when hosting has never had a price set before and the hosting has availability set to false sets no_price_set to false after updating the price on a hosting to a valid amount" time="4.431565554">
  </testcase>
  <testcase name="Hosting#mark_price_as_set when hosting has never had a price set before and the hosting has availability set to false leaves no_price_set as true after an attempt to set an invalid price" time="0.842549202">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#mark_price_as_set when hosting has never had a price set before and the hosting has availability set to true" tests="3" time="9.48086754" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#mark_price_as_set when hosting has never had a price set before and the hosting has availability set to true is called when updating attributes" time="1.362523717">
  </testcase>
  <testcase name="Hosting#mark_price_as_set when hosting has never had a price set before and the hosting has availability set to true sets no_price_set to false after updating the price on a hosting to a valid amount" time="3.728407541">
  </testcase>
  <testcase name="Hosting#mark_price_as_set when hosting has never had a price set before and the hosting has availability set to true leaves no_price_set as true after an attempt to set an invalid price" time="4.389380032">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#mark_price_as_set when hosting has never had a price set before" tests="0" time="0.000209846" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#mark_price_as_set" tests="0" time="0.000198548" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#move_to_user" tests="5" time="11.013076809" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#move_to_user should move the lising to the new user" time="1.644615993">
  </testcase>
  <testcase name="Hosting#move_to_user should delete any payout splits on the listing" time="2.271055771">
  </testcase>
  <testcase name="Hosting#move_to_user should update the future reservations for the listing" time="2.828931508">
  </testcase>
  <testcase name="Hosting#move_to_user should update the future line_items for the listing" time="2.959986734">
  </testcase>
  <testcase name="Hosting#move_to_user should update the listing counts of the new and old users" time="1.307708129">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hosting_name_i18n rake hosting_name_i18n:pull_from_phrases" tests="1" time="1.181289913" failures="0" errors="0" skipped="0">
  <testcase name="hosting_name_i18n rake hosting_name_i18n:pull_from_phrases should work" time="1.180891407">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hosting_name_i18n rake hosting_name_i18n:push_to_phrases" tests="1" time="1.128027904" failures="0" errors="0" skipped="0">
  <testcase name="hosting_name_i18n rake hosting_name_i18n:push_to_phrases should work" time="1.127261583">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hosting_name_i18n" tests="0" time="0.005380744" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting needs_to_message?" tests="2" time="2.317569574" failures="0" errors="0" skipped="0">
  <testcase name="Hosting needs_to_message? returns true for a country" time="1.372615852">
  </testcase>
  <testcase name="Hosting needs_to_message? returns true for a village" time="0.944429595">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting offset coordinates" tests="2" time="1.864383634" failures="0" errors="0" skipped="0">
  <testcase name="Hosting offset coordinates should deteministally offset coordinates based on hosting.id" time="1.117016413">
  </testcase>
  <testcase name="Hosting offset coordinates should offset by the same amount irrespective of actual lat/lng" time="0.74685589">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingPersonalizePresenter.signup_before_bookit for a logged in user" tests="1" time="0.838158368" failures="0" errors="0" skipped="0">
  <testcase name="HostingPersonalizePresenter.signup_before_bookit for a logged in user does not show the signup before p4" time="0.83782543">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingPersonalizePresenter.signup_before_bookit for a new visitor in the experiment group" tests="1" time="0.868533084" failures="0" errors="0" skipped="0">
  <testcase name="HostingPersonalizePresenter.signup_before_bookit for a new visitor in the experiment group shows the signup modal" time="0.868051877">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingPersonalizePresenter.signup_before_bookit for a new visitor" tests="1" time="0.820977121" failures="0" errors="0" skipped="0">
  <testcase name="HostingPersonalizePresenter.signup_before_bookit for a new visitor doesnt see the signup modal by default" time="0.820679475">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingPersonalizePresenter.signup_before_bookit" tests="0" time="0.000149221" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostingPersonalizePresenter" tests="0" time="0.000217079" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#person_capacity_string" tests="3" time="3.127982549" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#person_capacity_string should return '1' if the person_capacity is nil" time="0.945177623">
  </testcase>
  <testcase name="Hosting#person_capacity_string should return '1' if the person_capacity is 0" time="1.267379111">
  </testcase>
  <testcase name="Hosting#person_capacity_string should handle person_capacity values greater than 16" time="0.914845489">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting.place_worth" tests="4" time="2.024887522" failures="0" errors="0" skipped="0">
  <testcase name="Hosting.place_worth returns a hash with a USD price and currency" time="0.41041674">
  </testcase>
  <testcase name="Hosting.place_worth returns a hash with a GBP price and currency" time="0.423074862">
  </testcase>
  <testcase name="Hosting.place_worth returns a hash with failure on AP failure" time="0.421272922">
  </testcase>
  <testcase name="Hosting.place_worth returns a hash with failure on no-data" time="0.769369703">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting ratings via reviews" tests="1" time="0.972220363" failures="0" errors="0" skipped="0">
  <testcase name="Hosting ratings via reviews should be able to calculate its rating based on reviews" time="0.97181788">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#requires_license?" tests="5" time="2.17925118" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#requires_license? returns false for a brand new hosting" time="0.423682996">
  </testcase>
  <testcase name="Hosting#requires_license? returns true for a hosting in the state of Hawaii" time="0.430842466">
  </testcase>
  <testcase name="Hosting#requires_license? returns true for a hosting in the country of Greece" time="0.440202335">
  </testcase>
  <testcase name="Hosting#requires_license? returns true for a hosting in the city of Chicago, IL" time="0.447664152">
  </testcase>
  <testcase name="Hosting#requires_license? returns false for cities other than Chicago in IL" time="0.436081248">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#reservation_request_count" tests="1" time="5.150379152" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#reservation_request_count should not include new reservations" time="5.149969017">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting self.increment_impressions_count!" tests="3" time="3.165197127" failures="0" errors="0" skipped="0">
  <testcase name="Hosting self.increment_impressions_count! should accept a single argument" time="0.907022895">
  </testcase>
  <testcase name="Hosting self.increment_impressions_count! should always write to the db 1 out of 2 times if impressions &lt; 10" time="1.30174852">
  </testcase>
  <testcase name="Hosting self.increment_impressions_count! should write to the db 1 out of 10 times if 9 &lt; impressions &lt; 100" time="0.955768856">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#set_hosting_description" tests="6" time="6.80521994" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#set_hosting_description should create a new description for a locale that doesn't exist" time="1.367639365">
  </testcase>
  <testcase name="Hosting#set_hosting_description should update a locale that does exist" time="0.945780095">
  </testcase>
  <testcase name="Hosting#set_hosting_description should not modify properties it doesn't receive and save the ones it does" time="0.986027004">
  </testcase>
  <testcase name="Hosting#set_hosting_description should update the name and description of the hosting object if the locale matches" time="1.529103251">
  </testcase>
  <testcase name="Hosting#set_hosting_description should not update the hosting object if the locale doesn't match" time="0.922239192">
  </testcase>
  <testcase name="Hosting#set_hosting_description should update the changed attributes on the hosting object if the locale matches" time="1.053419855">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#set_impressions_count_in_redis!" tests="1" time="4.25913974" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#set_impressions_count_in_redis! should be 70 for a hosting that's been set to 70" time="4.25877308">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#set_price_native_automatically when autopricing response contains no nightly price" tests="1" time="0.868517532" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#set_price_native_automatically when autopricing response contains no nightly price should return false" time="0.868148395">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#set_price_native_automatically when autopricing response is valid" tests="1" time="1.147564663" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#set_price_native_automatically when autopricing response is valid should set the hosting's price_native attribute and return its value" time="1.14715843">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#set_price_native_automatically when autopricing response's price is below 0" tests="1" time="0.845030928" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#set_price_native_automatically when autopricing response's price is below 0 should return false" time="0.844597301">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#set_price_native_automatically when not given a location" tests="1" time="0.794350078" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#set_price_native_automatically when not given a location should return false" time="0.793989326">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#set_price_native_automatically" tests="0" time="0.000196857" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#set_price_native_to_default" tests="1" time="1.270047599" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#set_price_native_to_default should set price_native to Hosting default price in native currency" time="1.269472526">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#set_unavailable_reason_based_on_progress! when progress bar is full" tests="3" time="3.17279646" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#set_unavailable_reason_based_on_progress! when progress bar is full should not activate an unavailable listing" time="0.980658996">
  </testcase>
  <testcase name="Hosting#set_unavailable_reason_based_on_progress! when progress bar is full should change unavailable_reason to nil if reason used to be Hosting::UNAVAILABLE_STATUS_PROGRESS_BAR" time="1.233596281">
  </testcase>
  <testcase name="Hosting#set_unavailable_reason_based_on_progress! when progress bar is full should not change unavailable_reason if reason used to be anything but Hosting::UNAVAILABLE_STATUS_PROGRESS_BAR" time="0.957945132">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#set_unavailable_reason_based_on_progress! when progress bar is not full" tests="2" time="2.325458995" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#set_unavailable_reason_based_on_progress! when progress bar is not full should change unavailable_reason to Hosting::UNAVAILABLE_STATUS_PROGRESS_BAR" time="1.340909119">
  </testcase>
  <testcase name="Hosting#set_unavailable_reason_based_on_progress! when progress bar is not full should deactivate an available listing" time="0.984081487">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#set_unavailable_reason_based_on_progress!" tests="0" time="0.000214292" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hostings namespace rake task create_or_update_hosting_description create hosting_description" tests="2" time="1.686479015" failures="0" errors="0" skipped="0">
  <testcase name="hostings namespace rake task create_or_update_hosting_description create hosting_description syncs for direct_description" time="0.829444758">
  </testcase>
  <testcase name="hostings namespace rake task create_or_update_hosting_description create hosting_description syncs for property description" time="0.856571639">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hostings namespace rake task create_or_update_hosting_description with existing hosting_description" tests="2" time="1.726759309" failures="0" errors="0" skipped="0">
  <testcase name="hostings namespace rake task create_or_update_hosting_description with existing hosting_description syncs for direct_description" time="0.879372569">
  </testcase>
  <testcase name="hostings namespace rake task create_or_update_hosting_description with existing hosting_description syncs for property description" time="0.846954913">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hostings namespace rake task create_or_update_hosting_description" tests="0" time="0.000157274" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hostings namespace rake task fix_locale_case" tests="6" time="2.422677611" failures="0" errors="0" skipped="0">
  <testcase name="hostings namespace rake task fix_locale_case correctly fixes locale for en" time="0.392225634">
  </testcase>
  <testcase name="hostings namespace rake task fix_locale_case correctly fixes locale for en-US" time="0.358670202">
  </testcase>
  <testcase name="hostings namespace rake task fix_locale_case correctly fixes locale for " time="0.396536651">
  </testcase>
  <testcase name="hostings namespace rake task fix_locale_case correctly fixes locale for " time="0.382095885">
  </testcase>
  <testcase name="hostings namespace rake task fix_locale_case correctly fixes locale for total-dashed-garbage" time="0.514099074">
  </testcase>
  <testcase name="hostings namespace rake task fix_locale_case correctly fixes locale for en-us" time="0.378173563">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hostings namespace rake task fix_locale" tests="5" time="4.422557252" failures="0" errors="0" skipped="0">
  <testcase name="hostings namespace rake task fix_locale shouldn't do anything if locale already defined" time="0.82939936">
  </testcase>
  <testcase name="hostings namespace rake task fix_locale corrects locale case if all lower" time="1.354467592">
  </testcase>
  <testcase name="hostings namespace rake task fix_locale shouldn't do anything if locale can't be determined" time="0.453840474">
  </testcase>
  <testcase name="hostings namespace rake task fix_locale determines locale by description" time="0.906200963">
  </testcase>
  <testcase name="hostings namespace rake task fix_locale determines locale by user's preferred locale" time="0.877815628">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hostings namespace rake task properties_valid?" tests="2" time="2.1920758" failures="0" errors="0" skipped="0">
  <testcase name="hostings namespace rake task properties_valid? determines that hosting properties set" time="0.813856095">
  </testcase>
  <testcase name="hostings namespace rake task properties_valid? determines that hosting properties are not set" time="1.37778498">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hostings namespace rake task sync_hosting_with_hosting_description missing locale" tests="3" time="1.857226203" failures="0" errors="0" skipped="0">
  <testcase name="hostings namespace rake task sync_hosting_with_hosting_description missing locale detects missing locale" time="0.940420078">
  </testcase>
  <testcase name="hostings namespace rake task sync_hosting_with_hosting_description missing locale skips existing locale" time="0.472013021">
  </testcase>
  <testcase name="hostings namespace rake task sync_hosting_with_hosting_description missing locale sets default locale" time="0.444261504">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hostings namespace rake task sync_hosting_with_hosting_description properties valid?" tests="3" time="2.540025573" failures="0" errors="0" skipped="0">
  <testcase name="hostings namespace rake task sync_hosting_with_hosting_description properties valid? counts properties valid if properties" time="0.819079782">
  </testcase>
  <testcase name="hostings namespace rake task sync_hosting_with_hosting_description properties valid? counts description valid if no properties" time="0.838362371">
  </testcase>
  <testcase name="hostings namespace rake task sync_hosting_with_hosting_description properties valid? counts description valid if no description or properties" time="0.881994381">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hostings namespace rake task sync_hosting_with_hosting_description save_enabled" tests="4" time="4.270557897" failures="0" errors="0" skipped="0">
  <testcase name="hostings namespace rake task sync_hosting_with_hosting_description save_enabled it doesn't call HostingDescription save callbacks" time="0.916790827">
  </testcase>
  <testcase name="hostings namespace rake task sync_hosting_with_hosting_description save_enabled enables callbacks by default" time="1.467046206">
  </testcase>
  <testcase name="hostings namespace rake task sync_hosting_with_hosting_description save_enabled turns callbacks off" time="0.9885061">
  </testcase>
  <testcase name="hostings namespace rake task sync_hosting_with_hosting_description save_enabled turn callbacks off and then on again" time="0.897439996">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hostings namespace rake task sync_hosting_with_hosting_description" tests="0" time="0.000161654" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hostings namespace rake task unify_description" tests="2" time="1.675799769" failures="0" errors="0" skipped="0">
  <testcase name="hostings namespace rake task unify_description syncs hosting model for property-based description" time="0.838468483">
  </testcase>
  <testcase name="hostings namespace rake task unify_description syncs hosting model for direct-description state" time="0.836803331">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hostings namespace rake task" tests="0" time="0.000196949" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting treat 0 and blank values as clearing optional prices" tests="4" time="16.53913129" failures="0" errors="0" skipped="0">
  <testcase name="Hosting treat 0 and blank values as clearing optional prices should set weekly and monthly price to nil when they are set to 0" time="4.7671436">
  </testcase>
  <testcase name="Hosting treat 0 and blank values as clearing optional prices should set weekly and monthly price to nil when they are blank" time="0.838258827">
  </testcase>
  <testcase name="Hosting treat 0 and blank values as clearing optional prices should not change weekly and monthly price if they are &gt; 0" time="4.151293616">
  </testcase>
  <testcase name="Hosting treat 0 and blank values as clearing optional prices should remove a weekend price if it's set to zero or blank" time="6.781741722">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting updating amenities" tests="5" time="5.432236782" failures="0" errors="0" skipped="0">
  <testcase name="Hosting updating amenities should not change anything if the provided amenity already exists" time="1.010643765">
  </testcase>
  <testcase name="Hosting updating amenities should destroy an amenity if it is not in the array" time="0.987402093">
  </testcase>
  <testcase name="Hosting updating amenities should replace an amenity if it is not in the array" time="1.406877762">
  </testcase>
  <testcase name="Hosting updating amenities should create an amenity if it does not already exist" time="0.95664581">
  </testcase>
  <testcase name="Hosting updating amenities should create/destroy/not-touch amenities appropriately" time="1.069650284">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting#user_defined_latlng=" tests="2" time="1.60571246" failures="0" errors="0" skipped="0">
  <testcase name="Hosting#user_defined_latlng= should set attributes correctly if lat, lng is within the bounding box" time="0.84701936">
  </testcase>
  <testcase name="Hosting#user_defined_latlng= should not accept coordinates if they are outside of the bounding box" time="0.758135292">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations on bed type" tests="2" time="1.525901807" failures="0" errors="0" skipped="0">
  <testcase name="Hosting validations on bed type invalidate bed types that Airbnb does not support" time="0.758033716">
  </testcase>
  <testcase name="Hosting validations on bed type allow valid bed types" time="0.767370784">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations on city" tests="2" time="1.509002808" failures="0" errors="0" skipped="0">
  <testcase name="Hosting validations on city invalidate hosting if city is blank" time="0.764560435">
  </testcase>
  <testcase name="Hosting validations on city allow valid cities" time="0.743956974">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations on cleaning fee" tests="3" time="2.258054243" failures="0" errors="0" skipped="0">
  <testcase name="Hosting validations on cleaning fee invalidate listing with cleaning fee that is above $300" time="0.770672376">
  </testcase>
  <testcase name="Hosting validations on cleaning fee invalidate listing with cleaning fee that is below $5" time="0.745020474">
  </testcase>
  <testcase name="Hosting validations on cleaning fee allow listing with valid cleaning fee" time="0.741789681">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations on locale" tests="2" time="1.544385697" failures="0" errors="0" skipped="0">
  <testcase name="Hosting validations on locale should accept valid locale" time="0.771831372">
  </testcase>
  <testcase name="Hosting validations on locale invalid if missing locale" time="0.7720645">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations on location" tests="3" time="2.773067836" failures="0" errors="0" skipped="0">
  <testcase name="Hosting validations on location invalidate hosting if lat or long is nil" time="0.774367843">
  </testcase>
  <testcase name="Hosting validations on location invalidate hosting if lat or long is too close to 0" time="1.23151906">
  </testcase>
  <testcase name="Hosting validations on location allow valid locations" time="0.766584951">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations on monthly price" tests="3" time="2.649048649" failures="0" errors="0" skipped="0">
  <testcase name="Hosting validations on monthly price invalidate listing with monthly price that is above $60,000" time="1.068265281">
  </testcase>
  <testcase name="Hosting validations on monthly price invalidate listing with monthly price that is below $300" time="0.777643554">
  </testcase>
  <testcase name="Hosting validations on monthly price allow listing with valid monthly price" time="0.802513993">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations on price for an extra person" tests="3" time="2.603912273" failures="0" errors="0" skipped="0">
  <testcase name="Hosting validations on price for an extra person invalidate listing with price for extra person that is above $300" time="0.77068204">
  </testcase>
  <testcase name="Hosting validations on price for an extra person invalidate listing with price for extra person that is below $5" time="1.068143071">
  </testcase>
  <testcase name="Hosting validations on price for an extra person allow listing with valid price for extra person" time="0.764496398">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations on price" tests="4" time="3.576004028" failures="0" errors="0" skipped="0">
  <testcase name="Hosting validations on price invalidate listing with no price" time="0.77817527">
  </testcase>
  <testcase name="Hosting validations on price invalidate listing with price that is above $10,000" time="0.805401532">
  </testcase>
  <testcase name="Hosting validations on price invalidate listing with price that is below $10" time="1.277981433">
  </testcase>
  <testcase name="Hosting validations on price allow listing with valid price" time="0.713739406">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations on room type" tests="2" time="1.799973763" failures="0" errors="0" skipped="0">
  <testcase name="Hosting validations on room type invalidate room types that Airbnb don't support" time="0.750268233">
  </testcase>
  <testcase name="Hosting validations on room type allow valid room types" time="1.049228348">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations on security deposit" tests="3" time="2.796688565" failures="0" errors="0" skipped="0">
  <testcase name="Hosting validations on security deposit invalidate listing with security deposit that is above $5,100" time="0.799008954">
  </testcase>
  <testcase name="Hosting validations on security deposit invalidate listing with security deposit that is below $95" time="0.771877963">
  </testcase>
  <testcase name="Hosting validations on security deposit allow listing with valid security deposit" time="1.225161741">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations on state" tests="3" time="2.540173601" failures="0" errors="0" skipped="0">
  <testcase name="Hosting validations on state invalidate hosting in the US if length of the state name is &gt;2" time="0.743925622">
  </testcase>
  <testcase name="Hosting validations on state allow hosting if not in the US and the length of the state name is &gt;2" time="0.719062916">
  </testcase>
  <testcase name="Hosting validations on state allow hosting in the US if the length of the state name is 2" time="1.076618165">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations on tax percent" tests="3" time="2.377927455" failures="0" errors="0" skipped="0">
  <testcase name="Hosting validations on tax percent invalidate listing with price for extra person that is above $2000" time="0.811669182">
  </testcase>
  <testcase name="Hosting validations on tax percent invalidate listing with price for extra person that is below $0" time="0.777478786">
  </testcase>
  <testcase name="Hosting validations on tax percent allow listing with valid price for extra person" time="0.788162404">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations on title" tests="3" time="2.375867168" failures="0" errors="0" skipped="0">
  <testcase name="Hosting validations on title invalidate titles with URLs in them" time="0.733684545">
  </testcase>
  <testcase name="Hosting validations on title invalidate blank titles" time="0.742049788">
  </testcase>
  <testcase name="Hosting validations on title allow valid title" time="0.899569026">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations on weekly price" tests="3" time="2.260629827" failures="0" errors="0" skipped="0">
  <testcase name="Hosting validations on weekly price invalidate listing with weekly price that is above $14,000" time="0.729100621">
  </testcase>
  <testcase name="Hosting validations on weekly price invalidate listing with weekly price that is below $70" time="0.763260322">
  </testcase>
  <testcase name="Hosting validations on weekly price allow listing with valid weekly price" time="0.767615484">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting validations" tests="0" time="0.000224251" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting when calculating average nightly price" tests="3" time="2.86480938" failures="0" errors="0" skipped="0">
  <testcase name="Hosting when calculating average nightly price should calculate the correct value when there are no Schedule2s" time="0.837901554">
  </testcase>
  <testcase name="Hosting when calculating average nightly price should calculate the correct value when there are Schedule2s with nightly values" time="0.883302384">
  </testcase>
  <testcase name="Hosting when calculating average nightly price should calculate the correct value when Schedule2s make some days unavailable" time="1.143020573">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting when calculating total price" tests="1" time="1.750574358" failures="0" errors="0" skipped="0">
  <testcase name="Hosting when calculating total price should return basic nightly price and extra people price if dates are nil" time="1.750214306">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting when creating a sublet new hosts" tests="1" time="0.624176154" failures="0" errors="0" skipped="0">
  <testcase name="Hosting when creating a sublet new hosts should create new schedule2s with correct min_stays and pricing" time="0.623761535">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting when creating a sublet" tests="0" time="0.525923295" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting when doing multilingual-description stuff #delete_name_and_description!" tests="1" time="0.988305985" failures="0" errors="0" skipped="0">
  <testcase name="Hosting when doing multilingual-description stuff #delete_name_and_description! should delete hosting description" time="0.987940114">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting when doing multilingual-description stuff #description" tests="6" time="6.218547281" failures="0" errors="0" skipped="0">
  <testcase name="Hosting when doing multilingual-description stuff #description should return whatever is in its name attribute if no parameters are passed" time="1.293662542">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #description should return description in preferred locale if it exists" time="0.900303375">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #description should return nil if asked for locale that doesn't exist with :no_fallback =&gt; true" time="0.92713918">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #description otherwise, it should smartly fall back to English" time="0.962157858">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #description otherwise, it should smartly fall back to whatever's available" time="1.246773056">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #description otherwise, it should fall back to the raw description attribute" time="0.887619899">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting when doing multilingual-description stuff #has_lengthy_description?" tests="3" time="2.959994801" failures="0" errors="0" skipped="0">
  <testcase name="Hosting when doing multilingual-description stuff #has_lengthy_description? should be false if no description meets a certain length" time="0.935712495">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #has_lengthy_description? should be true if at least one multilingual description meets a certain length" time="0.964275253">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #has_lengthy_description? should be true if the internal description meets a certain length" time="1.059382547">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting when doing multilingual-description stuff #locales_with_descriptions" tests="1" time="1.358934805" failures="0" errors="0" skipped="0">
  <testcase name="Hosting when doing multilingual-description stuff #locales_with_descriptions should return an array of all the locales for which the hosting has translated descriptions" time="1.358497593">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting when doing multilingual-description stuff #name" tests="6" time="5.721189126" failures="0" errors="0" skipped="0">
  <testcase name="Hosting when doing multilingual-description stuff #name should return whatever is in English if preferred locale is missing" time="0.943685931">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #name should return name in preferred locale if it exists" time="0.869056782">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #name should return nil if asked for locale that doesn't exist with :no_fallback =&gt; true" time="1.227901409">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #name otherwise, it should smartly fall back to English" time="0.888315005">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #name otherwise, it should smartly fall back to whatever's available" time="0.925083973">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #name otherwise, it should fall back to the raw name attribute" time="0.866151176">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting when doing multilingual-description stuff #save_name_and_description_deprecated! for hostings with autotranslate" tests="1" time="0.953762734" failures="0" errors="0" skipped="0">
  <testcase name="Hosting when doing multilingual-description stuff #save_name_and_description_deprecated! for hostings with autotranslate should save source_locale attribute if the source locale is valid" time="0.953286026">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting when doing multilingual-description stuff #save_name_and_description_deprecated!" tests="7" time="7.329172609" failures="0" errors="0" skipped="0">
  <testcase name="Hosting when doing multilingual-description stuff #save_name_and_description_deprecated! should create name and description if a hosting_description in that language does not exist" time="0.889663067">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #save_name_and_description_deprecated! should create an object with machine_translated = true if machine_translated was passed in as an option" time="0.973348731">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #save_name_and_description_deprecated! should be able to get both machine-translated and non-machine-translated names and descriptions" time="1.255847072">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #save_name_and_description_deprecated! should save over existing hosting_description" time="0.907183646">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #save_name_and_description_deprecated! should be possible to save a name with empty description" time="0.924637665">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #save_name_and_description_deprecated! should copy name field into hosting object if the locale matches" time="1.355019818">
  </testcase>
  <testcase name="Hosting when doing multilingual-description stuff #save_name_and_description_deprecated! should remove stale automatic translations" time="1.02237576">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting when doing multilingual-description stuff" tests="0" time="0.000249311" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hosting" tests="0" time="0.000256261" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostOnboardingHelper should_show_new_manage_listing?" tests="5" time="2.900144419" failures="0" errors="0" skipped="0">
  <testcase name="HostOnboardingHelper should_show_new_manage_listing? should be false for nil user" time="0.372374809">
  </testcase>
  <testcase name="HostOnboardingHelper should_show_new_manage_listing? should be false for plain user" time="0.505350704">
  </testcase>
  <testcase name="HostOnboardingHelper should_show_new_manage_listing? should be true if new_ml is true" time="0.511635603">
  </testcase>
  <testcase name="HostOnboardingHelper should_show_new_manage_listing? should be false if new_ml is explicitly false, even is user is eligible" time="0.502706282">
  </testcase>
  <testcase name="HostOnboardingHelper should_show_new_manage_listing? should be true if omg_remarketing_campaign is certain value" time="1.007260388">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="HostOnboardingHelper" tests="0" time="0.000208746" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hurricane#is_hurricane_geocoder_results?" tests="5" time="5.423865138" failures="0" errors="0" skipped="0">
  <testcase name="Hurricane#is_hurricane_geocoder_results? returns true for the basic case, the city affected by the hurricane" time="1.345075457">
  </testcase>
  <testcase name="Hurricane#is_hurricane_geocoder_results? returns true for locations with raw geocoder results in the hurricane area" time="0.952469943">
  </testcase>
  <testcase name="Hurricane#is_hurricane_geocoder_results? returns false for places nowhere near the hurricane area" time="0.933405523">
  </testcase>
  <testcase name="Hurricane#is_hurricane_geocoder_results? returns false for no geocoding results" time="0.898186951">
  </testcase>
  <testcase name="Hurricane#is_hurricane_geocoder_results? returns true for listings in affected states" time="1.293953134">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Hurricane" tests="0" time="0.000234053" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="I18nActionMailer email_screenshotting" tests="1" time="0.406043348" failures="0" errors="0" skipped="1">
  <testcase name="I18nActionMailer email_screenshotting Should take screenshots of emails for translation (PENDING)" time="0.405650995">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="I18nActionMailer" tests="0" time="0.00020785" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="I18n date formatting" tests="2" time="1.109986946" failures="0" errors="0" skipped="0">
  <testcase name="I18n date formatting should work for English" time="0.726493186">
  </testcase>
  <testcase name="I18n date formatting should not barf with Thai" time="0.38301467">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="I18n date parsing" tests="9" time="3.630333778" failures="0" errors="0" skipped="0">
  <testcase name="I18n date parsing should parse an ISO 8601 date in the format YYYY-MM-DD for default locale" time="0.380332736">
  </testcase>
  <testcase name="I18n date parsing should parse an ISO 8601 date in the format YYYY-MM-DD for en-GB locale" time="0.390357284">
  </testcase>
  <testcase name="I18n date parsing should parse an ISO 8601 date in the format YYYY-MM-DD for de locale" time="0.379803773">
  </testcase>
  <testcase name="I18n date parsing should parse a localized date for en-GB locale" time="0.415080895">
  </testcase>
  <testcase name="I18n date parsing should parse a localized date for de locale" time="0.398997766">
  </testcase>
  <testcase name="I18n date parsing should parse an ISO date for de locale" time="0.384772228">
  </testcase>
  <testcase name="I18n date parsing should parse a localized date for fr locale" time="0.390075141">
  </testcase>
  <testcase name="I18n date parsing should parse a non-ISO date for zh locale" time="0.538300575">
  </testcase>
  <testcase name="I18n date parsing should parse an ISO date for zh locale" time="0.351349816">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="I18n default text change throttling with TranslationDefaultTextChangeThrottler" tests="2" time="1.483083529" failures="0" errors="0" skipped="0">
  <testcase name="I18n default text change throttling with TranslationDefaultTextChangeThrottler should be guarded against default text conflicts" time="1.095455927">
  </testcase>
  <testcase name="I18n default text change throttling with TranslationDefaultTextChangeThrottler should not guarded against default text changes" time="0.38713111">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="I18n prioritization with Counter" tests="2" time="2.43556727" failures="0" errors="0" skipped="0">
  <testcase name="I18n prioritization with Counter should use Counter to record and retrieve stats about which phrases are still used" time="0.625535247">
  </testcase>
  <testcase name="I18n prioritization with Counter Counter should work with Rails cache" time="1.809622425">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="I18n Stupid behavior of I18n.locale" tests="1" time="1.763804471" failures="0" errors="0" skipped="0">
  <testcase name="I18n Stupid behavior of I18n.locale should return only language tag for I18n.locale" time="1.763497397">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="I18n" tests="0" time="0.000213314" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Idology Client" tests="2" time="1.630594102" failures="0" errors="0" skipped="0">
  <testcase name="Idology Client should post user data" time="1.218881405">
  </testcase>
  <testcase name="Idology Client should post question or challenge answers" time="0.410982384">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/spec/lib/fraud/idology_client_spec.rb:5: warning: already initialized constant TESTDATA
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="InquiryDate" tests="10" time="12.660146877" failures="0" errors="0" skipped="0">
  <testcase name="InquiryDate correctly blocks the date" time="1.241035115">
  </testcase>
  <testcase name="InquiryDate does not block the date because the booking checkin is too close to today" time="1.145151014">
  </testcase>
  <testcase name="InquiryDate does not block the date because the booking length is too long" time="1.163858841">
  </testcase>
  <testcase name="InquiryDate correctly unblocks the date" time="1.185436955">
  </testcase>
  <testcase name="InquiryDate correctly unblocks the date for a host rejection" time="2.194260591">
  </testcase>
  <testcase name="InquiryDate correctly unblocks the date for a host reply" time="1.161755348">
  </testcase>
  <testcase name="InquiryDate correctly unblocks the date for a host rejection on a reply market" time="1.151352375">
  </testcase>
  <testcase name="InquiryDate correctly assigns market groups for whitelisted markets" time="1.121488046">
  </testcase>
  <testcase name="InquiryDate hashes into buckets and associates them with experiment types" time="1.136855753">
  </testcase>
  <testcase name="InquiryDate assigns missing or Other markets to the -1 bucket" time="1.157363711">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="InquiryPresenter#acts_as_json_hashable" tests="2" time="3.036152288" failures="0" errors="0" skipped="0">
  <testcase name="InquiryPresenter#acts_as_json_hashable should at least not error" time="1.93826073">
  </testcase>
  <testcase name="InquiryPresenter#acts_as_json_hashable should at least not error for a message" time="1.097441156">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="InquiryPresenter#booked_elsewhere?" tests="2" time="3.202301341" failures="0" errors="0" skipped="0">
  <testcase name="InquiryPresenter#booked_elsewhere? returns 'false' when the thread is default phase" time="1.45720006">
  </testcase>
  <testcase name="InquiryPresenter#booked_elsewhere? returns 'true' when the thread is booked elsewhere" time="1.744683511">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="InquiryPresenter#checkin_date" tests="7" time="15.105742001" failures="0" errors="0" skipped="0">
  <testcase name="InquiryPresenter#checkin_date comes from the reservation if the reservation is in the future" time="1.999873693">
  </testcase>
  <testcase name="InquiryPresenter#checkin_date comes from the reservation if the reservation is within the relevance period" time="1.971063158">
  </testcase>
  <testcase name="InquiryPresenter#checkin_date comes from the special offer if the special offer is in the future" time="2.938488138">
  </testcase>
  <testcase name="InquiryPresenter#checkin_date comes from the thread if inquiry dates are in the future" time="1.612776702">
  </testcase>
  <testcase name="InquiryPresenter#checkin_date returns nil if reservation is in the past" time="2.026921509">
  </testcase>
  <testcase name="InquiryPresenter#checkin_date returns nil if special offer is in the past" time="2.308562758">
  </testcase>
  <testcase name="InquiryPresenter#checkin_date returns nil if inquiry dates are in the past" time="2.247161065">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="InquiryPresenter#guest_paid" tests="7" time="17.894731725" failures="0" errors="0" skipped="0">
  <testcase name="InquiryPresenter#guest_paid correctly calculates the amount a guest pays - reservation" time="2.530177433">
  </testcase>
  <testcase name="InquiryPresenter#guest_paid correctly calculates the amount a guest pays non-usd - reservation" time="2.052300054">
  </testcase>
  <testcase name="InquiryPresenter#guest_paid correctly calculates the amount a guest pays - special offer" time="3.195426911">
  </testcase>
  <testcase name="InquiryPresenter#guest_paid correctly calculates the amount a guest pays non-usd - special offer" time="3.048755105">
  </testcase>
  <testcase name="InquiryPresenter#guest_paid correctly calculates the amount a guest pays - inquiry" time="2.097130108">
  </testcase>
  <testcase name="InquiryPresenter#guest_paid correctly calculates the amount a guest pays - inquiry &gt; 28 nights" time="2.349493716">
  </testcase>
  <testcase name="InquiryPresenter#guest_paid correctly calculates the amout a guest pays non-usd - inquiry" time="2.620541385">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="InquiryPresenter#host_earns" tests="3" time="7.769412368" failures="0" errors="0" skipped="0">
  <testcase name="InquiryPresenter#host_earns correctly calculates a USD payout - reservation" time="2.557897521">
  </testcase>
  <testcase name="InquiryPresenter#host_earns correctly calculates a USD payout - special offer" time="2.802394556">
  </testcase>
  <testcase name="InquiryPresenter#host_earns correctly calculates a USD payout - inquiry" time="2.4085647">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="InquiryPresenter#listing" tests="3" time="5.945762217" failures="0" errors="0" skipped="0">
  <testcase name="InquiryPresenter#listing comes from the reservation when the reservation is relevant" time="2.043331645">
  </testcase>
  <testcase name="InquiryPresenter#listing comes from the inquiry when the inquiry is relevant" time="1.589361531">
  </testcase>
  <testcase name="InquiryPresenter#listing comes from the special offer when the special offer is relevant" time="2.312556006">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="InquiryPresenter#number_of_guests" tests="1" time="2.587775709" failures="0" errors="0" skipped="0">
  <testcase name="InquiryPresenter#number_of_guests returns 'nil' when reservation is in the past" time="2.587464329">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="InquiryPresenter#phase" tests="1" time="2.612730285" failures="0" errors="0" skipped="0">
  <testcase name="InquiryPresenter#phase returns default phase 'message' when reservation is in the past" time="2.612391788">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="InquiryPresenter#state" tests="3" time="6.420844701" failures="0" errors="0" skipped="0">
  <testcase name="InquiryPresenter#state returns nil for an inquiry" time="1.972917116">
  </testcase>
  <testcase name="InquiryPresenter#state returns a reservation's status when reservation is relevant" time="1.961286732">
  </testcase>
  <testcase name="InquiryPresenter#state returns 'accepted' when reservation is relevant and accepted" time="2.486135807">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="InquiryPresenter#terminal?" tests="2" time="2.77369945" failures="0" errors="0" skipped="0">
  <testcase name="InquiryPresenter#terminal? returns 'false' when the thread is default phase" time="1.139097008">
  </testcase>
  <testcase name="InquiryPresenter#terminal? returns 'true' when the thread is booked elsewhere" time="1.634184282">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="InquiryPresenter" tests="0" time="0.000206543" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="international_happiness_tracking_survey rake international_happiness_tracking_survey" tests="1" time="9.84364125" failures="0" errors="0" skipped="0">
  <testcase name="international_happiness_tracking_survey rake international_happiness_tracking_survey should work" time="9.843288352">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/lib/tasks/international_happiness_tracking_survey.rake:154: warning: already initialized constant LATEST_MEMORY_TYPE
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="international_happiness_tracking_survey" tests="0" time="0.000192697" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ItineraryReceiptPresenter#payments" tests="1" time="1.559922195" failures="0" errors="0" skipped="0">
  <testcase name="ItineraryReceiptPresenter#payments returns a hash of the payment" time="1.559470313">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ItineraryReceiptPresenter#receipt_id reservation has no payments" tests="1" time="1.832608983" failures="0" errors="0" skipped="0">
  <testcase name="ItineraryReceiptPresenter#receipt_id reservation has no payments returns just the reservation id" time="1.832286064">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ItineraryReceiptPresenter#receipt_id reservation payments" tests="3" time="3.720869751" failures="0" errors="0" skipped="0">
  <testcase name="ItineraryReceiptPresenter#receipt_id reservation payments generates an ID based on the reservation id and the single associated payment" time="1.255084116">
  </testcase>
  <testcase name="ItineraryReceiptPresenter#receipt_id reservation payments generates an ID based on reservation id and the associated payments" time="1.24272825">
  </testcase>
  <testcase name="ItineraryReceiptPresenter#receipt_id reservation payments ignores uncharged payments in id generation" time="1.222541425">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ItineraryReceiptPresenter#receipt_id" tests="0" time="0.000159631" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ItineraryReceiptPresenter#receipt_locale German payment_instrument" tests="1" time="1.247625715" failures="0" errors="0" skipped="0">
  <testcase name="ItineraryReceiptPresenter#receipt_locale German payment_instrument returns German locale" time="1.247305929">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ItineraryReceiptPresenter#receipt_locale German payment" tests="1" time="1.251440938" failures="0" errors="0" skipped="0">
  <testcase name="ItineraryReceiptPresenter#receipt_locale German payment returns German locale" time="1.251111207">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ItineraryReceiptPresenter#receipt_locale nothing in Germany" tests="1" time="1.612643653" failures="0" errors="0" skipped="0">
  <testcase name="ItineraryReceiptPresenter#receipt_locale nothing in Germany returns other locale" time="1.612312129">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ItineraryReceiptPresenter#receipt_locale" tests="0" time="0.000164087" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ItineraryReceiptPresenter#show_partial_info? accepted reservation" tests="1" time="1.841418911" failures="0" errors="0" skipped="0">
  <testcase name="ItineraryReceiptPresenter#show_partial_info? accepted reservation shows a full receipt to the guest" time="1.841071958">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ItineraryReceiptPresenter#show_partial_info? canceled reservation" tests="1" time="1.252762407" failures="0" errors="0" skipped="0">
  <testcase name="ItineraryReceiptPresenter#show_partial_info? canceled reservation shows a full receipt to the guest" time="1.252436119">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ItineraryReceiptPresenter#show_partial_info?" tests="0" time="0.000191632" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ItineraryReceiptPresenter" tests="0" time="0.000222388" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="IvrController#lookup" tests="1" time="0.884765371" failures="0" errors="0" skipped="0">
  <testcase name="IvrController#lookup should deny requests which lack the secret header" time="0.884354583">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="IvrController" tests="0" time="0.000229445" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="JumioApiClientV2" tests="2" time="0.769042847" failures="0" errors="0" skipped="0">
  <testcase name="JumioApiClientV2 should not allow calls from random ips" time="0.376865076">
  </testcase>
  <testcase name="JumioApiClientV2 should allow calls from Jumio" time="0.390977118">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="JumioResult.humanized_status" tests="6" time="2.92998441" failures="0" errors="0" skipped="0">
  <testcase name="JumioResult.humanized_status returns the right label for a successful scan" time="0.998376474">
  </testcase>
  <testcase name="JumioResult.humanized_status returns the right label for a fraud denied id" time="0.380155218">
  </testcase>
  <testcase name="JumioResult.humanized_status returns the right label for a generically unsupported id" time="0.394874297">
  </testcase>
  <testcase name="JumioResult.humanized_status returns the right label for an unreadable id" time="0.380596011">
  </testcase>
  <testcase name="JumioResult.humanized_status returns the right label for a unsupported id type" time="0.398689442">
  </testcase>
  <testcase name="JumioResult.humanized_status returns the right label for a unsupported country" time="0.376140701">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="JumioResult" tests="30" time="14.029436828" failures="0" errors="0" skipped="0">
  <testcase name="JumioResult correctly maps a alpha-3 country code to alpha-2" time="0.381565141">
  </testcase>
  <testcase name="JumioResult handles a successful scan from the api" time="0.495687263">
  </testcase>
  <testcase name="JumioResult handles a successful initial jumio redirect" time="0.387161794">
  </testcase>
  <testcase name="JumioResult handles a failed initial jumio redirect" time="0.377824986">
  </testcase>
  <testcase name="JumioResult correctly maps the hash to attributes for an approved callback" time="0.387974298">
  </testcase>
  <testcase name="JumioResult correctly maps the hash to attributes for a fraud denied result" time="0.406195136">
  </testcase>
  <testcase name="JumioResult correctly maps the hash to attributes for an unsupported country result" time="0.383346511">
  </testcase>
  <testcase name="JumioResult correctly maps the hash to attributes for an unsupported id result" time="0.399761676">
  </testcase>
  <testcase name="JumioResult correctly maps the id type of an unsupported id" time="0.389840775">
  </testcase>
  <testcase name="JumioResult correctly maps the hash to attributes for a failed to scan result" time="0.786877842">
  </testcase>
  <testcase name="JumioResult creates an id hash if the scan if the properties exist" time="0.405044144">
  </testcase>
  <testcase name="JumioResult doesn't set an id hash if the scan if all the attributes don't exist" time="0.415242608">
  </testcase>
  <testcase name="JumioResult #awaiting_callback? returns true for a record awaiting callback" time="0.404180626">
  </testcase>
  <testcase name="JumioResult determines whether a user is awaiting callback" time="1.000561024">
  </testcase>
  <testcase name="JumioResult determines when a user isn't awaiting callback" time="0.392551372">
  </testcase>
  <testcase name="JumioResult determines whether a user has a verified scan" time="0.411086504">
  </testcase>
  <testcase name="JumioResult determines whether a user has a denied for fraud scan" time="0.389478438">
  </testcase>
  <testcase name="JumioResult determines whether a user was denied and never approved" time="0.768831711">
  </testcase>
  <testcase name="JumioResult determines whether a user was denied and and later approved" time="0.781713068">
  </testcase>
  <testcase name="JumioResult #approved_by_callback? returns false if it was denied" time="0.386786286">
  </testcase>
  <testcase name="JumioResult #approved_by_callback? returns false if there is no callback" time="0.374349236">
  </testcase>
  <testcase name="JumioResult #denied_by_callback? is correct" time="0.385730364">
  </testcase>
  <testcase name="JumioResult #has_id_hash? for ids with hashes" time="0.372971523">
  </testcase>
  <testcase name="JumioResult #has_id_hash? for ids without hashes" time="0.386516159">
  </testcase>
  <testcase name="JumioResult recognizes Ids without a back image" time="0.389733561">
  </testcase>
  <testcase name="JumioResult recognizes Ids with a back image" time="0.369977063">
  </testcase>
  <testcase name="JumioResult correctly recognizes when the type is passport" time="0.746020497">
  </testcase>
  <testcase name="JumioResult correctly recognizes when the type is id card" time="0.422116563">
  </testcase>
  <testcase name="JumioResult correctly recognizes when the type is a driver license" time="0.412666639">
  </testcase>
  <testcase name="JumioResult is able to detect duplicates" time="0.413855947">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KbaClient#handle_response" tests="2" time="5.543593826" failures="0" errors="0" skipped="0">
  <testcase name="KbaClient#handle_response tracks the result" time="4.796630981">
  </testcase>
  <testcase name="KbaClient#handle_response gets a checkpoint message" time="0.746500177">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KbaClient responses with a GDC update" tests="2" time="1.539414643" failures="0" errors="0" skipped="0">
  <testcase name="KbaClient responses with a GDC update generates a GDC response" time="1.005560694">
  </testcase>
  <testcase name="KbaClient responses with a GDC update returns the product when called" time="0.533347174">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KbaClient responses with a KBA update" tests="2" time="2.382018852" failures="0" errors="0" skipped="0">
  <testcase name="KbaClient responses with a KBA update generates an RSA response with fallback" time="1.672781332">
  </testcase>
  <testcase name="KbaClient responses with a KBA update generates an Idology response with fallback" time="0.708852555">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KbaClient responses with an Experian update" tests="2" time="3.782610528" failures="0" errors="0" skipped="0">
  <testcase name="KbaClient responses with an Experian update generates an experian response" time="0.501449087">
  </testcase>
  <testcase name="KbaClient responses with an Experian update returns the correct product when called" time="3.280733191">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KbaClient responses" tests="0" time="0.000189747" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KbaClient#save_verification_results with a negative response" tests="1" time="0.738323798" failures="0" errors="0" skipped="0">
  <testcase name="KbaClient#save_verification_results with a negative response does not verify the user" time="0.73797928">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KbaClient#save_verification_results with a positive response" tests="1" time="3.924232525" failures="0" errors="0" skipped="0">
  <testcase name="KbaClient#save_verification_results with a positive response verifies the user" time="3.92393474">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KbaClient#save_verification_results with KbaResult" tests="3" time="8.910395829" failures="0" errors="0" skipped="0">
  <testcase name="KbaClient#save_verification_results with KbaResult creates a new result" time="4.042612224">
  </testcase>
  <testcase name="KbaClient#save_verification_results with KbaResult skips nil backends" time="0.619387541">
  </testcase>
  <testcase name="KbaClient#save_verification_results with KbaResult verifies the user" time="4.24757591">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KbaClient#save_verification_results" tests="0" time="0.000166415" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KbaClient#statsd_track_result with a failure" tests="1" time="0.437487129" failures="0" errors="0" skipped="0">
  <testcase name="KbaClient#statsd_track_result with a failure increments the STATSD failure flag" time="0.437119588">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KbaClient#statsd_track_result with a successful result" tests="1" time="3.504976769" failures="0" errors="0" skipped="0">
  <testcase name="KbaClient#statsd_track_result with a successful result increments the STATSD success flag" time="3.504586389">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KbaClient#statsd_track_result" tests="0" time="0.000220617" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KBA Client With Fallback" tests="2" time="0.769065237" failures="0" errors="0" skipped="0">
  <testcase name="KBA Client With Fallback should use the primary backend if it's successful" time="0.385384824">
  </testcase>
  <testcase name="KBA Client With Fallback should fallback to the secondary backend if the first fails" time="0.383069061">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KbaClient" tests="1" time="2.54009201" failures="0" errors="0" skipped="0">
  <testcase name="KbaClient increments the STATSD request flag" time="2.53975562">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="KillSwitch" tests="3" time="1.084461629" failures="0" errors="0" skipped="0">
  <testcase name="KillSwitch should enable a Trebuchet test with enable()" time="0.366459326">
  </testcase>
  <testcase name="KillSwitch should disable a Trebuchet test with disable()" time="0.344495848">
  </testcase>
  <testcase name="KillSwitch should return the result of a Trebuchet test with feature_enabled?()" time="0.372355182">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LandingPageSearchPresenter#guest_steps" tests="1" time="0.381282784" failures="0" errors="0" skipped="0">
  <testcase name="LandingPageSearchPresenter#guest_steps comprises booking steps with header and (optional) description" time="0.380968401">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LandingPageSearchPresenter#listings_header" tests="2" time="0.763763507" failures="0" errors="0" skipped="0">
  <testcase name="LandingPageSearchPresenter#listings_header includes the exact # of listings if it's less than 1000" time="0.380733557">
  </testcase>
  <testcase name="LandingPageSearchPresenter#listings_header just says over 1000 if more than 1000" time="0.382658594">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LandingPageSearchPresenter#why_guest_sections" tests="1" time="0.927252968" failures="0" errors="0" skipped="0">
  <testcase name="LandingPageSearchPresenter#why_guest_sections comprises reasons to choose Airbnb with header and description" time="0.926833874">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LandingPageSearchPresenter" tests="0" time="0.000199743" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LeadCounter with a split_test parameter and an active host" tests="1" time="0.387853769" failures="0" errors="0" skipped="0">
  <testcase name="LeadCounter with a split_test parameter and an active host increments STATSD appropriately" time="0.387528628">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LeadCounter with a split_test parameter and an inactive host" tests="1" time="0.422248038" failures="0" errors="0" skipped="0">
  <testcase name="LeadCounter with a split_test parameter and an inactive host increments STATSD appropriately" time="0.421937498">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LeadCounter with a split_test parameter and a visitor" tests="1" time="0.554898924" failures="0" errors="0" skipped="0">
  <testcase name="LeadCounter with a split_test parameter and a visitor increments STATSD appropriately" time="0.554572838">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LeadCounter with no split_test parameter and a visitor" tests="1" time="0.942226363" failures="0" errors="0" skipped="0">
  <testcase name="LeadCounter with no split_test parameter and a visitor increments STATSD appropriately" time="0.941754638">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LeadCounter" tests="0" time="0.000216708" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LeonidasReview when performing queue actions #approve" tests="2" time="2.654813383" failures="0" errors="0" skipped="0">
  <testcase name="LeonidasReview when performing queue actions #approve unfreezes all payouts" time="1.456134185">
  </testcase>
  <testcase name="LeonidasReview when performing queue actions #approve redacts user ghostings when status of review is require_additional_verification" time="1.198189046">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LeonidasReview when performing queue actions #deny when agent is checking checklist to confirm the case" tests="1" time="1.571573095" failures="0" errors="0" skipped="0">
  <testcase name="LeonidasReview when performing queue actions #deny when agent is checking checklist to confirm the case unfreezes all payouts" time="1.571162616">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LeonidasReview when performing queue actions #deny" tests="1" time="1.581250216" failures="0" errors="0" skipped="0">
  <testcase name="LeonidasReview when performing queue actions #deny redacts user ghostings when status of review is require_additional_verification" time="1.580891281">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LeonidasReview when performing queue actions #require_additional_verification" tests="1" time="1.085225402" failures="0" errors="0" skipped="0">
  <testcase name="LeonidasReview when performing queue actions #require_additional_verification ghosts the user under investigation" time="1.07794012">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LeonidasReview when performing queue actions" tests="0" time="0.000172212" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LeonidasReview" tests="0" time="0.000229119" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LexisNexis::ResidentScreening running a report" tests="1" time="0.398522839" failures="0" errors="0" skipped="0">
  <testcase name="LexisNexis::ResidentScreening running a report should get approval for a good input" time="0.398197432">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LexisNexis::ResidentScreening" tests="0" time="0.000203615" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem#admin_update_line_item invalid item" tests="1" time="1.623766487" failures="0" errors="0" skipped="0">
  <testcase name="LineItem#admin_update_line_item invalid item raises an error" time="1.623336637">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem#admin_update_line_item invalid user" tests="1" time="1.730875974" failures="0" errors="0" skipped="0">
  <testcase name="LineItem#admin_update_line_item invalid user raises an error" time="1.730521875">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem#admin_update_line_item line_item.valid? returns false" tests="1" time="1.145415026" failures="0" errors="0" skipped="0">
  <testcase name="LineItem#admin_update_line_item line_item.valid? returns false raises ValidationError" time="1.145058464">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem#admin_update_line_item Ration.attempt! returns false" tests="1" time="1.137915315" failures="0" errors="0" skipped="0">
  <testcase name="LineItem#admin_update_line_item Ration.attempt! returns false raises ValidationError" time="1.137536322">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem#admin_update_line_item" tests="1" time="1.138657019" failures="0" errors="0" skipped="0">
  <testcase name="LineItem#admin_update_line_item updates line_item successfully" time="1.138328771">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem create_payouts" tests="3" time="3.883979078" failures="0" errors="0" skipped="0">
  <testcase name="LineItem create_payouts should handle basic cases" time="1.850825298">
  </testcase>
  <testcase name="LineItem create_payouts should handle edge cases" time="1.275024983">
  </testcase>
  <testcase name="LineItem create_payouts ghosted_users_should_have_admin_freeze" time="0.757574078">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem#display_price_for_transaction_history" tests="4" time="4.258852379" failures="0" errors="0" skipped="0">
  <testcase name="LineItem#display_price_for_transaction_history displays native price" time="1.166370876">
  </testcase>
  <testcase name="LineItem#display_price_for_transaction_history always displays in USD for Western Union" time="1.158644575">
  </testcase>
  <testcase name="LineItem#display_price_for_transaction_history displays positive amounts correctly" time="0.773286701">
  </testcase>
  <testcase name="LineItem#display_price_for_transaction_history displays negative amounts correctly" time="1.159837832">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem pay_payoneer errors" tests="2" time="1.711266217" failures="0" errors="0" skipped="0">
  <testcase name="LineItem pay_payoneer errors it does not send an email for general failures" time="0.849082903">
  </testcase>
  <testcase name="LineItem pay_payoneer errors sends an e-mail for the proper error failures" time="0.861701957">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem pay_payoneer" tests="1" time="1.472323717" failures="0" errors="0" skipped="0">
  <testcase name="LineItem pay_payoneer pays a user correctly" time="1.472000215">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem pay!" tests="2" time="2.576097005" failures="0" errors="0" skipped="0">
  <testcase name="LineItem pay! pays a payoneer user on success" time="1.235256588">
  </testcase>
  <testcase name="LineItem pay! does not pay a payoneer user on failure" time="1.340381983">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem#save_with_loss" tests="3" time="5.675058395" failures="0" errors="0" skipped="0">
  <testcase name="LineItem#save_with_loss saves both the loss and line item" time="1.587288973">
  </testcase>
  <testcase name="LineItem#save_with_loss does not save anything when line item has wrong sub_type" time="2.560799582">
  </testcase>
  <testcase name="LineItem#save_with_loss does not save anything when loss is not valid" time="1.526371259">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem Settlement batch generation ACH" tests="3" time="12.260931892" failures="0" errors="0" skipped="0">
  <testcase name="LineItem Settlement batch generation ACH should collect line_items for a new batch" time="3.556720906">
  </testcase>
  <testcase name="LineItem Settlement batch generation ACH should collect line_items for a previous batch" time="4.02846087">
  </testcase>
  <testcase name="LineItem Settlement batch generation ACH should generate a batch file" time="4.675039194">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem Settlement batch generation Batch Options" tests="2" time="2.13100296" failures="0" errors="0" skipped="0">
  <testcase name="LineItem Settlement batch generation Batch Options should return empty batchoptions" time="0.402207587">
  </testcase>
  <testcase name="LineItem Settlement batch generation Batch Options should return multiple batch options" time="1.728267474">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem Settlement batch generation Checks" tests="1" time="2.220795784" failures="0" errors="0" skipped="0">
  <testcase name="LineItem Settlement batch generation Checks should get the correct check number" time="2.220406393">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem Settlement batch generation determine_next_batch" tests="2" time="2.359490198" failures="0" errors="0" skipped="0">
  <testcase name="LineItem Settlement batch generation determine_next_batch should return 1 if no batches exist" time="0.392710207">
  </testcase>
  <testcase name="LineItem Settlement batch generation determine_next_batch should return the highest batch +1 " time="1.966339337">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem Settlement batch generation Payoneer" tests="2" time="5.126396969" failures="0" errors="0" skipped="0">
  <testcase name="LineItem Settlement batch generation Payoneer should include line items for Payoneer payout infos in an ACH batch" time="2.305408067">
  </testcase>
  <testcase name="LineItem Settlement batch generation Payoneer should set the method for Payoneer line items to the same as ACH" time="2.820487419">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem Settlement batch generation" tests="0" time="0.000197101" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem user_ids should be mixed" tests="2" time="2.103656007" failures="0" errors="0" skipped="0">
  <testcase name="LineItem user_ids should be mixed should validate that line_item.user_id == line_item.payout_info.user_id" time="1.066563707">
  </testcase>
  <testcase name="LineItem user_ids should be mixed should still be able to create a line_item with no payout_info" time="1.036618858">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem#validate_for_defined_loss" tests="4" time="5.067200807" failures="0" errors="0" skipped="0">
  <testcase name="LineItem#validate_for_defined_loss will not allow a line item defined loss to be created without a loss" time="0.769887292">
  </testcase>
  <testcase name="LineItem#validate_for_defined_loss will not allow a line item with another sub_type to be created with a loss" time="1.582916437">
  </testcase>
  <testcase name="LineItem#validate_for_defined_loss will not allow a line item sub_type to be changed to defined loss" time="0.768682172">
  </testcase>
  <testcase name="LineItem#validate_for_defined_loss will not allow a line item sub_type to be changed from defined loss" time="1.944874731">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem Western Union Bounce Back File" tests="5" time="4.746964803" failures="0" errors="0" skipped="0">
  <testcase name="LineItem Western Union Bounce Back File should process files with multiple entries" time="0.42685866">
  </testcase>
  <testcase name="LineItem Western Union Bounce Back File should not process files with invalid batch number" time="0.939206935">
  </testcase>
  <testcase name="LineItem Western Union Bounce Back File should process file with single payout due for reissue" time="1.1735143">
  </testcase>
  <testcase name="LineItem Western Union Bounce Back File should process file with single payout due for reissue skip" time="0.84947992">
  </testcase>
  <testcase name="LineItem Western Union Bounce Back File should process file with single cancelled payout" time="1.357120333">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem when line_item is frozen .remove_admin_freeze_for_reservation2 when reservation start date is before today" tests="2" time="4.322964283" failures="0" errors="0" skipped="0">
  <testcase name="LineItem when line_item is frozen .remove_admin_freeze_for_reservation2 when reservation start date is before today sets ready_for_release_at date to today if ready_for_release_at is before today" time="2.203416796">
  </testcase>
  <testcase name="LineItem when line_item is frozen .remove_admin_freeze_for_reservation2 when reservation start date is before today does not modify ready_for_release_at date if it is currently nil" time="2.119034289">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem when line_item is frozen .remove_admin_freeze_for_reservation2" tests="3" time="7.535976017" failures="0" errors="0" skipped="0">
  <testcase name="LineItem when line_item is frozen .remove_admin_freeze_for_reservation2 removes admin_freeze from single reservation line_item" time="2.136923213">
  </testcase>
  <testcase name="LineItem when line_item is frozen .remove_admin_freeze_for_reservation2 removes admin_freeze from more than one reservation line_item at a time" time="2.149915725">
  </testcase>
  <testcase name="LineItem when line_item is frozen .remove_admin_freeze_for_reservation2 adds note to each reservation2 and line_item exactly once" time="3.248587874">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem when line_item is frozen" tests="0" time="0.000207846" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LineItem" tests="3" time="15.619519122" failures="0" errors="0" skipped="0">
  <testcase name="LineItem should calculate payout release dates with various time zones" time="14.016883377">
  </testcase>
  <testcase name="LineItem should not double count credits upon payouts" time="0.838964214">
  </testcase>
  <testcase name="LineItem should not allow payout info to be changed" time="0.762973585">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LocalizationHelper host guarantee" tests="6" time="3.472278953" failures="0" errors="0" skipped="0">
  <testcase name="LocalizationHelper host guarantee should return nothing for an uncovered country" time="0.388066939">
  </testcase>
  <testcase name="LocalizationHelper host guarantee localized_guarantee_amount_for_country in English" time="0.872511591">
  </testcase>
  <testcase name="LocalizationHelper host guarantee localized_guarantee_amount_for_country in French" time="0.386617096">
  </testcase>
  <testcase name="LocalizationHelper host guarantee localized_guarantee_amount_for_country in Swiss German" time="0.386767379">
  </testcase>
  <testcase name="LocalizationHelper host guarantee localized_guarantee_amount" time="0.394662642">
  </testcase>
  <testcase name="LocalizationHelper host guarantee localized_guaranteed_countries_sentence" time="1.041795858">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LocalizationHelper" tests="0" time="0.001474298" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LocalizedImage" tests="1" time="0.01293594" failures="0" errors="0" skipped="1">
  <testcase name="LocalizedImage add some examples to (or delete) /home/lt3/airbnb/spec/models/common/localized_image_spec.rb (PENDING)" time="0.012361482">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Loss.new" tests="5" time="6.25910742" failures="0" errors="0" skipped="0">
  <testcase name="Loss.new creates a loss given a valid line item and loss definition" time="1.286896013">
  </testcase>
  <testcase name="Loss.new creates a loss given a valid payment2 and loss definition" time="0.770875255">
  </testcase>
  <testcase name="Loss.new does not allow some other model to be used" time="1.221052112">
  </testcase>
  <testcase name="Loss.new does not allow a nonexistent item to be used" time="1.751632246">
  </testcase>
  <testcase name="Loss.new does not allow saving without a user_id" time="1.227875405">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Loss#prevent_destruction" tests="1" time="0.403705798" failures="0" errors="0" skipped="0">
  <testcase name="Loss#prevent_destruction cannot be deleted" time="0.403258898">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Loss#validate_loss_definition" tests="2" time="2.215287469" failures="0" errors="0" skipped="0">
  <testcase name="Loss#validate_loss_definition allows a loss definition to get associated with the correct item" time="1.115446197">
  </testcase>
  <testcase name="Loss#validate_loss_definition does not allow a loss definition to get associated with the wrong item" time="1.099362307">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Loss" tests="0" time="0.000247659" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MapSearchPresenter currency_symbol" tests="1" time="0.736028673" failures="0" errors="0" skipped="0">
  <testcase name="MapSearchPresenter currency_symbol can be customized" time="0.735735079">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MapSearchPresenter hosting languages" tests="3" time="2.910705029" failures="0" errors="0" skipped="0">
  <testcase name="MapSearchPresenter hosting languages English, French, and Spanish are the top three for English request" time="0.786789149">
  </testcase>
  <testcase name="MapSearchPresenter hosting languages Japanese, English, French are the top three for Japanese request" time="1.354987461">
  </testcase>
  <testcase name="MapSearchPresenter hosting languages French, English, Spanish are the top three for French request" time="0.761079513">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MapSearchPresenter t" tests="1" time="0.418475122" failures="0" errors="0" skipped="0">
  <testcase name="MapSearchPresenter t returns the translated value" time="0.418153162">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MapSearchPresenter" tests="0" time="0.000222824" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MavenTech::Signature verify_sig" tests="2" time="0.827475991" failures="0" errors="0" skipped="0">
  <testcase name="MavenTech::Signature verify_sig verifies the signatures that it writes" time="0.384225489">
  </testcase>
  <testcase name="MavenTech::Signature verify_sig verifies json encoded signatures" time="0.442803316">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MavenTech::Signature" tests="0" time="0.000205155" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Meetup#attendee_emails" tests="1" time="1.052194519" failures="0" errors="0" skipped="0">
  <testcase name="Meetup#attendee_emails should return email addresses of both registered users and guests" time="1.051634949">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Meetup ended?" tests="2" time="1.441043457" failures="0" errors="0" skipped="0">
  <testcase name="Meetup ended? should be true if end time is in the past" time="0.711277145">
  </testcase>
  <testcase name="Meetup ended? should be false if end time is in the future" time="0.729315759">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Meetup#full?" tests="4" time="4.142432221" failures="0" errors="0" skipped="0">
  <testcase name="Meetup#full? should be false when there are less active registrations than capacity" time="0.738874643">
  </testcase>
  <testcase name="Meetup#full? should be true when there are as many active registrations as capacity" time="1.079407397">
  </testcase>
  <testcase name="Meetup#full? should be true when there are more active registrations than capacity" time="1.322528872">
  </testcase>
  <testcase name="Meetup#full? should not count deleted registrations" time="1.000945889">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Meetup#has_waitlist?" tests="2" time="2.900945321" failures="0" errors="0" skipped="0">
  <testcase name="Meetup#has_waitlist? should be false when there are no waitlisted registrations" time="1.556967024">
  </testcase>
  <testcase name="Meetup#has_waitlist? should be true when there are waitlisted registrations" time="1.34351704">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MeetupRegistration#delete!" tests="2" time="2.371804587" failures="0" errors="0" skipped="0">
  <testcase name="MeetupRegistration#delete! should set deleted_at to mark as deleted" time="1.171670309">
  </testcase>
  <testcase name="MeetupRegistration#delete! should delete guests invited by the same user for this event" time="1.199604704">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MeetupRegistration for guests" tests="1" time="1.755588572" failures="0" errors="0" skipped="0">
  <testcase name="MeetupRegistration for guests should associate guest with user account through email on creation if possible" time="1.755208713">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MeetupRegistration setting on_waitlist before create" tests="3" time="4.685145354" failures="0" errors="0" skipped="0">
  <testcase name="MeetupRegistration setting on_waitlist before create should set it to true if meetup is full" time="1.60433705">
  </testcase>
  <testcase name="MeetupRegistration setting on_waitlist before create should set it to false if meetup is not full" time="1.167723833">
  </testcase>
  <testcase name="MeetupRegistration setting on_waitlist before create should always set it to false if attended_unregistered is true" time="1.912523284">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MeetupRegistration updating associated meetup" tests="2" time="2.424698575" failures="0" errors="0" skipped="0">
  <testcase name="MeetupRegistration updating associated meetup should increment meetup's active_meetup_registrations_count after creation" time="1.266437134">
  </testcase>
  <testcase name="MeetupRegistration updating associated meetup should not count deleted registrations in active_meetup_registrations_count" time="1.157809408">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MeetupRegistration" tests="0" time="0.000264383" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Meetup started?" tests="2" time="1.422438634" failures="0" errors="0" skipped="0">
  <testcase name="Meetup started? should be true if start time is in the past" time="0.711578884">
  </testcase>
  <testcase name="Meetup started? should be false if start time is in the future" time="0.71040507">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Meetup" tests="3" time="3.025636832" failures="0" errors="0" skipped="0">
  <testcase name="Meetup is not valid when capacity is not a number" time="1.316462468">
  </testcase>
  <testcase name="Meetup is not valid when capacity is not a positive number" time="0.693887772">
  </testcase>
  <testcase name="Meetup is not valid if end time is before or equal to start time" time="1.014721989">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MemcacheSession" tests="1" time="0.011880685" failures="0" errors="0" skipped="1">
  <testcase name="MemcacheSession test env uses cookie store - reenable when memcache is mocked at a lower level (PENDING)" time="0.010485204">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Memory" tests="5" time="4.395233241" failures="0" errors="0" skipped="0">
  <testcase name="Memory should create a memory" time="0.796563683">
  </testcase>
  <testcase name="Memory should create a memory with user or id" time="0.77088711">
  </testcase>
  <testcase name="Memory should create a memory once" time="0.758520701">
  </testcase>
  <testcase name="Memory should remove a memory if it exists" time="1.31666801">
  </testcase>
  <testcase name="Memory should have been done before" time="0.751706664">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MessageReview when creating a MessageReview" tests="3" time="5.710456895" failures="0" errors="0" skipped="0">
  <testcase name="MessageReview when creating a MessageReview should trigger add_user_attribute" time="1.940658461">
  </testcase>
  <testcase name="MessageReview when creating a MessageReview should add a UserAttribute if the message is long enough" time="2.205074748">
  </testcase>
  <testcase name="MessageReview when creating a MessageReview should not add a UserAttribute if the message too short" time="1.563952012">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MessageReview" tests="0" time="0.000240893" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MessagingController qt2 (in new constraint test)" tests="8" time="23.404040658" failures="0" errors="0" skipped="0">
  <testcase name="MessagingController qt2 (in new constraint test) should render #qt2 view for host" time="4.000081397">
  </testcase>
  <testcase name="MessagingController qt2 (in new constraint test) should render #qt2 view for guest" time="2.796700476">
  </testcase>
  <testcase name="MessagingController qt2 (in new constraint test) should render fine with a preapproved template" time="2.547276037">
  </testcase>
  <testcase name="MessagingController qt2 (in new constraint test) should render fine with a special offer template" time="2.896116584">
  </testcase>
  <testcase name="MessagingController qt2 (in new constraint test) should render fine with an unavailable full template" time="2.682078982">
  </testcase>
  <testcase name="MessagingController qt2 (in new constraint test) should render fine with an unavailable partial template" time="3.001108879">
  </testcase>
  <testcase name="MessagingController qt2 (in new constraint test) should render fine with an unavailable other template" time="2.586244644">
  </testcase>
  <testcase name="MessagingController qt2 (in new constraint test) should render fine with a more information template" time="2.893117232">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MessagingController submitting a message reply with a preapproval" tests="1" time="2.627450218" failures="0" errors="0" skipped="0">
  <testcase name="MessagingController submitting a message reply with a preapproval should successfully create a preapproval" time="2.627035205">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MessagingController submitting a message reply with a response of 'partially unavailable' and a max nights param less than the min nights param" tests="1" time="2.723138328" failures="0" errors="0" skipped="0">
  <testcase name="MessagingController submitting a message reply with a response of 'partially unavailable' and a max nights param less than the min nights param should redirect to the thread page with a flash notice" time="2.722640353">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MessagingController submitting a message reply with a response of 'partially unavailable'" tests="0" time="0.000227346" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MessagingController submitting a message reply with a special offer when the special offer could not be saved" tests="2" time="5.140901206" failures="0" errors="0" skipped="0">
  <testcase name="MessagingController submitting a message reply with a special offer when the special offer could not be saved should not save the post" time="2.421357796">
  </testcase>
  <testcase name="MessagingController submitting a message reply with a special offer when the special offer could not be saved should redirect" time="2.719098843">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MessagingController submitting a message reply with a special offer with bad date params" tests="1" time="2.664639295" failures="0" errors="0" skipped="0">
  <testcase name="MessagingController submitting a message reply with a special offer with bad date params should gracefully handle special offer's bad date params" time="2.664254726">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MessagingController submitting a message reply with a special offer with good date params" tests="2" time="6.123984385" failures="0" errors="0" skipped="0">
  <testcase name="MessagingController submitting a message reply with a special offer with good date params should successfully create and link a special offer" time="3.426940527">
  </testcase>
  <testcase name="MessagingController submitting a message reply with a special offer with good date params should create one and only one special offer" time="2.696481911">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MessagingController submitting a message reply with a special offer" tests="0" time="0.00016864" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MessagingController submitting a message reply" tests="0" time="0.000191001" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MessagingController" tests="0" time="0.000297752" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="metadata" tests="2" time="1.284306739" failures="0" errors="0" skipped="0">
  <testcase name="metadata should return metadata if provided" time="0.881815504">
  </testcase>
  <testcase name="metadata should not return metadata if test fails" time="0.401614559">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Metric add" tests="1" time="0.523092257" failures="0" errors="0" skipped="0">
  <testcase name="Metric add should update a metric's value if that metric already exists" time="0.52268673">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Metric#metric_exists?" tests="1" time="0.401619706" failures="0" errors="0" skipped="0">
  <testcase name="Metric#metric_exists? should return true if a metric of the specified type and time exists" time="0.401284311">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Metric" tests="0" time="0.000244039" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MobileRedirection match_path" tests="9" time="3.41471906" failures="0" errors="0" skipped="0">
  <testcase name="MobileRedirection match_path should redirect basic urls" time="0.376360415">
  </testcase>
  <testcase name="MobileRedirection match_path should redirect wildcard urls" time="0.395747325">
  </testcase>
  <testcase name="MobileRedirection match_path should allow query strings in urls, when wildcard url" time="0.394097877">
  </testcase>
  <testcase name="MobileRedirection match_path should handle FAQ urls" time="0.389120502">
  </testcase>
  <testcase name="MobileRedirection match_path should allow query strings in urls, when static url" time="0.361202331">
  </testcase>
  <testcase name="MobileRedirection match_path should redirect root" time="0.359828684">
  </testcase>
  <testcase name="MobileRedirection match_path should not redirect a path it shouldn't" time="0.387019525">
  </testcase>
  <testcase name="MobileRedirection match_path should not redirect '/rooms/new'" time="0.376560534">
  </testcase>
  <testcase name="MobileRedirection match_path should not redirect '/login'" time="0.373011181">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MobileRedirection" tests="0" time="0.000271777" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NeighborhoodFinder nearest_neighborhood" tests="1" time="0.366919466" failures="0" errors="0" skipped="0">
  <testcase name="NeighborhoodFinder nearest_neighborhood should return the neighborhood name" time="0.366562868">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NeighborhoodFinder" tests="0" time="0.000210301" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Nickname" tests="1" time="0.000442334" failures="0" errors="0" skipped="1">
  <testcase name="Nickname add some examples to (or delete) /home/lt3/airbnb/spec/models/nickname_spec.rb (PENDING)" time="0.000134517">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NotificationDevice async_update_unread_messages" tests="2" time="1.619003332" failures="0" errors="0" skipped="0">
  <testcase name="NotificationDevice async_update_unread_messages should enqueue an UnreadMessagesJob with id if iPhone" time="0.840889859">
  </testcase>
  <testcase name="NotificationDevice async_update_unread_messages should not enqueue an UnreadMessagesJob with id if Android" time="0.777575204">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NotificationDevice set_notification_device_for_user" tests="4" time="3.096834634" failures="0" errors="0" skipped="0">
  <testcase name="NotificationDevice set_notification_device_for_user should find an existing notification device" time="0.782833385">
  </testcase>
  <testcase name="NotificationDevice set_notification_device_for_user should create a notification device if it doesn't exist" time="0.76193151">
  </testcase>
  <testcase name="NotificationDevice set_notification_device_for_user should queue a PushNotificationRegistrationJob if register_device set to true" time="0.75742946">
  </testcase>
  <testcase name="NotificationDevice set_notification_device_for_user should not queue a PushNotificationRegistrationJob if register_device set to false" time="0.793946554">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NotificationDevice update_unread_messages" tests="2" time="1.893560113" failures="0" errors="0" skipped="0">
  <testcase name="NotificationDevice update_unread_messages should raise an exception if device type is not iPhone" time="1.103856601">
  </testcase>
  <testcase name="NotificationDevice update_unread_messages should send UrbanAirship a notification with correct badge count" time="0.789036336">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NotificationDevice" tests="0" time="0.000236338" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Notifier i18n" tests="2" time="1.807635867" failures="0" errors="0" skipped="0">
  <testcase name="Notifier i18n should receive, store, and pass the set locale to the i18n backend" time="1.250646851">
  </testcase>
  <testcase name="Notifier i18n should perform translations using the current i18n as default" time="0.556464828">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Notifier Reservation cancellation emails long-term reservation cancellation by guest when there are no additional payments owed" tests="1" time="1.101478159" failures="0" errors="0" skipped="0">
  <testcase name="Notifier Reservation cancellation emails long-term reservation cancellation by guest when there are no additional payments owed informs the guest that there are no additional charges for cancelling" time="1.10108585">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Notifier Reservation cancellation emails long-term reservation cancellation by guest when there is a future charge owed" tests="1" time="0.473360667" failures="0" errors="0" skipped="0">
  <testcase name="Notifier Reservation cancellation emails long-term reservation cancellation by guest when there is a future charge owed informs the guest that there are additional charges for cancelling" time="0.472733682">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Notifier Reservation cancellation emails long-term reservation cancellation by guest" tests="0" time="0.000191066" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Notifier Reservation cancellation emails" tests="0" time="0.000200473" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Notifier" tests="0" time="0.000342079" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NpsStudy#nps_study_response_for_user_and_response_type" tests="6" time="4.998618111" failures="0" errors="0" skipped="0">
  <testcase name="NpsStudy#nps_study_response_for_user_and_response_type does not create a response for an admin (admin feedback is biased)" time="0.750620848">
  </testcase>
  <testcase name="NpsStudy#nps_study_response_for_user_and_response_type creates a response for a non-English-speaking user" time="0.785335888">
  </testcase>
  <testcase name="NpsStudy#nps_study_response_for_user_and_response_type creates a response for an English-speaking user" time="0.751482103">
  </testcase>
  <testcase name="NpsStudy#nps_study_response_for_user_and_response_type prevent update to NPS by email" time="0.790680676">
  </testcase>
  <testcase name="NpsStudy#nps_study_response_for_user_and_response_type allow update to NPS by non-email if not responded" time="0.774719841">
  </testcase>
  <testcase name="NpsStudy#nps_study_response_for_user_and_response_type return nil if the user has already responded" time="1.14431434">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NpsStudyResponse detractor?" tests="2" time="1.924394538" failures="0" errors="0" skipped="0">
  <testcase name="NpsStudyResponse detractor? returns true for a score of 7 or more" time="0.79876457">
  </testcase>
  <testcase name="NpsStudyResponse detractor? returns true for a score of 6 or less" time="1.125155044">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NpsStudyResponse promoter?" tests="2" time="2.172639753" failures="0" errors="0" skipped="0">
  <testcase name="NpsStudyResponse promoter? returns false for a score of 8 or less" time="1.384610851">
  </testcase>
  <testcase name="NpsStudyResponse promoter? returns true for a score of 9 or more" time="0.78741168">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NpsStudyResponsesController#update" tests="2" time="2.137611242" failures="0" errors="0" skipped="0">
  <testcase name="NpsStudyResponsesController#update should update the score if submitted with score" time="1.317794776">
  </testcase>
  <testcase name="NpsStudyResponsesController#update should mark response as dismissed if submitted without score" time="0.819239822">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NpsStudyResponsesController" tests="0" time="0.000227435" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NpsStudyResponse" tests="0" time="0.000279874" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NpsStudy#score" tests="2" time="5.469257645" failures="0" errors="0" skipped="0">
  <testcase name="NpsStudy#score calculates a 0.0 NPS with equal detractors and promoters" time="1.229110932">
  </testcase>
  <testcase name="NpsStudy#score calculates NPS according to spec" time="4.239714871">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NpsStudy" tests="0" time="0.000249533" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OauthController API oauth authorizations" tests="5" time="5.12004085" failures="0" errors="0" skipped="0">
  <testcase name="OauthController API oauth authorizations should return an access_token for a valid password-based request" time="1.186648468">
  </testcase>
  <testcase name="OauthController API oauth authorizations should handle an invalid password or email for a password-based request" time="1.299497632">
  </testcase>
  <testcase name="OauthController API oauth authorizations should forward a server-side code-based authorization request to the login form" time="0.841794933">
  </testcase>
  <testcase name="OauthController API oauth authorizations should forward a client-side token-based authorization request to the login form" time="0.918405197">
  </testcase>
  <testcase name="OauthController API oauth authorizations should not allow an invalid redirect_uri for token-based requests" time="0.872745958">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OauthController" tests="0" time="0.000305682" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action type 'booking' when Facebook returns an error" tests="2" time="2.530782135" failures="0" errors="0" skipped="0">
  <testcase name="OpenGraphActionsController#create with action type 'booking' when Facebook returns an error should return a successful response" time="1.220421938">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action type 'booking' when Facebook returns an error should not log an event" time="1.309872182">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action type 'booking' when posting to Facebook is successful" tests="3" time="4.381679218" failures="0" errors="0" skipped="0">
  <testcase name="OpenGraphActionsController#create with action type 'booking' when posting to Facebook is successful should return a successful response" time="1.306180565">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action type 'booking' when posting to Facebook is successful should create an OpenGraphAction event with the correct parameters" time="1.319025775">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action type 'booking' when posting to Facebook is successful should log an OpenGraphAction event" time="1.75585815">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action type 'booking'" tests="0" time="0.000206309" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action type 'list' when Facebook returns an error" tests="2" time="2.269499323" failures="0" errors="0" skipped="0">
  <testcase name="OpenGraphActionsController#create with action type 'list' when Facebook returns an error should return a successful response" time="1.381483984">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action type 'list' when Facebook returns an error should not log an event" time="0.887518661">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action type 'list' when posting to Facebook is successful" tests="3" time="3.188386234" failures="0" errors="0" skipped="0">
  <testcase name="OpenGraphActionsController#create with action type 'list' when posting to Facebook is successful should return a successful response" time="1.241361845">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action type 'list' when posting to Facebook is successful should create an OpenGraphAction event with the correct parameters" time="0.973803618">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action type 'list' when posting to Facebook is successful should log an OpenGraphAction event" time="0.972613428">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action type 'list'" tests="0" time="0.000202691" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action type 'pro_photos' when Facebook returns an error" tests="2" time="1.935309501" failures="0" errors="0" skipped="0">
  <testcase name="OpenGraphActionsController#create with action type 'pro_photos' when Facebook returns an error should return a successful response" time="0.966850428">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action type 'pro_photos' when Facebook returns an error should not log an event" time="0.967629334">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action type 'pro_photos' when posting to Facebook is successful" tests="3" time="3.065304195" failures="0" errors="0" skipped="0">
  <testcase name="OpenGraphActionsController#create with action type 'pro_photos' when posting to Facebook is successful should return a successful response" time="0.921992514">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action type 'pro_photos' when posting to Facebook is successful should create an OpenGraphAction event with the correct parameters" time="0.898797209">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action type 'pro_photos' when posting to Facebook is successful should log an OpenGraphAction event" time="1.243959444">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action type 'pro_photos'" tests="0" time="0.000212751" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action type 'review' when Facebook returns an error" tests="2" time="2.972123903" failures="0" errors="0" skipped="0">
  <testcase name="OpenGraphActionsController#create with action type 'review' when Facebook returns an error should return a successful response" time="1.316024364">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action type 'review' when Facebook returns an error should not log an event" time="1.655609688">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action type 'review' when posting to Facebook is successful" tests="3" time="5.095897984" failures="0" errors="0" skipped="0">
  <testcase name="OpenGraphActionsController#create with action type 'review' when posting to Facebook is successful should return a successful response" time="1.750227479">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action type 'review' when posting to Facebook is successful should create an OpenGraphAction event with the correct parameters" time="1.455843448">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action type 'review' when posting to Facebook is successful should log an OpenGraphAction event" time="1.889283617">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action type 'review'" tests="0" time="0.000203734" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action_type 'wishlist' when Facebook returns an error" tests="3" time="2.583862674" failures="0" errors="0" skipped="0">
  <testcase name="OpenGraphActionsController#create with action_type 'wishlist' when Facebook returns an error should return a successful response" time="0.870247044">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action_type 'wishlist' when Facebook returns an error should not log an event" time="0.855319495">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action_type 'wishlist' when Facebook returns an error should report an error to Airbrake" time="0.85771331">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action_type 'wishlist' when posting to Facebook is successful" tests="3" time="3.623524466" failures="0" errors="0" skipped="0">
  <testcase name="OpenGraphActionsController#create with action_type 'wishlist' when posting to Facebook is successful should return a successful response" time="1.329217052">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action_type 'wishlist' when posting to Facebook is successful should create an OpenGraphAction event with the correct parameters" time="0.952271857">
  </testcase>
  <testcase name="OpenGraphActionsController#create with action_type 'wishlist' when posting to Facebook is successful should log an OpenGraphAction event" time="1.341417719">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create with action_type 'wishlist'" tests="0" time="0.000158379" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController#create" tests="0" time="0.000154692" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="OpenGraphActionsController" tests="0" time="0.000224613" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payleap.gateway #credit" tests="3" time="1.160954726" failures="0" errors="0" skipped="0">
  <testcase name="Payleap.gateway #credit implements a #purchase method" time="0.386509631">
  </testcase>
  <testcase name="Payleap.gateway #credit returns a response that implements success?" time="0.382998415">
  </testcase>
  <testcase name="Payleap.gateway #credit returns a response with necessary attributes" time="0.390841561">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payleap.gateway #purchase" tests="3" time="1.221936299" failures="0" errors="0" skipped="0">
  <testcase name="Payleap.gateway #purchase implements a #purchase method" time="0.423549072">
  </testcase>
  <testcase name="Payleap.gateway #purchase returns a response that implements success?" time="0.384084368">
  </testcase>
  <testcase name="Payleap.gateway #purchase returns a response with necessary attributes" time="0.413745427">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payleap.gateway" tests="0" time="0.000166634" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payleap.new_session" tests="2" time="0.814424249" failures="0" errors="0" skipped="0">
  <testcase name="Payleap.new_session returns a Payleap::Session" time="0.437091969">
  </testcase>
  <testcase name="Payleap.new_session returns a Payleap::Session with a session id" time="0.376924649">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payleap" tests="0" time="0.00026105" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 Acculynk processor actions #charge!" tests="1" time="0.40704759" failures="0" errors="0" skipped="0">
  <testcase name="Payment2 Acculynk processor actions #charge! uses acculynk gateway" time="0.406709407">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 Acculynk processor actions #refund!" tests="1" time="0.41983454" failures="0" errors="0" skipped="0">
  <testcase name="Payment2 Acculynk processor actions #refund! uses acculynk gateway" time="0.419439962">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 Acculynk processor actions" tests="0" time="0.000200709" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 Acculynk #set processor payment instrument is Acculynk PIN debit" tests="2" time="0.836322282" failures="0" errors="0" skipped="0">
  <testcase name="Payment2 Acculynk #set processor payment instrument is Acculynk PIN debit processes in USD" time="0.425908681">
  </testcase>
  <testcase name="Payment2 Acculynk #set processor payment instrument is Acculynk PIN debit sets the acculynk processor" time="0.40986857">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 Acculynk #set processor payment instrument is not Acculynk PIN debit" tests="1" time="0.401840664" failures="0" errors="0" skipped="0">
  <testcase name="Payment2 Acculynk #set processor payment instrument is not Acculynk PIN debit doesn't set the acculynk processor" time="0.40143459">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 Acculynk #set processor" tests="0" time="0.000173649" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 Acculynk" tests="0" time="0.000192213" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2.get_currency_for_payment_method cc" tests="1" time="0.387367405" failures="0" errors="0" skipped="0">
  <testcase name="Payment2.get_currency_for_payment_method cc tests basic usage" time="0.386975725">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2.get_currency_for_payment_method" tests="0" time="0.000225526" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 payments charge failures host_payment_warning" tests="2" time="1.595810802" failures="0" errors="0" skipped="0">
  <testcase name="Payment2 payments charge failures host_payment_warning should not freeze all line items for 2 failures" time="0.840265222">
  </testcase>
  <testcase name="Payment2 payments charge failures host_payment_warning should call in to freeze all line items for 3 failures" time="0.755084189">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 payments charge failures" tests="0" time="0.000191437" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 refund email for security deposits" tests="2" time="2.545205895" failures="0" errors="0" skipped="0">
  <testcase name="Payment2 refund email for security deposits should be sent if authorization successfully voided" time="1.281250374">
  </testcase>
  <testcase name="Payment2 refund email for security deposits should be sent if security deposit authorization is unsuccessfully voided due to expiration" time="1.26345487">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 refund email" tests="0" time="0.000191707" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2#run_charge_first_attempt! when a charge is attempted" tests="2" time="1.957460498" failures="0" errors="0" skipped="0">
  <testcase name="Payment2#run_charge_first_attempt! when a charge is attempted returns true if charge is successful" time="0.678610531">
  </testcase>
  <testcase name="Payment2#run_charge_first_attempt! when a charge is attempted returns false if charge failed" time="1.278387302">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2#run_charge_first_attempt! when a charge is not attempted" tests="5" time="3.736725066" failures="0" errors="0" skipped="0">
  <testcase name="Payment2#run_charge_first_attempt! when a charge is not attempted doesn't attempt to charge an incomplete paypal payment" time="0.69617838">
  </testcase>
  <testcase name="Payment2#run_charge_first_attempt! when a charge is not attempted doesn't attempt to charge unsupported product types" time="0.670402876">
  </testcase>
  <testcase name="Payment2#run_charge_first_attempt! when a charge is not attempted only attempts to charge supported types" time="0.684812991">
  </testcase>
  <testcase name="Payment2#run_charge_first_attempt! when a charge is not attempted doesn't charge if there is no ref_model" time="0.672344883">
  </testcase>
  <testcase name="Payment2#run_charge_first_attempt! when a charge is not attempted doesn't charge if ref_model is a reservation with specific statuses" time="1.012204606">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2#run_charge_first_attempt!" tests="0" time="0.000197691" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2#save_with_loss" tests="3" time="2.377626196" failures="0" errors="0" skipped="0">
  <testcase name="Payment2#save_with_loss saves both the loss and payment2" time="0.858919605">
  </testcase>
  <testcase name="Payment2#save_with_loss does not save anything when payment2 has wrong product_type" time="0.755000145">
  </testcase>
  <testcase name="Payment2#save_with_loss does not save anything when loss is not valid" time="0.7631482">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 Settlement Currencies" tests="1" time="0.391786867" failures="0" errors="0" skipped="0">
  <testcase name="Payment2 Settlement Currencies allows only USD for Discover cards" time="0.391419826">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 user_friendly_cc_gateway_error_msg" tests="1" time="0.409291681" failures="0" errors="0" skipped="0">
  <testcase name="Payment2 user_friendly_cc_gateway_error_msg should display the proper user friendly text given a cc gateway error message" time="0.408936048">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2#validate_for_defined_loss" tests="4" time="2.595925362" failures="0" errors="0" skipped="0">
  <testcase name="Payment2#validate_for_defined_loss will not allow a payment2 defined loss to be created without a loss" time="0.386507796">
  </testcase>
  <testcase name="Payment2#validate_for_defined_loss will not allow a payment2 with another product type to be created with a loss" time="0.747233257">
  </testcase>
  <testcase name="Payment2#validate_for_defined_loss will not allow a payment2 product_type to be changed to defined loss" time="0.397109825">
  </testcase>
  <testcase name="Payment2#validate_for_defined_loss will not allow a payment2 product_type to be changed from defined loss" time="1.064143393">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 Validation" tests="2" time="0.801473488" failures="0" errors="0" skipped="0">
  <testcase name="Payment2 Validation should not allow blank processor types" time="0.387848527">
  </testcase>
  <testcase name="Payment2 Validation should require Losses to have an Other processor type" time="0.413139463">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 WorldPay .cc_processor_type" tests="3" time="1.803683412" failures="0" errors="0" skipped="0">
  <testcase name="Payment2 WorldPay .cc_processor_type sets the WorldPay processor for currencies where WorldPay is on" time="0.394980299">
  </testcase>
  <testcase name="Payment2 WorldPay .cc_processor_type does not set the WorldPay processor for currencies where WorldPay is not on" time="0.434420419">
  </testcase>
  <testcase name="Payment2 WorldPay .cc_processor_type processs EUR via Chase Paymentech in Italy" time="0.973663722">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 WorldPay .determine_settlement_currency" tests="4" time="1.627994173" failures="0" errors="0" skipped="0">
  <testcase name="Payment2 WorldPay .determine_settlement_currency allows AUD if native_aud is off but WorlPay is on" time="0.418973114">
  </testcase>
  <testcase name="Payment2 WorldPay .determine_settlement_currency does not allow AUD if both experiments are off" time="0.403101912">
  </testcase>
  <testcase name="Payment2 WorldPay .determine_settlement_currency does not allow CHF and DKK with Paymentech" time="0.41826797">
  </testcase>
  <testcase name="Payment2 WorldPay .determine_settlement_currency allows CHF and DKK with WorlPay" time="0.386980918">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 WorldPay Fallback to Chase" tests="3" time="1.888176936" failures="0" errors="0" skipped="0">
  <testcase name="Payment2 WorldPay Fallback to Chase should fallback on auth for valid Chase currencies" time="0.975859621">
  </testcase>
  <testcase name="Payment2 WorldPay Fallback to Chase should not fallback for reasons outside of those defined" time="0.449537514">
  </testcase>
  <testcase name="Payment2 WorldPay Fallback to Chase should not fallback for currencies unavailable through Chase" time="0.462185994">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2 WorldPay" tests="1" time="0.406534985" failures="0" errors="0" skipped="0">
  <testcase name="Payment2 WorldPay charges guests from the UA in RUB with WorlPay" time="0.406231809">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payment2" tests="0" time="0.00025906" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentInstrument.create_acculynk_instrument" tests="2" time="2.094172032" failures="0" errors="0" skipped="0">
  <testcase name="PaymentInstrument.create_acculynk_instrument returns a payment instrument with type INSTRUMENT_TYPE_ACCULYNK_PIN_DEBIT" time="0.84811257">
  </testcase>
  <testcase name="PaymentInstrument.create_acculynk_instrument returns a payment instrument with credit card type unionpay" time="1.2455554">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentInstrument full_address" tests="3" time="1.277199066" failures="0" errors="0" skipped="0">
  <testcase name="PaymentInstrument full_address contains unambiguous country" time="0.434183335">
  </testcase>
  <testcase name="PaymentInstrument full_address can handle invalid country" time="0.427625822">
  </testcase>
  <testcase name="PaymentInstrument full_address can handle empty country" time="0.414796366">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentInstrument instrument_from_params" tests="4" time="6.010847153" failures="0" errors="0" skipped="0">
  <testcase name="PaymentInstrument instrument_from_params remaps XK =&gt; RS when vaulting" time="1.459516314">
  </testcase>
  <testcase name="PaymentInstrument instrument_from_params maintains USD country code when vaulting" time="1.36607348">
  </testcase>
  <testcase name="PaymentInstrument instrument_from_params maintains CAD country code when vaulting" time="1.798142438">
  </testcase>
  <testcase name="PaymentInstrument instrument_from_params maintains GBP country code when vaulting" time="1.386272526">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentInstrument#is_cc_type?" tests="2" time="0.849733158" failures="0" errors="0" skipped="0">
  <testcase name="PaymentInstrument#is_cc_type? returns true for instrument types in CREDIT_CARD_INSTRUMENT_TYPES" time="0.441069409">
  </testcase>
  <testcase name="PaymentInstrument#is_cc_type? returns false for all other instrument types" time="0.408145175">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentInstrument.is_full_authorization_eligible?" tests="3" time="1.745852088" failures="0" errors="0" skipped="0">
  <testcase name="PaymentInstrument.is_full_authorization_eligible? returns true for Visa credit cards" time="0.435777993">
  </testcase>
  <testcase name="PaymentInstrument.is_full_authorization_eligible? returns false for Amex credit cards" time="0.489093458">
  </testcase>
  <testcase name="PaymentInstrument.is_full_authorization_eligible? returns false for Russian credit cards" time="0.820390013">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentInstrument#queue_update_address_info" tests="3" time="1.316130029" failures="0" errors="0" skipped="0">
  <testcase name="PaymentInstrument#queue_update_address_info is invoked after save" time="0.44982474">
  </testcase>
  <testcase name="PaymentInstrument#queue_update_address_info doesn't queue update address info job if address fields not changed" time="0.421333282">
  </testcase>
  <testcase name="PaymentInstrument#queue_update_address_info queues update address info job if address fields changed" time="0.444299307">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentInstrument.valid_payment_instruments_for_user" tests="5" time="3.309569107" failures="0" errors="0" skipped="0">
  <testcase name="PaymentInstrument.valid_payment_instruments_for_user returns a valid credit card" time="0.593902362">
  </testcase>
  <testcase name="PaymentInstrument.valid_payment_instruments_for_user returns multiple valid credit cards and orders by id desc" time="0.95912872">
  </testcase>
  <testcase name="PaymentInstrument.valid_payment_instruments_for_user only returns verified cards" time="0.573126336">
  </testcase>
  <testcase name="PaymentInstrument.valid_payment_instruments_for_user does not return cards with &quot;dont save&quot; on" time="0.595570455">
  </testcase>
  <testcase name="PaymentInstrument.valid_payment_instruments_for_user does not return expired cards" time="0.587104296">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentInstrument.vaulted_instrument_from_params acculynk parameters present" tests="1" time="0.82393202" failures="0" errors="0" skipped="0">
  <testcase name="PaymentInstrument.vaulted_instrument_from_params acculynk parameters present calls create_acculynk_instrument" time="0.823510491">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentInstrument.vaulted_instrument_from_params" tests="0" time="0.000224851" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentInstrument" tests="0" time="0.000240502" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentPayoneerUpdateUserDetails" tests="3" time="2.423149485" failures="0" errors="0" skipped="0">
  <testcase name="PaymentPayoneerUpdateUserDetails should set ach_account_name from Payoneer" time="0.831227628">
  </testcase>
  <testcase name="PaymentPayoneerUpdateUserDetails should update an existing ach_account_name from Payoneer" time="0.809295878">
  </testcase>
  <testcase name="PaymentPayoneerUpdateUserDetails should set envoy_country with data from Payoneer" time="0.781947707">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#apply_coupon_to_reservation successful apply" tests="2" time="3.417294065" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#apply_coupon_to_reservation successful apply updates reservation with applied coupon" time="1.257114516">
  </testcase>
  <testcase name="Payments::BookingLogic#apply_coupon_to_reservation successful apply returns correct coupon data" time="2.159731888">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#apply_coupon_to_reservation unsuccessful apply" tests="2" time="2.505144227" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#apply_coupon_to_reservation unsuccessful apply does not update the reservation with coupon" time="1.245018162">
  </testcase>
  <testcase name="Payments::BookingLogic#apply_coupon_to_reservation unsuccessful apply returns an error" time="1.25957901">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#apply_coupon_to_reservation" tests="0" time="0.000163961" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#charge_or_auth_payment credit card" tests="2" time="2.945508485" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#charge_or_auth_payment credit card returns no errors if successful" time="1.74562552">
  </testcase>
  <testcase name="Payments::BookingLogic#charge_or_auth_payment credit card returns errors if unsuccessful" time="1.19942721">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#charge_or_auth_payment paypal" tests="2" time="2.388321164" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#charge_or_auth_payment paypal returns no errors if successful" time="1.200565308">
  </testcase>
  <testcase name="Payments::BookingLogic#charge_or_auth_payment paypal returns errors if unsuccessful" time="1.187271727">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#charge_or_auth_payment" tests="0" time="0.000178756" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#check_agree_terms terms that are checked" tests="1" time="0.423533128" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#check_agree_terms terms that are checked returns an empty array" time="0.423200951">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#check_agree_terms terms that are not checked" tests="1" time="0.35707325" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#check_agree_terms terms that are not checked returns an error" time="0.356677756">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#check_agree_terms" tests="0" time="0.000171717" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#check_required_verifications host requirements that are not set" tests="1" time="2.070388271" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#check_required_verifications host requirements that are not set returns no errors if guest has no profile pic and trip description" time="2.070029711">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#check_required_verifications host requirements that are set" tests="3" time="3.658357358" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#check_required_verifications host requirements that are set returns an error if guest has no profile pic" time="1.203088236">
  </testcase>
  <testcase name="Payments::BookingLogic#check_required_verifications host requirements that are set returns an error if guest has no trip description" time="1.226421004">
  </testcase>
  <testcase name="Payments::BookingLogic#check_required_verifications host requirements that are set returns no errors if guest has all requirements" time="1.228310793">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#check_required_verifications no phone verification requirement" tests="1" time="1.274505917" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#check_required_verifications no phone verification requirement doesn't return an error if guest is not phone verified" time="1.274122741">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#check_required_verifications phone verification requirement" tests="2" time="2.906689122" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#check_required_verifications phone verification requirement returns an error if guest is not phone verified" time="1.728302741">
  </testcase>
  <testcase name="Payments::BookingLogic#check_required_verifications phone verification requirement doesn't return an error if guest is phone verified" time="1.177962931">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#check_required_verifications" tests="0" time="0.000182601" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#freeze_reservation_as_needed checkpoint_lite" tests="2" time="2.582628153" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#freeze_reservation_as_needed checkpoint_lite lightly freezes the reservation" time="1.301421479">
  </testcase>
  <testcase name="Payments::BookingLogic#freeze_reservation_as_needed checkpoint_lite returns the correct values" time="1.280728854">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#freeze_reservation_as_needed checkpoint" tests="2" time="3.522736937" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#freeze_reservation_as_needed checkpoint freezes the reservation" time="2.24513986">
  </testcase>
  <testcase name="Payments::BookingLogic#freeze_reservation_as_needed checkpoint returns the correct values" time="1.277047234">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/lib/calendar/constants/definition.rb:7: warning: already initialized constant SQUARE
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#freeze_reservation_as_needed no freezing" tests="2" time="2.491367867" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#freeze_reservation_as_needed no freezing does not freeze the reservation" time="1.246306297">
  </testcase>
  <testcase name="Payments::BookingLogic#freeze_reservation_as_needed no freezing returns the correct values" time="1.244513935">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#freeze_reservation_as_needed" tests="0" time="0.000165959" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#p5_redirect accepted reservation with open graph behaves like p5 redirect with social" tests="1" time="1.714921714" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#p5_redirect accepted reservation with open graph behaves like p5 redirect with social returns expected redirect info" time="1.714587389">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#p5_redirect accepted reservation with open graph" tests="0" time="0.000170716" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#p5_redirect accepted reservation without open graph behaves like p5 redirect without social" tests="1" time="1.277171666" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#p5_redirect accepted reservation without open graph behaves like p5 redirect without social returns expected redirect info" time="1.276767348">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#p5_redirect accepted reservation without open graph" tests="0" time="0.000183402" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#p5_redirect accepted reservation" tests="0" time="0.000168037" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#p5_redirect pending reservation with open graph behaves like p5 redirect without social" tests="1" time="1.240532124" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#p5_redirect pending reservation with open graph behaves like p5 redirect without social returns expected redirect info" time="1.240173236">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#p5_redirect pending reservation with open graph" tests="0" time="0.000157064" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#p5_redirect pending reservation without open graph behaves like p5 redirect without social" tests="1" time="1.193544951" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#p5_redirect pending reservation without open graph behaves like p5 redirect without social returns expected redirect info" time="1.193116375">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#p5_redirect pending reservation without open graph" tests="0" time="0.00017843" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#p5_redirect pending reservation" tests="0" time="0.000193217" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#p5_redirect" tests="0" time="0.000165353" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#process_payment_errors" tests="2" time="3.191281918" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#process_payment_errors shows the proper error messaging and in the right format for v1 and v2" time="1.466200713">
  </testcase>
  <testcase name="Payments::BookingLogic#process_payment_errors returns any unrecognized errors separately for v1 and v2" time="1.724654387">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#retrieve_payment_instrument" tests="4" time="4.779745369" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#retrieve_payment_instrument balances payments and returns success if reservation is free and there's already an original payment2" time="1.212382616">
  </testcase>
  <testcase name="Payments::BookingLogic#retrieve_payment_instrument returns an error if instrument_from_params fails" time="1.211918627">
  </testcase>
  <testcase name="Payments::BookingLogic#retrieve_payment_instrument returns an error if reservation.setup_payment fails" time="1.167271194">
  </testcase>
  <testcase name="Payments::BookingLogic#retrieve_payment_instrument returns success if a new payment instrument is set up" time="1.187528917">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#save_contact_preference" tests="2" time="2.845236244" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#save_contact_preference does nothing if no contact preferences were submitted" time="1.265182139">
  </testcase>
  <testcase name="Payments::BookingLogic#save_contact_preference sets guest preferences if contact preferences were submitted" time="1.579583043">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#set_up_reservation_request trip profile not submitted" tests="1" time="1.340866681" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#set_up_reservation_request trip profile not submitted does not create a trip profile for the guest" time="1.340494437">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#set_up_reservation_request trip profile submitted" tests="1" time="1.907705053" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#set_up_reservation_request trip profile submitted creates a trip profile for the guest" time="1.907385066">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#set_up_reservation_request trip profile" tests="0" time="0.000197826" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#set_up_reservation_request White Glove guest" tests="1" time="1.306373174" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#set_up_reservation_request White Glove guest enqueues a WhiteGloveNotificationJob" time="1.306035389">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#set_up_reservation_request with message" tests="1" time="1.705651208" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#set_up_reservation_request with message sends a message to the host" time="1.705329087">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#set_up_reservation_request without message" tests="1" time="1.302688049" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#set_up_reservation_request without message does not send a message to the host" time="1.302220033">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#set_up_reservation_request" tests="1" time="1.291179438" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#set_up_reservation_request changes reservation to pending" time="1.290855217">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#update_guest_profile_info" tests="2" time="3.10915408" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#update_guest_profile_info updates the guest's profile info if any changes exist" time="1.547723963">
  </testcase>
  <testcase name="Payments::BookingLogic#update_guest_profile_info does nothing if nothing was submitted" time="1.561001876">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#validate_reservation_state reservations that have an improper state" tests="6" time="6.83940776" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#validate_reservation_state reservations that have an improper state returns NotFoundError if the reservation is nil" time="0.375716892">
  </testcase>
  <testcase name="Payments::BookingLogic#validate_reservation_state reservations that have an improper state returns CannotError if the guest cannot create a pending" time="1.687066442">
  </testcase>
  <testcase name="Payments::BookingLogic#validate_reservation_state reservations that have an improper state redirects if reservation is not new" time="1.209524995">
  </testcase>
  <testcase name="Payments::BookingLogic#validate_reservation_state reservations that have an improper state returns GhostError if guest or host is ghosted" time="1.185269283">
  </testcase>
  <testcase name="Payments::BookingLogic#validate_reservation_state reservations that have an improper state returns UnavailableError if hosting is now unavailable for those dates" time="1.185091577">
  </testcase>
  <testcase name="Payments::BookingLogic#validate_reservation_state reservations that have an improper state returns AlreadyChargedError if reservation is already charged" time="1.195864465">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic#validate_reservation_state" tests="1" time="1.193851884" failures="0" errors="0" skipped="0">
  <testcase name="Payments::BookingLogic#validate_reservation_state returns the correct success state" time="1.193602762">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::BookingLogic" tests="0" time="0.000246795" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking acculynk" tests="4" time="8.091671812" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking acculynk presenter's acculynk_eligible? returns true" time="1.439695764">
  </testcase>
  <testcase name="PaymentsController booking acculynk sets up an acculynk payment instrument" time="2.499347808">
  </testcase>
  <testcase name="PaymentsController booking acculynk charges using acculynk gateway" time="1.69858923">
  </testcase>
  <testcase name="PaymentsController booking acculynk redirects to p5 on success" time="2.453078963">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking a new credit card payment_instrument should honor airbnb phone verification requirements" tests="2" time="4.103978587" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking a new credit card payment_instrument should honor airbnb phone verification requirements and fail if needs phone number" time="1.478102979">
  </testcase>
  <testcase name="PaymentsController booking a new credit card payment_instrument should honor airbnb phone verification requirements and succeed if has verified phone number" time="2.625291622">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking a new credit card payment_instrument v1" tests="3" time="5.919866431" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking a new credit card payment_instrument v1 successfully submits a booking request when given a valid coupon" time="1.761018638">
  </testcase>
  <testcase name="PaymentsController booking a new credit card payment_instrument v1 submits a regular booking and generates payment information" time="1.991383771">
  </testcase>
  <testcase name="PaymentsController booking a new credit card payment_instrument v1 changes the reservation to pending" time="2.166706496">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking a new credit card payment_instrument v2" tests="3" time="5.903504778" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking a new credit card payment_instrument v2 successfully submits a booking request when given a valid coupon" time="1.698289068">
  </testcase>
  <testcase name="PaymentsController booking a new credit card payment_instrument v2 submits a regular booking and generate payment information" time="2.541298726">
  </testcase>
  <testcase name="PaymentsController booking a new credit card payment_instrument v2 changes the reservation to pending" time="1.663208947">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking a new credit card payment_instrument" tests="0" time="0.00019777" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking a pre-existing credit card payment_instrument affiliate tracking" tests="4" time="7.492079847" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking a pre-existing credit card payment_instrument affiliate tracking should set the reservation's affiliate ID to the latest value in the session" time="1.624272835">
  </testcase>
  <testcase name="PaymentsController booking a pre-existing credit card payment_instrument affiliate tracking V2: should set the reservation's affiliate ID to the latest value in the session" time="2.52108094">
  </testcase>
  <testcase name="PaymentsController booking a pre-existing credit card payment_instrument affiliate tracking should set the reservation's affiliate ID to the latest value in the cookies if there isn't one in the session" time="1.714113207">
  </testcase>
  <testcase name="PaymentsController booking a pre-existing credit card payment_instrument affiliate tracking V2: should set the reservation's affiliate ID to the latest value in the cookies if there isn't one in the session" time="1.631905547">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking a pre-existing credit card payment_instrument message_to_host" tests="2" time="5.109707436" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking a pre-existing credit card payment_instrument message_to_host should save a message to host if supplied" time="3.083682748">
  </testcase>
  <testcase name="PaymentsController booking a pre-existing credit card payment_instrument message_to_host V2: should save a message to host if supplied" time="2.02544709">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking a pre-existing credit card payment_instrument special offers" tests="4" time="18.755881294" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking a pre-existing credit card payment_instrument special offers should provide special offer rate when special_offer_id specified" time="4.863104131">
  </testcase>
  <testcase name="PaymentsController booking a pre-existing credit card payment_instrument special offers V2: should provide special offer rate when special_offer_id specified" time="4.653041272">
  </testcase>
  <testcase name="PaymentsController booking a pre-existing credit card payment_instrument special offers should provide special offer rate without special_offer_id specified" time="4.590256756">
  </testcase>
  <testcase name="PaymentsController booking a pre-existing credit card payment_instrument special offers V2: should provide special offer rate without special_offer_id specified" time="4.648637208">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking a pre-existing credit card payment_instrument" tests="0" time="0.000204133" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking error handling v1" tests="7" time="11.991819556" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking error handling v1 redirects to / if there is no reservation found" time="1.403933689">
  </testcase>
  <testcase name="PaymentsController booking error handling v1 redirects from validate_reservation_state" time="1.777561739">
  </testcase>
  <testcase name="PaymentsController booking error handling v1 re-renders book if agree terms is nil" time="2.000246818">
  </testcase>
  <testcase name="PaymentsController booking error handling v1 re-renders book if missing required verifications" time="1.490219364">
  </testcase>
  <testcase name="PaymentsController booking error handling v1 re-renders book if there is an error in payment setup" time="1.758713922">
  </testcase>
  <testcase name="PaymentsController booking error handling v1 re-renders book if there is a coupon error" time="2.045894653">
  </testcase>
  <testcase name="PaymentsController booking error handling v1 re-renders book if there is an error in payment auth or charge" time="1.514062367">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking error handling v2" tests="5" time="9.36922106" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking error handling v2 returns the redirect url from validate_reservation_state" time="1.813279032">
  </testcase>
  <testcase name="PaymentsController booking error handling v2 returns json with the error if agree terms is nil" time="1.994495707">
  </testcase>
  <testcase name="PaymentsController booking error handling v2 returns json with the error if there is an error in payment setup" time="1.448693235">
  </testcase>
  <testcase name="PaymentsController booking error handling v2 returns json with the error if there is a coupon error" time="2.345731843">
  </testcase>
  <testcase name="PaymentsController booking error handling v2 returns json with the error if there is an error in payment auth or charge" time="1.766085948">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking error handling" tests="0" time="0.000198078" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking hard_fallback" tests="5" time="10.466010501" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking hard_fallback should not assign set_hard_fallback if Trebuchet is not on" time="1.542999179">
  </testcase>
  <testcase name="PaymentsController booking hard_fallback should assign set_hard_fallback if Trebuchet is on" time="2.493971661">
  </testcase>
  <testcase name="PaymentsController booking hard_fallback should hard_fallback if Trebuchet is on and the hard_fallback is passed" time="2.036973857">
  </testcase>
  <testcase name="PaymentsController booking hard_fallback should assign set_hard_fallback on create_booking_v2 if Trebuchet is on" time="2.699836447">
  </testcase>
  <testcase name="PaymentsController booking hard_fallback should hard_fallback on create_booking v2 if Trebuchet is on &amp; hard_fallback is sent" time="1.690971004">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking p4 v2 experiment trebucheted off" tests="1" time="1.732096624" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking p4 v2 experiment trebucheted off renders old p4" time="1.731738221">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking p4 v2 experiment trebucheted on for guest with no verifications" tests="3" time="6.120215889" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking p4 v2 experiment trebucheted on for guest with no verifications renders old p4 if airbnb requires phone verification" time="1.97175539">
  </testcase>
  <testcase name="PaymentsController booking p4 v2 experiment trebucheted on for guest with no verifications renders old p4 if host requires phone verification" time="1.418804023">
  </testcase>
  <testcase name="PaymentsController booking p4 v2 experiment trebucheted on for guest with no verifications renders new p4 if no requirements exist" time="2.728959111">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking p4 v2 experiment trebucheted on for guest with verifications" tests="1" time="1.404304915" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking p4 v2 experiment trebucheted on for guest with verifications renders new p4 if airbnb requires phone verification" time="1.403874693">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking p4 v2 experiment trebucheted on" tests="0" time="0.000201458" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking p4 v2 experiment" tests="0" time="0.000176573" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking paypal payment_instrument" tests="2" time="3.949793153" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking paypal payment_instrument should submit a regular booking and generate payment information" time="1.528527514">
  </testcase>
  <testcase name="PaymentsController booking paypal payment_instrument V2: should submit a regular booking and generate payment information" time="2.420703083">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking rollback v1" tests="4" time="8.402781646" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking rollback v1 has a payment2 record on the reso" time="1.720375016">
  </testcase>
  <testcase name="PaymentsController booking rollback v1 rolls back the reservation status to new" time="2.947104488">
  </testcase>
  <testcase name="PaymentsController booking rollback v1 voids auths on the reservation" time="1.703446997">
  </testcase>
  <testcase name="PaymentsController booking rollback v1 clears the original_payment2_id field on the reservation" time="2.031065184">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking rollback v2" tests="4" time="8.119281162" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking rollback v2 has a payment2 record on the reso" time="2.271364309">
  </testcase>
  <testcase name="PaymentsController booking rollback v2 rolls back the reservation status to new" time="1.676103193">
  </testcase>
  <testcase name="PaymentsController booking rollback v2 voids auths on the reservation" time="2.490694347">
  </testcase>
  <testcase name="PaymentsController booking rollback v2 clears the original_payment2_id field on the reservation" time="1.680326052">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking rollback" tests="0" time="0.000204556" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking without confirmation code or hosting id (while logged in)" tests="2" time="1.599647789" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking without confirmation code or hosting id (while logged in) should redirect" time="0.796196879">
  </testcase>
  <testcase name="PaymentsController booking without confirmation code or hosting id (while logged in) V2: should redirect" time="0.802997768">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking without confirmation code or hosting id (while not logged in)" tests="2" time="0.762471292" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController booking without confirmation code or hosting id (while not logged in) should redirect" time="0.366964058">
  </testcase>
  <testcase name="PaymentsController booking without confirmation code or hosting id (while not logged in) V2: should redirect" time="0.394891687">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking without confirmation code or hosting id" tests="0" time="0.000196962" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController booking" tests="0" time="0.00019878" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation Happiness Tracking Survey" tests="1" time="1.830456597" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation Happiness Tracking Survey sends the email and sets the memory" time="1.830064067">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking" tests="11" time="20.975284113" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if guest_has_basic_profile" time="1.815438904">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if guest_has_verified_phone" time="1.851234035">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if guest_has_profile_photo" time="2.081334473">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if guest_has_verified_id" time="1.979285413">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if airbnb_require_verified_phone" time="1.866037959">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if airbnb_require_verified_phone" time="1.845523717">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if host_require_verified_phone" time="1.916631129">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if host_require_profile_photo" time="1.863601971">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if host_require_trip_detail" time="1.996662367">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if host_require_verified_id" time="1.863676107">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if no verification states are satisfied" time="1.89408431">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation stale object" tests="2" time="3.587185741" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation stale object raises when Reservation2.begin_reservation throws a ActiveRecord::StaleObjectError" time="1.768856945">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation stale object logs a warning when Reservation2#save! throws a ActiveRecord::StaleObjectError" time="1.817700904">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation" tests="4" time="7.320574394" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation determines the time zone for the guest" time="1.889414677">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation assigns instance variables for the view" time="1.844358348">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation logs the p4 event" time="1.82697693">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation redirects when begin reservation throws a Reservation2::Error" time="1.759102906">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality with a special offer but no checkin or checkout" tests="1" time="1.804937719" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality with a special offer but no checkin or checkout requires hosting_id, checkin, and checkout" time="1.80451275">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality with a special offer with an existing reservation" tests="1" time="1.948316968" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality with a special offer with an existing reservation begins the reservation with the special offer" time="1.947927935">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality with a special offer without an existing reservation" tests="1" time="1.911126471" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality with a special offer without an existing reservation begins the reservation with the special offer" time="1.910713757">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality with a special offer" tests="0" time="0.000241006" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality without a special offer with an existing reservation" tests="1" time="1.904285843" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality without a special offer with an existing reservation begins reservation with the posted params" time="1.903785524">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality without a special offer without an existing reservation" tests="1" time="1.803161376" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality without a special offer without an existing reservation begins a reservation with the posted params" time="1.802675133">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality without a special offer" tests="0" time="0.000207882" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in creating a reservation functionality" tests="0" time="0.000196906" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process validation with an invalid confirmation code" tests="2" time="3.34712402" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process validation with an invalid confirmation code when it can't find the reservation, it redirects" time="0.899426271">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process validation with an invalid confirmation code when it finds the reservation it validates the owner" time="2.447114413">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process validation" tests="0" time="0.000266995" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process with a valid confirmation code" tests="1" time="1.933023125" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process with a valid confirmation code sets the hosting" time="1.932644301">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when checkin and checkout are missing" tests="1" time="1.694205667" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when checkin and checkout are missing redirects to the hosting" time="1.693768986">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when checkout is missing" tests="1" time="1.768172583" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when checkout is missing validates the params" time="1.76770913">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when the checkin is before today" tests="1" time="1.768781778" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when the checkin is before today validates the params" time="1.768350037">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when the checkout is not after the checkin" tests="1" time="1.702241709" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when the checkout is not after the checkin validates the params" time="1.701808207">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation" tests="0" time="0.00024443" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid when load_query returns false" tests="1" time="1.735265821" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid when load_query returns false redirects to the hosting" time="1.734800231">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid when the hosting is not found" tests="1" time="1.763038583" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid when the hosting is not found redirects to dashboard" time="1.762607376">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid with valid checkin and checkout dates" tests="2" time="3.648047723" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid with valid checkin and checkout dates begins a reservation" time="1.799275221">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid with valid checkin and checkout dates persists the reservation to the database" time="1.848225813">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid" tests="1" time="1.369444204" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid loads the globals" time="1.36909606">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code" tests="0" time="0.000199479" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in setup needed to begin booking process" tests="0" time="0.000308414" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when logged in" tests="0" time="0.000283349" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when not logged in no confirmation code" tests="2" time="2.863452857" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when not logged in no confirmation code when the hosting is not found it redirects to /" time="1.167670641">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when not logged in no confirmation code when the hosting is found it redirects to users/signup_login" time="1.695309098">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when not logged in with a confirmation code" tests="2" time="2.45647972" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when not logged in with a confirmation code redirects to signup_login when the code is valid" time="1.658864057">
  </testcase>
  <testcase name="PaymentsController book (v1) behaves like a book endpoint when not logged in with a confirmation code redirects to dashboard when the code is invalid" time="0.796956139">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint when not logged in" tests="0" time="0.00019646" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) behaves like a book endpoint" tests="0" time="0.000176519" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the trip profile doesn't exist" tests="1" time="1.787150422" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the trip profile doesn't exist assigns true to show_trip_profile_input" time="1.786759962">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the trip profile exists" tests="1" time="1.821993048" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the trip profile exists assigns false to show_trip_profile_input" time="1.821607477">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the user's country isn't US" tests="1" time="1.60300235" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the user's country isn't US doesn't assign verification_options" time="1.60262862">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the users country is US when their phone number isn't verified when needs needs_phone_verification? returns false" tests="1" time="1.73557709" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the users country is US when their phone number isn't verified when needs needs_phone_verification? returns false assigns verification_options with req_verification == 'not_required'" time="1.735161618">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the users country is US when their phone number isn't verified when needs needs_phone_verification? returns true" tests="1" time="1.65936473" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the users country is US when their phone number isn't verified when needs needs_phone_verification? returns true assigns verification_options with req_verification == 'required'" time="1.658941715">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the users country is US when their phone number isn't verified" tests="1" time="2.282045028" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the users country is US when their phone number isn't verified assigns verification_options with the country key" time="2.281706682">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the users country is US when their phone number is verified" tests="1" time="2.247499103" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the users country is US when their phone number is verified doesn't assign verification_options" time="2.247114677">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation when the users country is US" tests="0" time="0.000197552" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation with a reservation with coupon savings" tests="1" time="1.644407603" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation with a reservation with coupon savings loads coupon saving and coupon explanation" time="1.64398977">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation" tests="3" time="6.801285228" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation instantiates and assigns the presenters" time="2.388409075">
  </testcase>
  <testcase name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation tracks checkpoint light" time="2.623494045">
  </testcase>
  <testcase name="PaymentsController book (v1) when logged in irrespective of the means of creation of the reservation assigns instance variables for the view" time="1.788770118">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) when logged in when a special offer is used to create the reservation" tests="1" time="2.017620485" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book (v1) when logged in when a special offer is used to create the reservation loads special offer instance var" time="2.01720405">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1) when logged in" tests="0" time="0.000191133" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book (v1)" tests="0" time="0.000194335" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation Happiness Tracking Survey" tests="1" time="1.369183494" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation Happiness Tracking Survey sends the email and sets the memory" time="1.368796989">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking" tests="11" time="16.462150685" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if guest_has_basic_profile" time="1.399449291">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if guest_has_verified_phone" time="1.41067292">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if guest_has_profile_photo" time="1.957233607">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if guest_has_verified_id" time="1.391452249">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if airbnb_require_verified_phone" time="1.406322372">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if airbnb_require_verified_phone" time="1.384223958">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if host_require_verified_phone" time="1.390779997">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if host_require_profile_photo" time="1.915751511">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if host_require_trip_detail" time="1.439202221">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if host_require_verified_id" time="1.386962486">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation requirements_tracking logs if no verification states are satisfied" time="1.37851795">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation stale object" tests="2" time="3.151643409" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation stale object raises when Reservation2.begin_reservation throws a ActiveRecord::StaleObjectError" time="1.804692877">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation stale object logs a warning when Reservation2#save! throws a ActiveRecord::StaleObjectError" time="1.346314646">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation" tests="4" time="6.038297123" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation determines the time zone for the guest" time="1.426257286">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation assigns instance variables for the view" time="1.399601243">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation logs the p4 event" time="1.372834375">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality irrespective of the means of creation of the reservation redirects when begin reservation throws a Reservation2::Error" time="1.838924525">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality with a special offer but no checkin or checkout" tests="1" time="1.509858933" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality with a special offer but no checkin or checkout requires hosting_id, checkin, and checkout" time="1.509439755">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality with a special offer with an existing reservation" tests="1" time="1.523851096" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality with a special offer with an existing reservation begins the reservation with the special offer" time="1.523501778">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality with a special offer without an existing reservation" tests="1" time="1.537047607" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality with a special offer without an existing reservation begins the reservation with the special offer" time="1.536665728">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality with a special offer" tests="0" time="0.000203553" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality without a special offer with an existing reservation" tests="1" time="1.877386123" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality without a special offer with an existing reservation begins reservation with the posted params" time="1.877037651">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality without a special offer without an existing reservation" tests="1" time="1.538059095" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality without a special offer without an existing reservation begins a reservation with the posted params" time="1.537542955">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality without a special offer" tests="0" time="0.000202892" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in creating a reservation functionality" tests="0" time="0.000216787" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process validation with an invalid confirmation code" tests="2" time="2.449611207" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process validation with an invalid confirmation code when it can't find the reservation, it redirects" time="0.809569427">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process validation with an invalid confirmation code when it finds the reservation it validates the owner" time="1.639499251">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process validation" tests="0" time="0.000173592" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process with a valid confirmation code" tests="1" time="1.923656866" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process with a valid confirmation code sets the hosting" time="1.923285581">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when checkin and checkout are missing" tests="1" time="1.257749078" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when checkin and checkout are missing redirects to the hosting" time="1.257347982">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when checkout is missing" tests="1" time="1.329375242" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when checkout is missing validates the params" time="1.328946203">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when the checkin is before today" tests="1" time="1.815508815" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when the checkin is before today validates the params" time="1.815117866">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when the checkout is not after the checkin" tests="1" time="1.371145233" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation when the checkout is not after the checkin validates the params" time="1.370746003">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid trip param validation" tests="0" time="0.000260901" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid when load_query returns false" tests="1" time="1.286182502" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid when load_query returns false redirects to the hosting" time="1.285788667">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid when the hosting is not found" tests="1" time="1.238257357" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid when the hosting is not found redirects to dashboard" time="1.237790598">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid with valid checkin and checkout dates" tests="2" time="2.799118327" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid with valid checkin and checkout dates begins a reservation" time="1.407548784">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid with valid checkin and checkout dates persists the reservation to the database" time="1.391042671">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid" tests="1" time="1.284045453" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code when the hosting is valid loads the globals" time="1.283741721">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process without a confirmation code" tests="0" time="0.000205525" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in setup needed to begin booking process" tests="0" time="0.000171815" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when logged in" tests="0" time="0.00020888" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when not logged in no confirmation code" tests="2" time="2.506235223" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when not logged in no confirmation code when the hosting is not found it redirects to /" time="0.740949106">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when not logged in no confirmation code when the hosting is found it redirects to users/signup_login" time="1.764850909">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when not logged in with a confirmation code" tests="2" time="1.988099328" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when not logged in with a confirmation code redirects to signup_login when the code is valid" time="1.249213069">
  </testcase>
  <testcase name="PaymentsController book_v2 behaves like a book endpoint when not logged in with a confirmation code redirects to dashboard when the code is invalid" time="0.738393439">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint when not logged in" tests="0" time="0.000163741" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 behaves like a book endpoint" tests="0" time="0.000161662" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2 irrespective of the means of creation of the reservation" tests="2" time="2.757552158" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController book_v2 irrespective of the means of creation of the reservation assigns instance variables for the view" time="1.367669379">
  </testcase>
  <testcase name="PaymentsController book_v2 irrespective of the means of creation of the reservation logs events" time="1.389327495">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController book_v2" tests="0" time="0.000186198" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController#express_complete_make_auth_or_payment" tests="2" time="3.54558454" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController#express_complete_make_auth_or_payment passes the is_authorization parameter properly when true" time="1.646947853">
  </testcase>
  <testcase name="PaymentsController#express_complete_make_auth_or_payment passes the is_authorization parameter properly when false" time="1.898112127">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController#express_complete_reservation should_be_frozen? returns false" tests="1" time="1.422358194" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController#express_complete_reservation should_be_frozen? returns false does not freeze reservation" time="1.421847648">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController#express_complete_reservation should_be_frozen? returns true" tests="1" time="1.354779622" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController#express_complete_reservation should_be_frozen? returns true freezes reservation" time="1.354301315">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController#express_complete_reservation" tests="0" time="0.000219351" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController make_payment ajax_make_payment_details Australia" tests="2" time="2.650737407" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController make_payment ajax_make_payment_details Australia should select the right currency for payment_method" time="1.35422354">
  </testcase>
  <testcase name="PaymentsController make_payment ajax_make_payment_details Australia should use native_charge_amount over conversion rate" time="1.295922869">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController make_payment ajax_make_payment_details" tests="1" time="1.808757929" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController make_payment ajax_make_payment_details should return successfully with basic USD " time="1.808411548">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController make_payment for a country that supports paypal" tests="1" time="2.433671599" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController make_payment for a country that supports paypal submits new paypal information" time="2.433196185">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController make_payment" tests="1" time="2.117947205" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController make_payment submits new payment information" time="2.11756158">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController#payoneer_ipcn" tests="4" time="3.78149446" failures="0" errors="0" skipped="0">
  <testcase name="PaymentsController#payoneer_ipcn can complete the payoneer api flow" time="0.891946598">
  </testcase>
  <testcase name="PaymentsController#payoneer_ipcn can complete the payoneer ach flow" time="0.920883198">
  </testcase>
  <testcase name="PaymentsController#payoneer_ipcn should only require approval to complete payoneer api flow" time="0.82995641">
  </testcase>
  <testcase name="PaymentsController#payoneer_ipcn should only require usps to complete payoneer ach flow" time="1.137799467">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PaymentsController" tests="0" time="0.000260588" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor assigning payout infos when a line item already has a payout info" tests="1" time="0.901519409" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor assigning payout infos when a line item already has a payout info doesn't modify its payout info" time="0.901184955">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor assigning payout infos when a line item isn't ready for release" tests="1" time="1.366054504" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor assigning payout infos when a line item isn't ready for release doesn't assign a payout info" time="1.365739976">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor assigning payout infos when the user doesn't have a default payout info" tests="1" time="1.024625849" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor assigning payout infos when the user doesn't have a default payout info doesn't assign a payout info" time="1.024257422">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor assigning payout infos when the user doesn't have any payout infos" tests="1" time="1.243092312" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor assigning payout infos when the user doesn't have any payout infos doesn't assign a payout info" time="1.242749329">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor assigning payout infos" tests="2" time="1.791190283" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor assigning payout infos assigns the user's default payout info" time="0.887551776">
  </testcase>
  <testcase name="Payments::LineItemsProcessor assigning payout infos skips line items that don't belong to an existing user" time="0.903215692">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor detaching payout infos that have gone bad when the line item is reconciled" tests="1" time="1.881062463" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor detaching payout infos that have gone bad when the line item is reconciled doesn't detach the payout info" time="1.880707885">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor detaching payout infos that have gone bad when the line item is unreconciled" tests="1" time="1.439909443" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor detaching payout infos that have gone bad when the line item is unreconciled detaches the payout info" time="1.439522603">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor detaching payout infos that have gone bad" tests="0" time="0.00016423" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is charity behaves like a payable line item when amount is 0" tests="1" time="1.897222717" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when info type is charity behaves like a payable line item when amount is 0 does not call pay!" time="1.896908601">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is charity behaves like a payable line item when amount is negative" tests="1" time="1.397322781" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when info type is charity behaves like a payable line item when amount is negative calls pay!" time="1.396909395">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is charity behaves like a payable line item when amount is positive" tests="1" time="1.434902896" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when info type is charity behaves like a payable line item when amount is positive does not call pay!" time="1.434573984">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is charity behaves like a payable line item when ready_for_release_at is set" tests="1" time="2.071017767" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when info type is charity behaves like a payable line item when ready_for_release_at is set does not call pay!" time="2.070610066">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is charity behaves like a payable line item" tests="0" time="0.000145419" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is charity" tests="0" time="0.000165956" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is tax garnishment behaves like a payable line item when amount is 0" tests="1" time="1.426647491" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when info type is tax garnishment behaves like a payable line item when amount is 0 does not call pay!" time="1.426325119">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is tax garnishment behaves like a payable line item when amount is negative" tests="1" time="1.418611086" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when info type is tax garnishment behaves like a payable line item when amount is negative calls pay!" time="1.418266436">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is tax garnishment behaves like a payable line item when amount is positive" tests="1" time="1.871155007" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when info type is tax garnishment behaves like a payable line item when amount is positive does not call pay!" time="1.870826914">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is tax garnishment behaves like a payable line item when ready_for_release_at is set" tests="1" time="1.42543575" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when info type is tax garnishment behaves like a payable line item when ready_for_release_at is set does not call pay!" time="1.425022045">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is tax garnishment behaves like a payable line item" tests="0" time="0.000149777" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is tax garnishment" tests="0" time="0.000174815" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is webmoney behaves like a payable line item when amount is 0" tests="1" time="1.354155972" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when info type is webmoney behaves like a payable line item when amount is 0 does not call pay!" time="1.35384419">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is webmoney behaves like a payable line item when amount is negative" tests="1" time="1.381482604" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when info type is webmoney behaves like a payable line item when amount is negative calls pay!" time="1.381132034">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is webmoney behaves like a payable line item when amount is positive" tests="1" time="1.883624484" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when info type is webmoney behaves like a payable line item when amount is positive does not call pay!" time="1.883259159">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is webmoney behaves like a payable line item when ready_for_release_at is set" tests="1" time="1.394032564" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when info type is webmoney behaves like a payable line item when ready_for_release_at is set does not call pay!" time="1.393664728">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is webmoney behaves like a payable line item" tests="0" time="0.000150973" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when info type is webmoney" tests="0" time="0.000174898" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when the line item has an envoy payout info behaves like a payable line item when amount is 0" tests="1" time="1.421261911" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when the line item has an envoy payout info behaves like a payable line item when amount is 0 does not call pay!" time="1.420919406">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when the line item has an envoy payout info behaves like a payable line item when amount is negative" tests="1" time="1.839190426" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when the line item has an envoy payout info behaves like a payable line item when amount is negative calls pay!" time="1.838773421">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when the line item has an envoy payout info behaves like a payable line item when amount is positive" tests="1" time="1.356506644" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when the line item has an envoy payout info behaves like a payable line item when amount is positive does not call pay!" time="1.356155562">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when the line item has an envoy payout info behaves like a payable line item when ready_for_release_at is set" tests="1" time="1.533650006" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor making automated payouts when the line item has an envoy payout info behaves like a payable line item when ready_for_release_at is set does not call pay!" time="1.533266177">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when the line item has an envoy payout info behaves like a payable line item" tests="0" time="0.000172978" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts when the line item has an envoy payout info" tests="0" time="0.00014993" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor making automated payouts" tests="0" time="0.00021849" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor marking line items ready for release adjustments" tests="2" time="3.19139494" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor marking line items ready for release adjustments marks all pending adjustments as ready for release" time="1.619033141">
  </testcase>
  <testcase name="Payments::LineItemsProcessor marking line items ready for release adjustments doesn't modify adjustments that are already ready for release" time="1.571825165">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor marking line items ready for release advances for reservations when all reservation payments have been collected" tests="1" time="2.056940554" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor marking line items ready for release advances for reservations when all reservation payments have been collected marks the line item as ready for release" time="2.056632261">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor marking line items ready for release advances for reservations when the reservation still has outstanding payments" tests="1" time="2.417617362" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor marking line items ready for release advances for reservations when the reservation still has outstanding payments doesn't mark it ready for release" time="2.417209189">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor marking line items ready for release advances for reservations" tests="0" time="0.000194612" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor marking line items ready for release credits" tests="2" time="4.631742017" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor marking line items ready for release credits marks all pending credits as ready for release" time="2.557228517">
  </testcase>
  <testcase name="Payments::LineItemsProcessor marking line items ready for release credits doesn't modify credits that are already ready for release" time="2.074079861">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor marking line items ready for release releasing reservation line items when its reservation has a start date in the past when #should_release_now? is true" tests="1" time="1.878116002" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor marking line items ready for release releasing reservation line items when its reservation has a start date in the past when #should_release_now? is true releases the item" time="1.877760497">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor marking line items ready for release releasing reservation line items when its reservation has a start date in the past" tests="0" time="0.000190382" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor marking line items ready for release releasing reservation line items" tests="5" time="10.815037182" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor marking line items ready for release releasing reservation line items doesn't release reservations that start today" time="2.354775466">
  </testcase>
  <testcase name="Payments::LineItemsProcessor marking line items ready for release releasing reservation line items doesn't release reservations that start in the future" time="1.861227863">
  </testcase>
  <testcase name="Payments::LineItemsProcessor marking line items ready for release releasing reservation line items doesn't release reservations with indirect errors" time="2.364914714">
  </testcase>
  <testcase name="Payments::LineItemsProcessor marking line items ready for release releasing reservation line items doesn't release admin frozen reservations" time="1.891749735">
  </testcase>
  <testcase name="Payments::LineItemsProcessor marking line items ready for release releasing reservation line items doesn't release items where should_release_now? returns false" time="2.341611996">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor marking line items ready for release" tests="0" time="0.000179209" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user doesn't have a default payout info behaves like user needs reminders when the user has received a reminder in the last 5 days" tests="1" time="0.849442351" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor reminding the user to add a payout info when the user doesn't have a default payout info behaves like user needs reminders when the user has received a reminder in the last 5 days doesn't send the user a reminder" time="0.849089838">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user doesn't have a default payout info behaves like user needs reminders when the user received a reminder more than 5 days ago" tests="1" time="0.858151324" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor reminding the user to add a payout info when the user doesn't have a default payout info behaves like user needs reminders when the user received a reminder more than 5 days ago sends the user a reminder" time="0.857701494">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user doesn't have a default payout info behaves like user needs reminders" tests="1" time="1.359375554" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor reminding the user to add a payout info when the user doesn't have a default payout info behaves like user needs reminders sends the user a reminder" time="1.359059779">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user doesn't have a default payout info" tests="0" time="0.00016917" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user doesn't have any payout infos behaves like user needs reminders when the user has received a reminder in the last 5 days" tests="1" time="0.825115172" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor reminding the user to add a payout info when the user doesn't have any payout infos behaves like user needs reminders when the user has received a reminder in the last 5 days doesn't send the user a reminder" time="0.824671282">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user doesn't have any payout infos behaves like user needs reminders when the user received a reminder more than 5 days ago" tests="1" time="0.808692944" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor reminding the user to add a payout info when the user doesn't have any payout infos behaves like user needs reminders when the user received a reminder more than 5 days ago sends the user a reminder" time="0.808323186">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user doesn't have any payout infos behaves like user needs reminders" tests="1" time="0.825008726" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor reminding the user to add a payout info when the user doesn't have any payout infos behaves like user needs reminders sends the user a reminder" time="0.824748026">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user doesn't have any payout infos" tests="0" time="0.000147592" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user has a default payout info" tests="1" time="0.880938838" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor reminding the user to add a payout info when the user has a default payout info doesn't send the user a reminder" time="0.880571716">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user's default payout info has STATUS_ERROR behaves like user needs reminders when the user has received a reminder in the last 5 days" tests="1" time="0.869865283" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor reminding the user to add a payout info when the user's default payout info has STATUS_ERROR behaves like user needs reminders when the user has received a reminder in the last 5 days doesn't send the user a reminder" time="0.869521061">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user's default payout info has STATUS_ERROR behaves like user needs reminders when the user received a reminder more than 5 days ago" tests="1" time="0.852863206" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor reminding the user to add a payout info when the user's default payout info has STATUS_ERROR behaves like user needs reminders when the user received a reminder more than 5 days ago sends the user a reminder" time="0.85250186">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user's default payout info has STATUS_ERROR behaves like user needs reminders" tests="1" time="0.848238329" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor reminding the user to add a payout info when the user's default payout info has STATUS_ERROR behaves like user needs reminders sends the user a reminder" time="0.84796836">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user's default payout info has STATUS_ERROR" tests="0" time="0.000176531" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user's default payout info has STATUS_HIDDEN behaves like user needs reminders when the user has received a reminder in the last 5 days" tests="1" time="0.899005778" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor reminding the user to add a payout info when the user's default payout info has STATUS_HIDDEN behaves like user needs reminders when the user has received a reminder in the last 5 days doesn't send the user a reminder" time="0.898608264">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user's default payout info has STATUS_HIDDEN behaves like user needs reminders when the user received a reminder more than 5 days ago" tests="1" time="0.921185856" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor reminding the user to add a payout info when the user's default payout info has STATUS_HIDDEN behaves like user needs reminders when the user received a reminder more than 5 days ago sends the user a reminder" time="0.920820781">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user's default payout info has STATUS_HIDDEN behaves like user needs reminders" tests="1" time="1.379348893" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor reminding the user to add a payout info when the user's default payout info has STATUS_HIDDEN behaves like user needs reminders sends the user a reminder" time="1.379001784">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info when the user's default payout info has STATUS_HIDDEN" tests="0" time="0.000174769" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor reminding the user to add a payout info" tests="0" time="0.000169979" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for an editable payout info with an info type other than ACH or Envoy" tests="1" time="0.802276946" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor updating verification statuses of payout infos for an editable payout info with an info type other than ACH or Envoy sets status to ready" time="0.801914567">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for an editable payout info with info type ACH" tests="1" time="0.837924653" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor updating verification statuses of payout infos for an editable payout info with info type ACH doesn't change its status" time="0.837570439">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for an editable payout info with info type Envoy when item is not verifiable via deposits" tests="1" time="0.830920864" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor updating verification statuses of payout infos for an editable payout info with info type Envoy when item is not verifiable via deposits sets status to ready" time="0.830549832">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for an editable payout info with info type Envoy when item is verifiable via deposits" tests="1" time="1.33232309" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor updating verification statuses of payout infos for an editable payout info with info type Envoy when item is verifiable via deposits calls #set_status_pending_verification!" time="1.332000616">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for an editable payout info with info type Envoy" tests="0" time="0.000194143" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for an editable payout info" tests="0" time="0.000146438" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info with an info type other than ACH or Envoy" tests="1" time="0.860242104" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info with an info type other than ACH or Envoy doesn't do anything" time="0.859869458">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info with info type ACH when it was set to pending more than 3 weekdays ago" tests="1" time="0.821837418" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info with info type ACH when it was set to pending more than 3 weekdays ago sets status to ready" time="0.821451021">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info with info type ACH when it was set to pending within the last 3 weekdays" tests="1" time="0.801497473" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info with info type ACH when it was set to pending within the last 3 weekdays doesn't change the status" time="0.801169321">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info with info type ACH" tests="0" time="0.000156758" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info with info type Envoy when its status_changed_at timestamp is in the future" tests="1" time="0.849201316" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info with info type Envoy when its status_changed_at timestamp is in the future doesn't create a transient verification" time="0.848781669">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info with info type Envoy when its status changed less than 30 minutes ago" tests="1" time="1.378247657" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info with info type Envoy when its status changed less than 30 minutes ago sends a transient verification payment" time="1.377897566">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info with info type Envoy when its status changed more than 30 minutes ago" tests="1" time="0.79053863" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info with info type Envoy when its status changed more than 30 minutes ago doesn't create a transient verification" time="0.790215441">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info with info type Envoy" tests="0" time="0.00017424" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos for a pending payout info" tests="0" time="0.00052584" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor updating verification statuses of payout infos" tests="0" time="0.000170445" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor when a line item attached to a reservation is ready for release when it doesn't have an indirect error" tests="1" time="2.38029682" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor when a line item attached to a reservation is ready for release when it doesn't have an indirect error leaves its ready_for_release value alone" time="2.379896355">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor when a line item attached to a reservation is ready for release when it has an indirect error" tests="1" time="1.852842288" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor when a line item attached to a reservation is ready for release when it has an indirect error nulls out its ready_for_release value" time="1.85254704">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor when a line item attached to a reservation is ready for release" tests="0" time="0.00016532" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::LineItemsProcessor" tests="2" time="0.798717555" failures="0" errors="0" skipped="0">
  <testcase name="Payments::LineItemsProcessor automatically settles line items" time="0.405272699">
  </testcase>
  <testcase name="Payments::LineItemsProcessor sends masspay payouts for all paypal currencies" time="0.392996358">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::Oanda get_conversion_rates all supported currency codes" tests="1" time="0.385675691" failures="0" errors="0" skipped="0">
  <testcase name="Payments::Oanda get_conversion_rates all supported currency codes should retrieve a full request" time="0.385333806">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::Oanda get_conversion_rates single currency code" tests="1" time="0.420767167" failures="0" errors="0" skipped="0">
  <testcase name="Payments::Oanda get_conversion_rates single currency code should return a single currency entry" time="0.42033687">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::Oanda get_conversion_rates unrecognized currency code" tests="1" time="0.399981292" failures="0" errors="0" skipped="0">
  <testcase name="Payments::Oanda get_conversion_rates unrecognized currency code should return a nil conversion rate" time="0.39966408">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::Oanda get_conversion_rates" tests="0" time="0.000139249" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::Oanda" tests="0" time="0.000202812" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PaymentArrivalEstimator" tests="8" time="6.950951323" failures="0" errors="0" skipped="0">
  <testcase name="Payments::PaymentArrivalEstimator should know about all payout_info types" time="0.42100873">
  </testcase>
  <testcase name="Payments::PaymentArrivalEstimator should estimate given a released paypal line item" time="0.401469806">
  </testcase>
  <testcase name="Payments::PaymentArrivalEstimator should estimate given a released ach line item" time="0.446127067">
  </testcase>
  <testcase name="Payments::PaymentArrivalEstimator should estimate given a released ach line item, add a day after 6pm" time="0.45146997">
  </testcase>
  <testcase name="Payments::PaymentArrivalEstimator should not blow up if the line_item has no payout_info" time="0.432885672">
  </testcase>
  <testcase name="Payments::PaymentArrivalEstimator should estimate given a reservation that has a line item" time="1.896442328">
  </testcase>
  <testcase name="Payments::PaymentArrivalEstimator should estimate given a reservation that does not have line item" time="1.526841537">
  </testcase>
  <testcase name="Payments::PaymentArrivalEstimator should estimate given a reservation with payout splits and no line items" time="1.373198553">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient.get_payee_details error handling" tests="2" time="0.824759837" failures="0" errors="0" skipped="0">
  <testcase name="Payments::PayoneerClient.get_payee_details error handling throws an error if the HTTP request fails" time="0.400955407">
  </testcase>
  <testcase name="Payments::PayoneerClient.get_payee_details error handling throws an error if Payoneer returns an error" time="0.423263889">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient.get_payee_details hitting the actual sandbox API" tests="1" time="0.862023752" failures="0" errors="0" skipped="1">
  <testcase name="Payments::PayoneerClient.get_payee_details hitting the actual sandbox API should succeed (PENDING)" time="0.861715947">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient.get_payee_details successful requests accessors" tests="6" time="2.36078459" failures="0" errors="0" skipped="0">
  <testcase name="Payments::PayoneerClient.get_payee_details successful requests accessors provides a first_name accessor" time="0.37521662">
  </testcase>
  <testcase name="Payments::PayoneerClient.get_payee_details successful requests accessors returns nil for first_name the value is blank" time="0.396774629">
  </testcase>
  <testcase name="Payments::PayoneerClient.get_payee_details successful requests accessors provides a last_name accessor" time="0.399875996">
  </testcase>
  <testcase name="Payments::PayoneerClient.get_payee_details successful requests accessors returns nil for last_name the value is blank" time="0.389842083">
  </testcase>
  <testcase name="Payments::PayoneerClient.get_payee_details successful requests accessors provides a country accessor" time="0.420421697">
  </testcase>
  <testcase name="Payments::PayoneerClient.get_payee_details successful requests accessors returns nil for country the value is blank" time="0.3777023">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient.get_payee_details successful requests" tests="1" time="0.395429055" failures="0" errors="0" skipped="0">
  <testcase name="Payments::PayoneerClient.get_payee_details successful requests returns a useable response" time="0.395068086">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient.get_payee_details" tests="0" time="0.00016762" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient.get_token_xml error handling" tests="2" time="0.766040535" failures="0" errors="0" skipped="0">
  <testcase name="Payments::PayoneerClient.get_token_xml error handling throws an error if the HTTP request fails" time="0.396105741">
  </testcase>
  <testcase name="Payments::PayoneerClient.get_token_xml error handling throws an error if Payoneer returns an error" time="0.369468178">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient.get_token_xml hitting the actual sandbox API" tests="1" time="0.416898687" failures="0" errors="0" skipped="1">
  <testcase name="Payments::PayoneerClient.get_token_xml hitting the actual sandbox API should succeed (PENDING)" time="0.416604651">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient.get_token_xml successful requests dealing with non-roman characters" tests="3" time="1.149562728" failures="0" errors="0" skipped="0">
  <testcase name="Payments::PayoneerClient.get_token_xml successful requests dealing with non-roman characters converts accented characters to their roman equivalents" time="0.390032775">
  </testcase>
  <testcase name="Payments::PayoneerClient.get_token_xml successful requests dealing with non-roman characters blanks out strings it can't completely transliterate" time="0.365735633">
  </testcase>
  <testcase name="Payments::PayoneerClient.get_token_xml successful requests dealing with non-roman characters doesn't mess with fields that don't need to be encoded" time="0.393112182">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient.get_token_xml successful requests setting user data" tests="1" time="0.388768198" failures="0" errors="0" skipped="0">
  <testcase name="Payments::PayoneerClient.get_token_xml successful requests setting user data sends user data to pre-populate the form" time="0.388355534">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient.get_token_xml successful requests" tests="1" time="0.376063572" failures="0" errors="0" skipped="0">
  <testcase name="Payments::PayoneerClient.get_token_xml successful requests returns a useable response" time="0.375777606">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient.get_token_xml" tests="0" time="0.000181843" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient.perform_payout_payment error handling" tests="3" time="2.215433977" failures="0" errors="0" skipped="0">
  <testcase name="Payments::PayoneerClient.perform_payout_payment error handling should fail on HTTP failure" time="1.453520893">
  </testcase>
  <testcase name="Payments::PayoneerClient.perform_payout_payment error handling should throw an error if Payoneer returns an error" time="0.374024892">
  </testcase>
  <testcase name="Payments::PayoneerClient.perform_payout_payment error handling should pass through error codes" time="0.38710013">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient.perform_payout_payment succesful requests" tests="2" time="0.778541409" failures="0" errors="0" skipped="0">
  <testcase name="Payments::PayoneerClient.perform_payout_payment succesful requests returns a useable response" time="0.382267608">
  </testcase>
  <testcase name="Payments::PayoneerClient.perform_payout_payment succesful requests provides a payment id accessor" time="0.395838926">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient.perform_payout_payment" tests="0" time="0.000204271" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::PayoneerClient" tests="0" time="0.000248849" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::Payoneer.signup_url_for" tests="3" time="1.171388029" failures="0" errors="0" skipped="0">
  <testcase name="Payments::Payoneer.signup_url_for returns the token as a string" time="0.404606934">
  </testcase>
  <testcase name="Payments::Payoneer.signup_url_for calls payoneer client with a valid request object" time="0.384090253">
  </testcase>
  <testcase name="Payments::Payoneer.signup_url_for raises an error if the API call fails" time="0.382185157">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::Payoneer.transfer" tests="4" time="1.557301256" failures="0" errors="0" skipped="0">
  <testcase name="Payments::Payoneer.transfer returns a request with payment id on success" time="0.419667811">
  </testcase>
  <testcase name="Payments::Payoneer.transfer raises an error if the API call fails" time="0.381395032">
  </testcase>
  <testcase name="Payments::Payoneer.transfer bubbles other errors" time="0.39017502">
  </testcase>
  <testcase name="Payments::Payoneer.transfer passes through error codes" time="0.365261986">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::Payoneer.update_payout_info_from_payoneer!" tests="5" time="2.499052552" failures="0" errors="0" skipped="0">
  <testcase name="Payments::Payoneer.update_payout_info_from_payoneer! updates ach_account_name from payoneer user details" time="0.388883949">
  </testcase>
  <testcase name="Payments::Payoneer.update_payout_info_from_payoneer! leaves existing ach account name if payoneer details doesn't include a name" time="0.406548023">
  </testcase>
  <testcase name="Payments::Payoneer.update_payout_info_from_payoneer! updates envoy_country with the payee's country if available" time="0.918839652">
  </testcase>
  <testcase name="Payments::Payoneer.update_payout_info_from_payoneer! raises an error if the API call fails" time="0.395562397">
  </testcase>
  <testcase name="Payments::Payoneer.update_payout_info_from_payoneer! bubbles other errors" time="0.388449255">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::Payoneer.valid_ipcn_client? checking IPs" tests="2" time="0.772068341" failures="0" errors="0" skipped="0">
  <testcase name="Payments::Payoneer.valid_ipcn_client? checking IPs returns false if the IP isn't a recognized Payoneer IPCN IP" time="0.376911584">
  </testcase>
  <testcase name="Payments::Payoneer.valid_ipcn_client? checking IPs returns true if the IP is a valid Payoneer IPCN IP" time="0.394746435">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::Payoneer.valid_ipcn_client? checking tokens" tests="2" time="0.759750832" failures="0" errors="0" skipped="0">
  <testcase name="Payments::Payoneer.valid_ipcn_client? checking tokens returns false if the token isn't valid" time="0.364686812">
  </testcase>
  <testcase name="Payments::Payoneer.valid_ipcn_client? checking tokens returns false if the token isn't valid" time="0.39462462">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::Payoneer.valid_ipcn_client?" tests="0" time="0.000167332" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::Payoneer" tests="0" time="0.000206309" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::StuckPayoutsNotifier for an envoy payout that hasn't been paid when the line item was released between 8 and 9 days ago" tests="1" time="1.030358719" failures="0" errors="0" skipped="0">
  <testcase name="Payments::StuckPayoutsNotifier for an envoy payout that hasn't been paid when the line item was released between 8 and 9 days ago sends an admin_alert" time="1.030033534">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::StuckPayoutsNotifier for an envoy payout that hasn't been paid when the line item was released in the last 8 days" tests="1" time="1.091623584" failures="0" errors="0" skipped="0">
  <testcase name="Payments::StuckPayoutsNotifier for an envoy payout that hasn't been paid when the line item was released in the last 8 days doesn't send an admin_alert" time="1.091125578">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::StuckPayoutsNotifier for an envoy payout that hasn't been paid when the line item was released more than 8 days ago" tests="1" time="1.104462423" failures="0" errors="0" skipped="0">
  <testcase name="Payments::StuckPayoutsNotifier for an envoy payout that hasn't been paid when the line item was released more than 8 days ago doesn't send an admin_alert" time="1.104095658">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::StuckPayoutsNotifier for an envoy payout that hasn't been paid" tests="0" time="0.000142616" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::StuckPayoutsNotifier" tests="0" time="0.000208173" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::WesternUnion country to currency mappings" tests="3" time="1.173945897" failures="0" errors="0" skipped="0">
  <testcase name="Payments::WesternUnion country to currency mappings should map to at least one entry" time="0.418472378">
  </testcase>
  <testcase name="Payments::WesternUnion country to currency mappings should contain valid countries" time="0.378274504">
  </testcase>
  <testcase name="Payments::WesternUnion country to currency mappings should contain valid currencies" time="0.376637604">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::WesternUnion Western Union Bounce Back File" tests="3" time="1.73983712" failures="0" errors="0" skipped="0">
  <testcase name="Payments::WesternUnion Western Union Bounce Back File should parse files with a single entry" time="0.450858063">
  </testcase>
  <testcase name="Payments::WesternUnion Western Union Bounce Back File should parse files with multiple entries" time="0.371175827">
  </testcase>
  <testcase name="Payments::WesternUnion Western Union Bounce Back File should not parse files with any malformed entry" time="0.917195428">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Payments::WesternUnion" tests="0" time="0.000202269" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo ACH batching" tests="2" time="6.480880612" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo ACH batching finds unverified ACH payout_infos" time="3.860390858">
  </testcase>
  <testcase name="PayoutInfo ACH batching finds ACH payout_infos associated with a batch" time="2.620041835">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#alert_country_change when user does not have hostings when new payout_info created with different country as hostings" tests="1" time="1.284447619" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo#alert_country_change when user does not have hostings when new payout_info created with different country as hostings does not enqueue for PayoutInfoCountryChangeReview" time="1.284056521">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#alert_country_change when user does not have hostings when new payout_info created with same country as hostings" tests="1" time="1.891972143" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo#alert_country_change when user does not have hostings when new payout_info created with same country as hostings does not enqueue for PayoutInfoCountryChangeReview" time="1.891629725">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#alert_country_change when user does not have hostings when payout_info updated with different country as hostings" tests="1" time="1.31222581" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo#alert_country_change when user does not have hostings when payout_info updated with different country as hostings does not enqueue for PayoutInfoCountryChangeReview" time="1.311823707">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#alert_country_change when user does not have hostings" tests="0" time="0.000198165" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#alert_country_change when user has hostings when new payout_info created with different country as hostings" tests="1" time="0.965841388" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo#alert_country_change when user has hostings when new payout_info created with different country as hostings does enqueue for PayoutInfoCountryChangeReview" time="0.965473594">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#alert_country_change when user has hostings when new payout_info created with same country as hostings" tests="1" time="0.891539339" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo#alert_country_change when user has hostings when new payout_info created with same country as hostings does not enqueue for PayoutInfoCountryChangeReview" time="0.891116762">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#alert_country_change when user has hostings when payout_info updated with different country as hostings" tests="1" time="1.390173648" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo#alert_country_change when user has hostings when payout_info updated with different country as hostings does enqueue for PayoutInfoCountryChangeReview" time="1.389734786">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#alert_country_change when user has hostings" tests="0" time="0.000177747" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#alert_country_change" tests="0" time="0.000180759" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#destroy" tests="2" time="2.000344805" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo#destroy raises an exception" time="0.807750372">
  </testcase>
  <testcase name="PayoutInfo#destroy does not delete the payout_info from the database" time="1.192147479">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo determine country ACH" tests="1" time="0.552373635" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo determine country ACH should return US" time="0.551918942">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo determine country check" tests="2" time="1.028673809" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo determine country check should return check_country" time="0.517706443">
  </testcase>
  <testcase name="PayoutInfo determine country check should return nil if check_country is a blank string" time="0.510460217">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo determine country envoy" tests="2" time="1.060742691" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo determine country envoy should return envoy_country" time="0.532466739">
  </testcase>
  <testcase name="PayoutInfo determine country envoy should return nil if envoy_country is a blank string" time="0.527743594">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo determine country paypal" tests="2" time="1.060726351" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo determine country paypal should return envoy_country" time="0.534408095">
  </testcase>
  <testcase name="PayoutInfo determine country paypal should return nil if envoy_country is a blank string" time="0.525850502">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo determine country" tests="0" time="0.000211341" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo envoy_country_payout_code" tests="2" time="1.999782575" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo envoy_country_payout_code replaces invalid country codes" time="0.865293487">
  </testcase>
  <testcase name="PayoutInfo envoy_country_payout_code passes through valid country codes" time="1.134018003">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#fake_delete!" tests="1" time="0.883193838" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo#fake_delete! sets status to hidden" time="0.88283389">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo payoneer_id" tests="2" time="1.192496008" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo payoneer_id returns a Payoneer id for a Payoneer payout" time="0.661368593">
  </testcase>
  <testcase name="PayoutInfo payoneer_id returns nil for a non Payoneer payout" time="0.530569762">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo Payoneer Payoneer ACH and API behaves like can_add_payoneer?" tests="2" time="1.060329103" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo Payoneer Payoneer ACH and API behaves like can_add_payoneer? should return false when not in a payoneer country" time="0.529532855">
  </testcase>
  <testcase name="PayoutInfo Payoneer Payoneer ACH and API behaves like can_add_payoneer? should return true for in a payoneer country" time="0.530307289">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo Payoneer Payoneer ACH and API" tests="0" time="0.000203788" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo Payoneer Payoneer ACH behaves like can_add_payoneer?" tests="2" time="1.684284904" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo Payoneer Payoneer ACH behaves like can_add_payoneer? should return false when not in a payoneer country" time="0.552096927">
  </testcase>
  <testcase name="PayoutInfo Payoneer Payoneer ACH behaves like can_add_payoneer? should return true for in a payoneer country" time="1.131704305">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo Payoneer Payoneer ACH" tests="0" time="0.00022524" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo Payoneer Payoneer API behaves like can_add_payoneer?" tests="2" time="1.034843898" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo Payoneer Payoneer API behaves like can_add_payoneer? should return false when not in a payoneer country" time="0.521067711">
  </testcase>
  <testcase name="PayoutInfo Payoneer Payoneer API behaves like can_add_payoneer? should return true for in a payoneer country" time="0.513258026">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo Payoneer Payoneer API" tests="0" time="0.000201767" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo Payoneer" tests="0" time="0.000208544" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo.payout_options_for_country ACH" tests="2" time="1.328460887" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo.payout_options_for_country ACH is included when the country is supported" time="0.666664921">
  </testcase>
  <testcase name="PayoutInfo.payout_options_for_country ACH is not included when the country isn't supported" time="0.661232465">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo.payout_options_for_country Charity" tests="2" time="1.33690299" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo.payout_options_for_country Charity is included when the user is allowed to add it" time="0.664178946">
  </testcase>
  <testcase name="PayoutInfo.payout_options_for_country Charity is not included when the country isn't supported" time="0.672222492">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo.payout_options_for_country Check" tests="2" time="1.325667042" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo.payout_options_for_country Check is included when the country is supported" time="0.6713997">
  </testcase>
  <testcase name="PayoutInfo.payout_options_for_country Check is not included when the country isn't supported" time="0.653782187">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo.payout_options_for_country Envoy" tests="3" time="1.968253897" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo.payout_options_for_country Envoy is included when the country is supported as a local route" time="0.659579663">
  </testcase>
  <testcase name="PayoutInfo.payout_options_for_country Envoy is included when the country is supported as a non-local route" time="0.643145449">
  </testcase>
  <testcase name="PayoutInfo.payout_options_for_country Envoy is not included when the country isn't supported" time="0.664946331">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo.payout_options_for_country Payoneer ACH" tests="2" time="1.332243473" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo.payout_options_for_country Payoneer ACH is included when the user is allowed to add it" time="0.664419103">
  </testcase>
  <testcase name="PayoutInfo.payout_options_for_country Payoneer ACH is not included when the user isn't allowed to add it" time="0.667372203">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo.payout_options_for_country Payoneer API" tests="2" time="2.274319837" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo.payout_options_for_country Payoneer API is included when the user is allowed to add it" time="1.017098599">
  </testcase>
  <testcase name="PayoutInfo.payout_options_for_country Payoneer API is not included when the user isn't allowed to add it" time="1.256626696">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo.payout_options_for_country Payoneer" tests="0" time="0.000216266" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo.payout_options_for_country Paypal" tests="2" time="1.300130688" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo.payout_options_for_country Paypal is included when the country is supported" time="0.646370023">
  </testcase>
  <testcase name="PayoutInfo.payout_options_for_country Paypal is not included when the country isn't supported" time="0.653206899">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo.payout_options_for_country Tax Garnishment" tests="2" time="1.321059676" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo.payout_options_for_country Tax Garnishment is included when the user is allowed to add it" time="0.669830656">
  </testcase>
  <testcase name="PayoutInfo.payout_options_for_country Tax Garnishment is not included when the country isn't supported" time="0.650768525">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo.payout_options_for_country Western Union" tests="2" time="1.36680375" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo.payout_options_for_country Western Union is included when the country is supported" time="0.670924286">
  </testcase>
  <testcase name="PayoutInfo.payout_options_for_country Western Union is not included when the country isn't supported" time="0.695345017">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo.payout_options_for_country" tests="1" time="0.667991549" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo.payout_options_for_country returns an array" time="0.667619182">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#review_for_webmoney #set_default_payout! when setting new default" tests="4" time="8.709307099" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo#review_for_webmoney #set_default_payout! when setting new default sets default on specified payout_info" time="2.46275534">
  </testcase>
  <testcase name="PayoutInfo#review_for_webmoney #set_default_payout! when setting new default turns default off of all other ones" time="1.9140498">
  </testcase>
  <testcase name="PayoutInfo#review_for_webmoney #set_default_payout! when setting new default calls fraud review checks" time="2.02348631">
  </testcase>
  <testcase name="PayoutInfo#review_for_webmoney #set_default_payout! when setting new default sends email for change default payout info" time="2.308301923">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#review_for_webmoney #set_default_payout!" tests="0" time="0.000199486" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#review_for_webmoney when creating new payout_info" tests="1" time="1.341711884" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo#review_for_webmoney when creating new payout_info enqueues for WebMoneyReview if info type is WebMoney" time="1.341289167">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#review_for_webmoney when setting new default payout_info" tests="1" time="1.538831148" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo#review_for_webmoney when setting new default payout_info enqueues for WebMoneyReview if info type is WebMoney" time="1.538475931">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo#review_for_webmoney" tests="0" time="0.000210133" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo validation changing user_id before initial save" tests="1" time="0.416068837" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo validation changing user_id before initial save to another user_id is valid" time="0.415691321">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo validation changing user_id" tests="2" time="2.363651638" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo validation changing user_id to an existing user is invalid" time="1.529802682">
  </testcase>
  <testcase name="PayoutInfo validation changing user_id to nil is invalid" time="0.833426531">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo validation for ACH" tests="5" time="4.19169586" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo validation for ACH is valid with a Checking account type" time="0.76631659">
  </testcase>
  <testcase name="PayoutInfo validation for ACH is valid with a Savings account type" time="0.758770882">
  </testcase>
  <testcase name="PayoutInfo validation for ACH is invalid without a valid account type" time="0.767790168">
  </testcase>
  <testcase name="PayoutInfo validation for ACH is invalid with a routing number less than 9 digits" time="0.744751396">
  </testcase>
  <testcase name="PayoutInfo validation for ACH is invalid with a routing number that contains non-numeric characters" time="1.153228013">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo validation for Checks" tests="1" time="1.346919815" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo validation for Checks is invalid without a valid country" time="1.346521924">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo validation for Checks zipcode" tests="2" time="1.585068369" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo validation for Checks zipcode is invalid if it contains a comma" time="0.797466762">
  </testcase>
  <testcase name="PayoutInfo validation for Checks zipcode is invalid if it contains a period" time="0.787076358">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo validation" tests="1" time="0.774903408" failures="0" errors="0" skipped="0">
  <testcase name="PayoutInfo validation is invalid if payout info exceeds max payout amount" time="0.774541532">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutInfo" tests="0" time="0.0002584" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutOptionsPresenter#payout_options" tests="1" time="0.453208071" failures="0" errors="0" skipped="0">
  <testcase name="PayoutOptionsPresenter#payout_options raises an exception if an unsupported info_type is specified" time="0.428181877">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PayoutOptionsPresenter" tests="0" time="0.000241943" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PhoneNumber generating verification code" tests="3" time="3.116949175" failures="0" errors="0" skipped="0">
  <testcase name="PhoneNumber generating verification code should generate a new verification code when verifying a new PhoneNumber" time="0.849445981">
  </testcase>
  <testcase name="PhoneNumber generating verification code should reuse an existing verification code when verifying an existing PhoneNumber" time="1.43685446">
  </testcase>
  <testcase name="PhoneNumber generating verification code should create a new verification code when verifying an existing PhoneNumber that hasn't been updated in an hour" time="0.83002999">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PhoneNumber verification rate limiting" tests="2" time="6.615570839" failures="0" errors="0" skipped="0">
  <testcase name="PhoneNumber verification rate limiting should throw an exception for multiple verifications of the same number root" time="5.050263597">
  </testcase>
  <testcase name="PhoneNumber verification rate limiting should throw an exception for too many verifications per user" time="1.564867903">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PhoneNumber verification statsd calls" tests="4" time="3.346665191" failures="0" errors="0" skipped="0">
  <testcase name="PhoneNumber verification statsd calls should call statsd when attempting to verify" time="0.829436433">
  </testcase>
  <testcase name="PhoneNumber verification statsd calls should NOT call statsd if attempting to verify within an hour of previous attempt" time="0.804743884">
  </testcase>
  <testcase name="PhoneNumber verification statsd calls should call statsd if attempting to verify more than an hour after previous attempt" time="0.833988644">
  </testcase>
  <testcase name="PhoneNumber verification statsd calls should NOT call statsd when manually verifying" time="0.877678901">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PhoneNumber" tests="0" time="0.000236929" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PhotographyController as a logged out user" tests="1" time="0.563556705" failures="0" errors="0" skipped="0">
  <testcase name="PhotographyController as a logged out user should not allow access to photography" time="0.563183354">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PhotographyController as a photographer" tests="6" time="12.162721077" failures="0" errors="0" skipped="0">
  <testcase name="PhotographyController as a photographer should show settings page" time="1.676382927">
  </testcase>
  <testcase name="PhotographyController as a photographer should save photographer location" time="1.711769329">
  </testcase>
  <testcase name="PhotographyController as a photographer should complete a job" time="2.406952327">
  </testcase>
  <testcase name="PhotographyController as a photographer should not complete a job when missing photos" time="1.914070877">
  </testcase>
  <testcase name="PhotographyController as a photographer should complete a job with an upload_code" time="1.890286069">
  </testcase>
  <testcase name="PhotographyController as a photographer should not complete a job for photographers missing tax forms" time="2.56218466">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PhotographyController as a photography admin render views" tests="1" time="1.744646352" failures="0" errors="0" skipped="0">
  <testcase name="PhotographyController as a photography admin render views should download photographers" time="1.744246962">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PhotographyController as a photography admin" tests="1" time="1.386801153" failures="0" errors="0" skipped="0">
  <testcase name="PhotographyController as a photography admin should get photographers" time="1.386406728">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PhotographyController as a visitor" tests="3" time="4.244932795" failures="0" errors="0" skipped="0">
  <testcase name="PhotographyController as a visitor should allow request_photography for one hosting" time="1.552411334">
  </testcase>
  <testcase name="PhotographyController as a visitor should max out on requests" time="1.51443497">
  </testcase>
  <testcase name="PhotographyController as a visitor should allow canceling of ones photography requests" time="1.177343282">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PhotographyController progress" tests="4" time="19.908598359" failures="0" errors="0" skipped="0">
  <testcase name="PhotographyController progress should get pending" time="5.378813424">
  </testcase>
  <testcase name="PhotographyController progress should get accepted" time="5.035203057">
  </testcase>
  <testcase name="PhotographyController progress should get complete" time="4.598304798">
  </testcase>
  <testcase name="PhotographyController progress should get rejected" time="4.895615981">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PhotographyController" tests="0" time="0.00024496" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PhotographyJob get_photography_effectiveness" tests="2" time="16.20116661" failures="0" errors="0" skipped="0">
  <testcase name="PhotographyJob get_photography_effectiveness Should return an appropriate number of responses" time="12.630368526">
  </testcase>
  <testcase name="PhotographyJob get_photography_effectiveness Should return an appropriate number of responses for previous jobs" time="3.570365602">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PhotographyJob PhotographyJob.get_local_photographer" tests="1" time="0.000443778" failures="0" errors="0" skipped="1">
  <testcase name="PhotographyJob PhotographyJob.get_local_photographer should find a nearby photographer (PENDING)" time="0.000191734">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PhotographyJob" tests="0" time="0.000254339" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Picture asset paths for Stories" tests="2" time="0.974186789" failures="0" errors="0" skipped="0">
  <testcase name="Picture asset paths for Stories should generate the correct path if the Story was created before 08/10/11" time="0.604623608">
  </testcase>
  <testcase name="Picture asset paths for Stories should generate the correct path if the Story was created on or after 08/10/11" time="0.369106181">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Picture options for dynamic image resizing" tests="5" time="0.001016752" failures="0" errors="0" skipped="5">
  <testcase name="Picture options for dynamic image resizing should be triggered when a special option is passed to image_url() (PENDING)" time="0.000223963">
    <skipped/>
  </testcase>
  <testcase name="Picture options for dynamic image resizing should convert ImageMagick's 'geometry' parameter to width and height params (PENDING)" time="9.2597e-05">
    <skipped/>
  </testcase>
  <testcase name="Picture options for dynamic image resizing should convert ImageMagick's 'format' paramter to a format param (PENDING)" time="8.1796e-05">
    <skipped/>
  </testcase>
  <testcase name="Picture options for dynamic image resizing should combine several parameters properly (PENDING)" time="7.6396e-05">
    <skipped/>
  </testcase>
  <testcase name="Picture options for dynamic image resizing should generate the correct path to the EIM endpoint (PENDING)" time="7.6934e-05">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Picture" tests="5" time="13.931895964" failures="0" errors="0" skipped="0">
  <testcase name="Picture should generate a correct full path" time="4.189496269">
  </testcase>
  <testcase name="Picture should generate the correct path if the associated model is a User" time="0.762129132">
  </testcase>
  <testcase name="Picture should generate the correct path if the associated model is a Hosting" time="4.459968389">
  </testcase>
  <testcase name="Picture should generate the correct file names for various sizing params" time="0.774081607">
  </testcase>
  <testcase name="Picture should perform validation when converting picturable_type strings to classes" time="3.745445718">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PlaceRecommendation saving its distance from hosting" tests="1" time="2.580817402" failures="0" errors="0" skipped="0">
  <testcase name="PlaceRecommendation saving its distance from hosting should calculate and save its distance from hosting in miles on creation" time="2.580439801">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PlaceRecommendationsController create when supplied with params[:api_id]" tests="2" time="1.885078796" failures="0" errors="0" skipped="0">
  <testcase name="PlaceRecommendationsController create when supplied with params[:api_id] should save a new Place from Google Client if Place does not exist" time="0.96203811">
  </testcase>
  <testcase name="PlaceRecommendationsController create when supplied with params[:api_id] should return { success : true } if place_recommendation params are valid and place exists" time="0.922536416">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PlaceRecommendationsController create when supplied with user-supplied place data in params[:place]" tests="3" time="3.216037619" failures="0" errors="0" skipped="0">
  <testcase name="PlaceRecommendationsController create when supplied with user-supplied place data in params[:place] should save a new place with attributes" time="0.901445557">
  </testcase>
  <testcase name="PlaceRecommendationsController create when supplied with user-supplied place data in params[:place] should associate new recommendation with new place" time="1.380030969">
  </testcase>
  <testcase name="PlaceRecommendationsController create when supplied with user-supplied place data in params[:place] should return { success : true } if place_recommendation params are valid and place exists" time="0.933931565">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PlaceRecommendationsController create" tests="4" time="4.941441326" failures="0" errors="0" skipped="0">
  <testcase name="PlaceRecommendationsController create should render nothing unless request is XHR" time="0.922505778">
  </testcase>
  <testcase name="PlaceRecommendationsController create should return { success : false } if hosting is not found" time="0.902126104">
  </testcase>
  <testcase name="PlaceRecommendationsController create should return { success : false } if current user does not match hosting owner" time="1.815879302">
  </testcase>
  <testcase name="PlaceRecommendationsController create should return { success : false } if no place is specified" time="1.300329849">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PlaceRecommendationsController destroy" tests="4" time="4.346820254" failures="0" errors="0" skipped="0">
  <testcase name="PlaceRecommendationsController destroy should render nothing unless request is XHR" time="0.921029461">
  </testcase>
  <testcase name="PlaceRecommendationsController destroy should render { success : false } if recommendation is not found" time="1.163132458">
  </testcase>
  <testcase name="PlaceRecommendationsController destroy should return { success : false } if current user does not match hosting owner" time="1.366201104">
  </testcase>
  <testcase name="PlaceRecommendationsController destroy should set deleted_at on recommendation and return { success :true } if successful" time="0.895572117">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PlaceRecommendationsController update" tests="6" time="6.363053115" failures="0" errors="0" skipped="0">
  <testcase name="PlaceRecommendationsController update should render nothing unless request is XHR" time="0.874692469">
  </testcase>
  <testcase name="PlaceRecommendationsController update should render { success : false } if recommendation is not found" time="0.936482277">
  </testcase>
  <testcase name="PlaceRecommendationsController update should return { success : false } if current user does not match recommendation hosting owner" time="1.347180127">
  </testcase>
  <testcase name="PlaceRecommendationsController update should render { success : false } if recommendation cannot be updated" time="0.909468025">
  </testcase>
  <testcase name="PlaceRecommendationsController update should update recommendation fields when successful" time="1.365298686">
  </testcase>
  <testcase name="PlaceRecommendationsController update should return success : true when successful" time="0.928920833">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PlaceRecommendationsController" tests="0" time="0.000228032" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PlaceRecommendation updating hosting's counter cache" tests="2" time="6.633864976" failures="0" errors="0" skipped="0">
  <testcase name="PlaceRecommendation updating hosting's counter cache should update hosting.place_recommendations_count after save" time="4.358489054">
  </testcase>
  <testcase name="PlaceRecommendation updating hosting's counter cache should not count a deleted recommendation" time="2.274877761">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PlaceRecommendation validating uniqueness of recommendations" tests="2" time="5.349564976" failures="0" errors="0" skipped="0">
  <testcase name="PlaceRecommendation validating uniqueness of recommendations should not allow duplicate recommendation for the same hosting/place" time="3.941027004">
  </testcase>
  <testcase name="PlaceRecommendation validating uniqueness of recommendations should allow same recommendation for place if old recommendation is deleted" time="1.407917131">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PlaceRecommendation" tests="0" time="0.000236994" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Press::Content#notify_of_new_logo!" tests="1" time="0.42492297" failures="0" errors="0" skipped="0">
  <testcase name="Press::Content#notify_of_new_logo! should email 'production@airbnb.com'" time="0.424537923">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Press::Content.search" tests="4" time="2.073499078" failures="0" errors="0" skipped="0">
  <testcase name="Press::Content.search should return results matching the query" time="0.625794239">
  </testcase>
  <testcase name="Press::Content.search should support the :content_type option" time="0.475207307">
  </testcase>
  <testcase name="Press::Content.search should support :exclude_locale option" time="0.486024029">
  </testcase>
  <testcase name="Press::Content.search should support the :content_type and :exclude_locale options together" time="0.485778959">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Press::Content#should_notify_of_new_logo?" tests="3" time="1.723885154" failures="0" errors="0" skipped="0">
  <testcase name="Press::Content#should_notify_of_new_logo? should be true if asset is equal to ASSET_NEEDS_LOGO" time="0.478851425">
  </testcase>
  <testcase name="Press::Content#should_notify_of_new_logo? should be false if asset is blank" time="0.818536567">
  </testcase>
  <testcase name="Press::Content#should_notify_of_new_logo? should be false if asset is real value" time="0.425868614">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Press::Content#update_content validation" tests="2" time="0.89342785" failures="0" errors="0" skipped="0">
  <testcase name="Press::Content#update_content validation should raise ValidationError if record is invalid" time="0.439870603">
  </testcase>
  <testcase name="Press::Content#update_content validation should not raise a ValidationError if record is valid" time="0.453068218">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Press::Content#update_content" tests="0" time="0.000243551" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Press::Content validations linked_article" tests="4" time="1.842592252" failures="0" errors="0" skipped="0">
  <testcase name="Press::Content validations linked_article should require title" time="0.445182048">
  </testcase>
  <testcase name="Press::Content validations linked_article should require link" time="0.44593859">
  </testcase>
  <testcase name="Press::Content validations linked_article should require published_at" time="0.455298461">
  </testcase>
  <testcase name="Press::Content validations linked_article should require asset" time="0.495342834">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Press::Content validations press_release" tests="6" time="3.144887637" failures="0" errors="0" skipped="0">
  <testcase name="Press::Content validations press_release should require title" time="0.865876891">
  </testcase>
  <testcase name="Press::Content validations press_release should require slug to be present" time="0.427908268">
  </testcase>
  <testcase name="Press::Content validations press_release should require slug to be unique" time="0.475060403">
  </testcase>
  <testcase name="Press::Content validations press_release should require published_at" time="0.44731471">
  </testcase>
  <testcase name="Press::Content validations press_release should fail if content is not meaningful HTML" time="0.459329531">
  </testcase>
  <testcase name="Press::Content validations press_release should pass if content is meaningful HTML" time="0.468460975">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Press::Content validations" tests="0" time="0.000255263" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Press::Content" tests="0" time="0.000323762" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.get_host_vat_info" tests="3" time="1.235842802" failures="0" errors="0" skipped="0">
  <testcase name="Pricing::Rules.get_host_vat_info correctly apply a fee percentage and VAT" time="0.413313919">
  </testcase>
  <testcase name="Pricing::Rules.get_host_vat_info correctly apply a fee percentage and NO VAT" time="0.423763799">
  </testcase>
  <testcase name="Pricing::Rules.get_host_vat_info correctly apply NO fee percentage and NO VAT" time="0.398219591">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.get_pretax_host_fee" tests="2" time="0.816160637" failures="0" errors="0" skipped="0">
  <testcase name="Pricing::Rules.get_pretax_host_fee correctly apply a fee percentage" time="0.403688707">
  </testcase>
  <testcase name="Pricing::Rules.get_pretax_host_fee correctly apply NO fee percentage" time="0.412050638">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.get_vat_info no vat_rate high price" tests="2" time="0.792817424" failures="0" errors="0" skipped="0">
  <testcase name="Pricing::Rules.get_vat_info no vat_rate high price calculates no vat" time="0.410505027">
  </testcase>
  <testcase name="Pricing::Rules.get_vat_info no vat_rate high price is unaffected by currency_spread" time="0.38182136">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.get_vat_info no vat_rate low price" tests="2" time="1.338241559" failures="0" errors="0" skipped="0">
  <testcase name="Pricing::Rules.get_vat_info no vat_rate low price calculates no vat" time="0.936681426">
  </testcase>
  <testcase name="Pricing::Rules.get_vat_info no vat_rate low price is unaffected by currency_spread" time="0.40113601">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.get_vat_info no vat_rate medium price" tests="2" time="0.782701301" failures="0" errors="0" skipped="0">
  <testcase name="Pricing::Rules.get_vat_info no vat_rate medium price calculates no vat" time="0.392125096">
  </testcase>
  <testcase name="Pricing::Rules.get_vat_info no vat_rate medium price is unaffected by currency_spread" time="0.390125925">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.get_vat_info no vat_rate" tests="0" time="0.000174671" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.get_vat_info with vat_rate fx_spread applies high price" tests="1" time="0.721465559" failures="0" errors="0" skipped="0">
  <testcase name="Pricing::Rules.get_vat_info with vat_rate fx_spread applies high price increases the fee by the spread for high price" time="0.721063894">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.get_vat_info with vat_rate fx_spread applies low price" tests="1" time="0.411522529" failures="0" errors="0" skipped="0">
  <testcase name="Pricing::Rules.get_vat_info with vat_rate fx_spread applies low price increases the fee by the spread" time="0.411145609">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.get_vat_info with vat_rate fx_spread applies medium price" tests="1" time="0.396467343" failures="0" errors="0" skipped="0">
  <testcase name="Pricing::Rules.get_vat_info with vat_rate fx_spread applies medium price increases the fee by the spread" time="0.396097104">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.get_vat_info with vat_rate fx_spread applies" tests="1" time="0.446939026" failures="0" errors="0" skipped="0">
  <testcase name="Pricing::Rules.get_vat_info with vat_rate fx_spread applies fees should be higher when currency_spread applies do" time="0.44661586">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.get_vat_info with vat_rate fx_spread applies zero fee" tests="1" time="0.398671467" failures="0" errors="0" skipped="0">
  <testcase name="Pricing::Rules.get_vat_info with vat_rate fx_spread applies zero fee returns correct revenue if fee is zero" time="0.398315659">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.get_vat_info with vat_rate" tests="2" time="0.796390084" failures="0" errors="0" skipped="0">
  <testcase name="Pricing::Rules.get_vat_info with vat_rate calculates proper vat info round down" time="0.400441052">
  </testcase>
  <testcase name="Pricing::Rules.get_vat_info with vat_rate calculates proper vat info round up" time="0.395497821">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.get_vat_info" tests="0" time="0.000144045" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.vat_remittance_cents_from_total_fee no VAT" tests="1" time="0.397525252" failures="0" errors="0" skipped="0">
  <testcase name="Pricing::Rules.vat_remittance_cents_from_total_fee no VAT returns 0 for vat_rate of 0" time="0.397192016">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.vat_remittance_cents_from_total_fee without FX" tests="1" time="0.418496894" failures="0" errors="0" skipped="0">
  <testcase name="Pricing::Rules.vat_remittance_cents_from_total_fee without FX returns vat remittance not including FX" time="0.418121417">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.vat_remittance_cents_from_total_fee with VAT and FX" tests="1" time="0.401056296" failures="0" errors="0" skipped="0">
  <testcase name="Pricing::Rules.vat_remittance_cents_from_total_fee with VAT and FX returns vat remittance including FX" time="0.400616344">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules.vat_remittance_cents_from_total_fee" tests="0" time="0.000168333" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Pricing::Rules" tests="0" time="0.000256068" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Promo can reward" tests="5" time="10.9516376" failures="0" errors="0" skipped="0">
  <testcase name="Promo can reward should reward valid bonus credits" time="3.05800097">
  </testcase>
  <testcase name="Promo can reward should not reward invalid bonus credits" time="1.976666153">
  </testcase>
  <testcase name="Promo can reward should reward percent credits" time="1.638601176">
  </testcase>
  <testcase name="Promo can reward should not reward invalid percent credits" time="1.989539502">
  </testcase>
  <testcase name="Promo can reward should not reward invalid promos" time="2.287997673">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Promo describe error reasons" tests="2" time="6.831822802" failures="0" errors="0" skipped="0">
  <testcase name="Promo describe error reasons should handle positive cases" time="4.304652042">
  </testcase>
  <testcase name="Promo describe error reasons should handle negative cases" time="2.526709297">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Promo.describe_reward bonus_credit" tests="1" time="1.137280251" failures="0" errors="0" skipped="0">
  <testcase name="Promo.describe_reward bonus_credit returns a string containing param2" time="1.136906873">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Promo.describe_reward no promo" tests="1" time="0.403726142" failures="0" errors="0" skipped="0">
  <testcase name="Promo.describe_reward no promo returns a non-nil string" time="0.403327428">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Promo.describe_reward percent_credit_promo" tests="1" time="1.113408548" failures="0" errors="0" skipped="0">
  <testcase name="Promo.describe_reward percent_credit_promo returns a string containing param2" time="1.113033328">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Promo.describe_reward" tests="0" time="0.000210339" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Promo issue reward" tests="4" time="9.923347134" failures="0" errors="0" skipped="0">
  <testcase name="Promo issue reward should work for valid bonus credits" time="2.27843444">
  </testcase>
  <testcase name="Promo issue reward should not work for invalid bonus credits" time="2.07895354">
  </testcase>
  <testcase name="Promo issue reward should work for valid percent credits" time="3.210817876">
  </testcase>
  <testcase name="Promo issue reward should not work for invalid percent credits" time="2.35424041">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Promo validations" tests="6" time="17.207493929" failures="0" errors="0" skipped="0">
  <testcase name="Promo validations should not create invalid promos" time="1.117387601">
  </testcase>
  <testcase name="Promo validations should create valid bonus credits" time="3.607347602">
  </testcase>
  <testcase name="Promo validations should not create invalid bonus credits" time="3.909707049">
  </testcase>
  <testcase name="Promo validations should create valid percent credits" time="3.529207403">
  </testcase>
  <testcase name="Promo validations should not create invalid percent credits" time="3.912449068">
  </testcase>
  <testcase name="Promo validations should always have all-cap codes" time="1.130417222">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Promo" tests="0" time="0.000274912" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PushNotificationJob PushNotificationJob.perform" tests="1" time="1.323381885" failures="0" errors="0" skipped="0">
  <testcase name="PushNotificationJob PushNotificationJob.perform should call deliver_async" time="1.323029873">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PushNotificationJob" tests="0" time="0.000761711" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PushNotification PushNotification.deliver_async" tests="3" time="3.45802607" failures="0" errors="0" skipped="0">
  <testcase name="PushNotification PushNotification.deliver_async should send a push notification to iPhone with correct device_type and token" time="1.139897096">
  </testcase>
  <testcase name="PushNotification PushNotification.deliver_async should send a push notification to Android with correct device_type and token" time="1.143363323">
  </testcase>
  <testcase name="PushNotification PushNotification.deliver_async should render the message correctly" time="1.174113373">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PushNotification PushNotification.deliver" tests="2" time="3.01100467" failures="0" errors="0" skipped="0">
  <testcase name="PushNotification PushNotification.deliver should create a new PushNotification" time="1.786923735">
  </testcase>
  <testcase name="PushNotification PushNotification.deliver should send a push notification to iPhone with correct device_type and token" time="1.223550671">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PushNotification" tests="0" time="0.000241476" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post AirMatch catch-and-release" tests="4" time="8.444631218" failures="0" errors="0" skipped="0">
  <testcase name="Question2Post AirMatch catch-and-release should catch any message sent with a mobile template and not send notifications" time="1.854595632">
  </testcase>
  <testcase name="Question2Post AirMatch catch-and-release should release message marked as more_info, send mail, and mark request as visible to guest" time="2.295631952">
  </testcase>
  <testcase name="Question2Post AirMatch catch-and-release should NOT release message marked as unavailable, should not send mail, should decline request, and not mark request as visible to guest" time="2.344234515">
  </testcase>
  <testcase name="Question2Post AirMatch catch-and-release should NOT catch an inquiry manually sent by the guest to the host after AirMatch" time="1.949442395">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post inquiry post detection .inquiry_post?" tests="1" time="1.45382563" failures="0" errors="0" skipped="0">
  <testcase name="Question2Post inquiry post detection .inquiry_post? should return true given characteristics of an inquiry post" time="1.453445518">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post inquiry post detection" tests="0" time="0.000287912" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post reply via email" tests="3" time="4.696449865" failures="0" errors="0" skipped="1">
  <testcase name="Question2Post reply via email should have the necessary preconditions for the test which follows" time="1.355636193">
  </testcase>
  <testcase name="Question2Post reply via email should send an email with a valid reply-to address (PENDING)" time="2.057063238">
    <skipped/>
  </testcase>
  <testcase name="Question2Post reply via email should not send an email if ghost is involved" time="1.28317996">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post#should_show_safety_tip?" tests="5" time="13.746688115" failures="0" errors="0" skipped="0">
  <testcase name="Question2Post#should_show_safety_tip? should return true if a post has a new message review?" time="2.187545987">
  </testcase>
  <testcase name="Question2Post#should_show_safety_tip? should return false if a post doesn't have a message review" time="2.818024571">
  </testcase>
  <testcase name="Question2Post#should_show_safety_tip? should return false if a post has an approved message review" time="3.30659605">
  </testcase>
  <testcase name="Question2Post#should_show_safety_tip? should return true if a user has less than 6 threads" time="2.628875403">
  </testcase>
  <testcase name="Question2Post#should_show_safety_tip? should return false if a user has more than 5 threads" time="2.804736469">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post smart_review" tests="3" time="1.180208646" failures="0" errors="0" skipped="0">
  <testcase name="Question2Post smart_review should mark :more_info if message is a variation of 'it is available'" time="0.37434116">
  </testcase>
  <testcase name="Question2Post smart_review should mark :unavailable if message is a variation of 'it is not available'" time="0.373916644">
  </testcase>
  <testcase name="Question2Post smart_review should not mark if message is ambiguous" time="0.431391078">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post templated_message_copy for offers" tests="1" time="1.577717542" failures="0" errors="0" skipped="0">
  <testcase name="Question2Post templated_message_copy for offers should render the correct template copy (default English)" time="1.577322469">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post#templated_message_copy" tests="3" time="5.699913294" failures="0" errors="0" skipped="0">
  <testcase name="Question2Post#templated_message_copy should work fine with missing recipient_locale" time="2.491566839">
  </testcase>
  <testcase name="Question2Post#templated_message_copy should work fine with recipient_locale not missing" time="1.607668474">
  </testcase>
  <testcase name="Question2Post#templated_message_copy should work fine with recipient_locale not missing, and as a string" time="1.600036447">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post templates &amp;&amp; available?, unavailable?, more_info?" tests="3" time="6.825303877" failures="0" errors="0" skipped="0">
  <testcase name="Question2Post templates &amp;&amp; available?, unavailable?, more_info? should mark posts with available template as available" time="2.271971569">
  </testcase>
  <testcase name="Question2Post templates &amp;&amp; available?, unavailable?, more_info? should mark posts with unavailable template as unavailable" time="2.808363824">
  </testcase>
  <testcase name="Question2Post templates &amp;&amp; available?, unavailable?, more_info? should mark posts with unavailable template as unavailable" time="1.744409888">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post unarchive_thread" tests="1" time="1.183281965" failures="0" errors="0" skipped="0">
  <testcase name="Question2Post unarchive_thread should unarchive thread when creating a new post" time="1.182902037">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post#update_air_match_request_status" tests="5" time="8.571990572" failures="0" errors="0" skipped="1">
  <testcase name="Question2Post#update_air_match_request_status should mark the linked AirMatchRequest as accepted if the thread only contains the inquiry post and a positive host response" time="1.991531861">
  </testcase>
  <testcase name="Question2Post#update_air_match_request_status should mark the linked AirMatchRequest as ignored if the thread only contains the inquiry post and a negative host response" time="2.15642305">
  </testcase>
  <testcase name="Question2Post#update_air_match_request_status should change the linked AirMatchRequest to responded if the thread only contains the inquiry post and a host response of maybe" time="2.56267954">
  </testcase>
  <testcase name="Question2Post#update_air_match_request_status should mark the host's first reply, even if the guest manually messaged the host first" time="1.860447941">
  </testcase>
  <testcase name="Question2Post#update_air_match_request_status should not affect an old AirMatchRequest in a reused thread (PENDING)" time="0.000128284">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post#update_thread" tests="5" time="7.517148619" failures="0" errors="0" skipped="0">
  <testcase name="Question2Post#update_thread should not set the reply timestamp when only one user has posted" time="1.305154268">
  </testcase>
  <testcase name="Question2Post#update_thread should set the first reply timestamp when user1 is the host" time="1.95590589">
  </testcase>
  <testcase name="Question2Post#update_thread should set the first reply timestamp when user1 is the guest" time="1.402774497">
  </testcase>
  <testcase name="Question2Post#update_thread should set the first reply timestamp when the host replies to an inquiry reservation (without a post)" time="1.395528455">
  </testcase>
  <testcase name="Question2Post#update_thread should set the first reply timestamp when the host replies to an inquiry reservation (with a post)" time="1.457024821">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post#visible? with a normal Question2Post" tests="1" time="1.358064357" failures="0" errors="0" skipped="0">
  <testcase name="Question2Post#visible? with a normal Question2Post should return true" time="1.357625551">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post#visible? with rescinded special offer template" tests="2" time="2.721298138" failures="0" errors="0" skipped="0">
  <testcase name="Question2Post#visible? with rescinded special offer template should return false if post's text is blank" time="1.33556867">
  </testcase>
  <testcase name="Question2Post#visible? with rescinded special offer template should return true if post's text is present" time="1.385129701">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post#visible?" tests="0" time="0.000198555" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Post" tests="0" time="0.000541834" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Thread booked_elsewhere" tests="7" time="15.537068433" failures="0" errors="0" skipped="0">
  <testcase name="Question2Thread booked_elsewhere should know it has been booked elsewhere once it has been marked such" time="2.05887257">
  </testcase>
  <testcase name="Question2Thread booked_elsewhere should no longer be booked elsewhere if the guest sends another message afterward, but should if the host sends a normal message" time="2.516568993">
  </testcase>
  <testcase name="Question2Thread booked_elsewhere should no longer be booked elsewhere if host extends special offer afterward" time="2.185152429">
  </testcase>
  <testcase name="Question2Thread booked_elsewhere should no longer be booked elsewhere if host extends preapproval afterward" time="1.985090471">
  </testcase>
  <testcase name="Question2Thread booked_elsewhere should no longer be booked elsewhere if the guest has a reservation created afterward" time="2.638395752">
  </testcase>
  <testcase name="Question2Thread booked_elsewhere should return the status of thread_closed once marked such" time="1.961359329">
  </testcase>
  <testcase name="Question2Thread booked_elsewhere should use the default message if param is empty string" time="2.190434933">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Thread column_name_for_user" tests="4" time="6.703880385" failures="0" errors="0" skipped="0">
  <testcase name="Question2Thread column_name_for_user should find either user by user model" time="1.52940625">
  </testcase>
  <testcase name="Question2Thread column_name_for_user should find either user by user id" time="1.526905891">
  </testcase>
  <testcase name="Question2Thread column_name_for_user should return nil if user not found" time="2.012657355">
  </testcase>
  <testcase name="Question2Thread column_name_for_user should return raise exception user not found" time="1.634222324">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Thread db related specs" tests="2" time="1.18110846" failures="0" errors="0" skipped="0">
  <testcase name="Question2Thread db related specs should use master db when doing get or create via get_thread!" time="0.751780201">
  </testcase>
  <testcase name="Question2Thread db related specs should not use master db when doing get via get_thread" time="0.428788198">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Thread has_special_offer?" tests="6" time="11.105987585" failures="0" errors="0" skipped="0">
  <testcase name="Question2Thread has_special_offer? should return false for empty thread" time="1.364556722">
  </testcase>
  <testcase name="Question2Thread has_special_offer? should return true if there is a linked SpecialOffer and no post" time="1.361598011">
  </testcase>
  <testcase name="Question2Thread has_special_offer? should return true if there is a linked SpecialOffer and there's no post templated as PREAPPROVE" time="1.751717033">
  </testcase>
  <testcase name="Question2Thread has_special_offer? should return false if there is a linked SpecialOffer but there a post templated as PREAPPROVE" time="1.922656571">
  </testcase>
  <testcase name="Question2Thread has_special_offer? should return false if there is a post templated as OFFER and no linked SpecialOffer" time="2.450147506">
  </testcase>
  <testcase name="Question2Thread has_special_offer? should return true if there is a post templated as OFFER and a linked SpecialOffer" time="2.254356994">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Thread in order?" tests="1" time="2.471309438" failures="0" errors="0" skipped="0">
  <testcase name="Question2Thread in order? should return messages in order of newest to oldest" time="2.47094512">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Thread inquiry_in_future" tests="8" time="13.771167256" failures="0" errors="0" skipped="0">
  <testcase name="Question2Thread inquiry_in_future should return true if the reservation is in the future" time="1.861688157">
  </testcase>
  <testcase name="Question2Thread inquiry_in_future should return thread if not ghost" time="1.290260279">
  </testcase>
  <testcase name="Question2Thread inquiry_in_future should return thread if only one ghost" time="2.032265286">
  </testcase>
  <testcase name="Question2Thread inquiry_in_future should not return thread if both ghost" time="1.841698316">
  </testcase>
  <testcase name="Question2Thread inquiry_in_future should return false if the reservation is in the past" time="1.745123553">
  </testcase>
  <testcase name="Question2Thread inquiry_in_future should return true if the inquiry is in the future" time="1.990965166">
  </testcase>
  <testcase name="Question2Thread inquiry_in_future should return false if the inquiry is in the future" time="1.436657185">
  </testcase>
  <testcase name="Question2Thread inquiry_in_future should return false if the reservation and inquiry are nil (not raise an error)" time="1.571434637">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Thread inquiry_post" tests="4" time="9.57781865" failures="0" errors="0" skipped="0">
  <testcase name="Question2Thread inquiry_post should return nil if there are no posts" time="1.696346336">
  </testcase>
  <testcase name="Question2Thread inquiry_post should return nil if there are no inquiry posts" time="1.975248447">
  </testcase>
  <testcase name="Question2Thread inquiry_post should return the inquiry post if it exists" time="1.743484509">
  </testcase>
  <testcase name="Question2Thread inquiry_post should always return the most recently created inquiry post" time="4.162000572">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Thread#is_blocked_for_user?" tests="4" time="0.01159236" failures="0" errors="0" skipped="4">
  <testcase name="Question2Thread#is_blocked_for_user? should be false for unrelated user (PENDING)" time="0.000362575">
    <skipped/>
  </testcase>
  <testcase name="Question2Thread#is_blocked_for_user? should be false for nil user (PENDING)" time="0.000337214">
    <skipped/>
  </testcase>
  <testcase name="Question2Thread#is_blocked_for_user? should be true for blocked user (PENDING)" time="0.01005941">
    <skipped/>
  </testcase>
  <testcase name="Question2Thread#is_blocked_for_user? should be false for blocking user (PENDING)" time="0.000172031">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Thread is_declined?" tests="6" time="17.204757993" failures="0" errors="0" skipped="0">
  <testcase name="Question2Thread is_declined? should be false for a fresh inquiry" time="1.999719467">
  </testcase>
  <testcase name="Question2Thread is_declined? should be false for a preapproval" time="2.989752653">
  </testcase>
  <testcase name="Question2Thread is_declined? should be true for a decline in constrained messaging" time="1.99119947">
  </testcase>
  <testcase name="Question2Thread is_declined? should be false for a pending reservation" time="3.321556622">
  </testcase>
  <testcase name="Question2Thread is_declined? should be false for an accepted reservation" time="3.765134723">
  </testcase>
  <testcase name="Question2Thread is_declined? should be true for a declined reservation" time="3.136519124">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Thread mark_as_read!" tests="2" time="2.79989683" failures="0" errors="0" skipped="0">
  <testcase name="Question2Thread mark_as_read! should properly update read counter when host and guest are different" time="1.525218028">
  </testcase>
  <testcase name="Question2Thread mark_as_read! should properly update read counter when host and guest are the same" time="1.274137613">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Thread scopes" tests="12" time="29.186039911" failures="0" errors="0" skipped="0">
  <testcase name="Question2Thread scopes should set thread visibility for guest" time="2.677467047">
  </testcase>
  <testcase name="Question2Thread scopes should show airmatch requests for both host and guest if there is more than one post" time="2.952054987">
  </testcase>
  <testcase name="Question2Thread scopes should include airmatch requests in starred only for host" time="1.935400167">
  </testcase>
  <testcase name="Question2Thread scopes should include airmatch requests in not_starred only for host" time="2.277246033">
  </testcase>
  <testcase name="Question2Thread scopes should include airmatch requests in hidden only for host" time="2.085141242">
  </testcase>
  <testcase name="Question2Thread scopes should include airmatch requests in not_hidden only for host" time="2.862037693">
  </testcase>
  <testcase name="Question2Thread scopes should include airmatch requests in unread only for host" time="1.927862053">
  </testcase>
  <testcase name="Question2Thread scopes should include airmatch requests in reservations for both host and guest" time="3.294123164">
  </testcase>
  <testcase name="Question2Thread scopes should include airmatch requests in includes_user only for host" time="2.35601252">
  </testcase>
  <testcase name="Question2Thread scopes should include airmatch requests in never_responded only for host" time="2.474514684">
  </testcase>
  <testcase name="Question2Thread scopes should include airmatch requests in without_ghosts only for host" time="2.261531218">
  </testcase>
  <testcase name="Question2Thread scopes should allow get_thread to exclude airmatch request posts" time="2.080868698">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Thread toggle_archived" tests="3" time="4.420125894" failures="0" errors="0" skipped="0">
  <testcase name="Question2Thread toggle_archived should flip the value of archived" time="1.583267713">
  </testcase>
  <testcase name="Question2Thread toggle_archived should set archived to false" time="1.664776377">
  </testcase>
  <testcase name="Question2Thread toggle_archived should set archived to true" time="1.171421707">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Question2Thread" tests="0" time="0.000254408" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="QueuedReview" tests="3" time="4.920561438" failures="0" errors="0" skipped="0">
  <testcase name="QueuedReview should store hash as json into other_info" time="1.474909488">
  </testcase>
  <testcase name="QueuedReview should return error hash on malformed data in other_info" time="1.948132587">
  </testcase>
  <testcase name="QueuedReview should store a passed in json in other_info is passed a json instead of a hash" time="1.496906946">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RackAttack blacklist" tests="8" time="3.108535562" failures="0" errors="0" skipped="0">
  <testcase name="RackAttack blacklist should be activated only after the threshold is crossed" time="0.376494136">
  </testcase>
  <testcase name="RackAttack blacklist should be disabled when the disabled key is set" time="0.392242087">
  </testcase>
  <testcase name="RackAttack blacklist should not blacklist a member of the whitelist" time="0.369036134">
  </testcase>
  <testcase name="RackAttack blacklist should remove a whitelisted member from the blacklist" time="0.40178589">
  </testcase>
  <testcase name="RackAttack blacklist should expire the blacklist appropriately" time="0.388702082">
  </testcase>
  <testcase name="RackAttack blacklist should throw the ip in the blacklist set" time="0.397637634">
  </testcase>
  <testcase name="RackAttack blacklist should not blacklist visits to multiple pages" time="0.411849732">
  </testcase>
  <testcase name="RackAttack blacklist should remove members of the blacklist when disabled" time="0.369771841">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RackAttack" tests="0" time="0.000426924" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/spec/lib/rack_attack_spec.rb:37: warning: already initialized constant SAMPLING_RATE
/home/lt3/airbnb/spec/lib/rack_attack_spec.rb:38: warning: already initialized constant SAMPLING_LIMIT
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RailsGoogleV3Geocoder.geocode" tests="10" time="4.461512649" failures="0" errors="0" skipped="0">
  <testcase name="RailsGoogleV3Geocoder.geocode returns a lat/lng for a known location" time="0.386619625">
  </testcase>
  <testcase name="RailsGoogleV3Geocoder.geocode returns a cached value when a request is done twice" time="0.395013757">
  </testcase>
  <testcase name="RailsGoogleV3Geocoder.geocode returns a cached value for a double request of a non-Latin name" time="0.375081464">
  </testcase>
  <testcase name="RailsGoogleV3Geocoder.geocode does not clash cache keys for similar, non-Latin names" time="0.410461047">
  </testcase>
  <testcase name="RailsGoogleV3Geocoder.geocode uses the same response for addresses differing only in case" time="0.371586022">
  </testcase>
  <testcase name="RailsGoogleV3Geocoder.geocode uses the same response for Russian addresses differing only in case" time="0.941325509">
  </testcase>
  <testcase name="RailsGoogleV3Geocoder.geocode uses the same response for addresses with numbers, differing only in case" time="0.39622432">
  </testcase>
  <testcase name="RailsGoogleV3Geocoder.geocode does not return cached results for queries differing in numbers" time="0.389706848">
  </testcase>
  <testcase name="RailsGoogleV3Geocoder.geocode doesn't caches queries that return ZERO_RESULTS" time="0.393077009">
  </testcase>
  <testcase name="RailsGoogleV3Geocoder.geocode should cache JSON" time="0.401002766">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RailsGoogleV3Geocoder" tests="0" time="0.000229032" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RedactSecondaryGhostingsJob when redacting secondaries on user #perform" tests="2" time="3.457202046" failures="0" errors="0" skipped="0">
  <testcase name="RedactSecondaryGhostingsJob when redacting secondaries on user #perform redacts all secondaries on user" time="1.976860977">
  </testcase>
  <testcase name="RedactSecondaryGhostingsJob when redacting secondaries on user #perform does not redact the primaries on user" time="1.479763982">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RedactSecondaryGhostingsJob when redacting secondaries on user" tests="0" time="0.000179097" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RedactSecondaryGhostingsJob" tests="0" time="0.000256807" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral#after_create_user" tests="2" time="1.636954524" failures="0" errors="0" skipped="1">
  <testcase name="Referral#after_create_user should set the user on an email referral" time="1.230355243">
  </testcase>
  <testcase name="Referral#after_create_user should set the user on a facebook referral (PENDING)" time="0.406144358">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral#before_create_user" tests="3" time="3.427035291" failures="0" errors="0" skipped="0">
  <testcase name="Referral#before_create_user should create a new referral instance for facebook referrals" time="0.971951449">
  </testcase>
  <testcase name="Referral#before_create_user should create a new referral instance for email referrals" time="1.513329694">
  </testcase>
  <testcase name="Referral#before_create_user should set the channel to Referral::CHANNEL_UNKNOWN if nil" time="0.941132743">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral#combine_coupons" tests="4" time="3.380797248" failures="0" errors="0" skipped="0">
  <testcase name="Referral#combine_coupons should return nil if the user doesn't have referral coupons" time="0.819613467">
  </testcase>
  <testcase name="Referral#combine_coupons should return a coupon with given amount if user has enough credit" time="0.883043853">
  </testcase>
  <testcase name="Referral#combine_coupons should return a coupon with the max possible amount if user doesn't have enough credit" time="0.842165298">
  </testcase>
  <testcase name="Referral#combine_coupons should create a new coupon for the difference if user coupon is more than given amount" time="0.835291721">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral coupons for multiple reservations booked sequentially after each acceptance" tests="1" time="3.092046132" failures="0" errors="0" skipped="0">
  <testcase name="Referral coupons for multiple reservations booked sequentially after each acceptance should only apply to the first" time="3.091713944">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral coupons for multiple reservations first one becomes pending, second becomes pending, first is canceled, second is accepted" tests="1" time="3.717590837" failures="0" errors="0" skipped="0">
  <testcase name="Referral coupons for multiple reservations first one becomes pending, second becomes pending, first is canceled, second is accepted should not be applied" time="3.717225662">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral coupons for multiple reservations first one becomes pending, second one is created then accepted, first is accepted" tests="1" time="3.302823821" failures="0" errors="0" skipped="0">
  <testcase name="Referral coupons for multiple reservations first one becomes pending, second one is created then accepted, first is accepted should only apply to the first" time="3.302426065">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral coupons for multiple reservations first one is created and becomes pending, second is created and becomes pending, first is accepted, second is accepted" tests="1" time="2.635323764" failures="0" errors="0" skipped="0">
  <testcase name="Referral coupons for multiple reservations first one is created and becomes pending, second is created and becomes pending, first is accepted, second is accepted should apply to the first" time="2.634956065">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral coupons for multiple reservations first one is created and retracted, second is created and accepted" tests="1" time="2.501899965" failures="0" errors="0" skipped="0">
  <testcase name="Referral coupons for multiple reservations first one is created and retracted, second is created and accepted should apply to the second" time="2.501444073">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral coupons for multiple reservations first one is created, second is created and accepted, first is accepted" tests="1" time="3.097328466" failures="0" errors="0" skipped="0">
  <testcase name="Referral coupons for multiple reservations first one is created, second is created and accepted, first is accepted should apply to only the second" time="3.096861103">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral coupons for multiple reservations first one is created, second is created and accepted" tests="1" time="2.524413343" failures="0" errors="0" skipped="0">
  <testcase name="Referral coupons for multiple reservations first one is created, second is created and accepted should apply to the second" time="2.523964428">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral coupons for multiple reservations first one is created, second is created, first is accepted, second is accepted" tests="1" time="3.390633934" failures="0" errors="0" skipped="0">
  <testcase name="Referral coupons for multiple reservations first one is created, second is created, first is accepted, second is accepted should apply only to the first" time="3.390242685">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral coupons for multiple reservations" tests="0" time="0.000235048" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral find_by_url_param" tests="2" time="1.263263971" failures="0" errors="0" skipped="0">
  <testcase name="Referral find_by_url_param should return the referral if the param is valid" time="0.839778962">
  </testcase>
  <testcase name="Referral find_by_url_param should return nil if the param is invalid" time="0.423034118">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral find_user_by_url_param" tests="1" time="0.838089203" failures="0" errors="0" skipped="0">
  <testcase name="Referral find_user_by_url_param should handle the old and the new format" time="0.837709785">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral has_already_been_referred" tests="6" time="14.723045409" failures="0" errors="0" skipped="0">
  <testcase name="Referral has_already_been_referred should return an error message if a referral exists with the same facebook id" time="3.085320493">
  </testcase>
  <testcase name="Referral has_already_been_referred should return an error message if a referral exists with the same email" time="2.113771602">
  </testcase>
  <testcase name="Referral has_already_been_referred should return an error message if a user exists with the same facebook id" time="2.084922146">
  </testcase>
  <testcase name="Referral has_already_been_referred should return an error message if a user exists with the same email" time="2.637391041">
  </testcase>
  <testcase name="Referral has_already_been_referred should return a hash if looking up multiple facebook ids" time="2.681204781">
  </testcase>
  <testcase name="Referral has_already_been_referred should return a hash if looking up multiple emails" time="2.119496592">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral#invite_facebook_friends" tests="3" time="3.29067189" failures="0" errors="0" skipped="0">
  <testcase name="Referral#invite_facebook_friends should create referral instances" time="0.819114865">
  </testcase>
  <testcase name="Referral#invite_facebook_friends should not create referrals for existing users" time="1.26316123">
  </testcase>
  <testcase name="Referral#invite_facebook_friends should not make a FB API call if an offline relationship exists" time="1.207686097">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReferralLink#build" tests="2" time="1.549755835" failures="0" errors="0" skipped="0">
  <testcase name="ReferralLink#build should build an instance from a referral" time="0.807936873">
  </testcase>
  <testcase name="ReferralLink#build should build an instance from a user" time="0.741405272">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReferralLink#from_param" tests="5" time="1.968714813" failures="0" errors="0" skipped="0">
  <testcase name="ReferralLink#from_param should parse user id, hash" time="0.404171246">
  </testcase>
  <testcase name="ReferralLink#from_param should parse user id, hash, channel" time="0.388015525">
  </testcase>
  <testcase name="ReferralLink#from_param should parse user id, hash, referral id" time="0.388508832">
  </testcase>
  <testcase name="ReferralLink#from_param should parse user id, hash, referral id, channel" time="0.382966667">
  </testcase>
  <testcase name="ReferralLink#from_param should return an empty object for invalid strings" time="0.404225985">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReferralLink#hash_valid_for?" tests="2" time="2.063955481" failures="0" errors="0" skipped="0">
  <testcase name="ReferralLink#hash_valid_for? should return true for valid hashes" time="0.805773541">
  </testcase>
  <testcase name="ReferralLink#hash_valid_for? should return false for invalid hashes" time="1.257706016">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReferralLink#to_param" tests="4" time="1.504901198" failures="0" errors="0" skipped="0">
  <testcase name="ReferralLink#to_param should build a valid param from user id, hash" time="0.381382026">
  </testcase>
  <testcase name="ReferralLink#to_param should build a valid param from user id, hash, channel" time="0.368271635">
  </testcase>
  <testcase name="ReferralLink#to_param should build a valid param from user id, hash, referral id" time="0.371440808">
  </testcase>
  <testcase name="ReferralLink#to_param should build a valid param from user id, hash, referral id, channel" time="0.383171463">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReferralLink#to_url" tests="1" time="0.400873983" failures="0" errors="0" skipped="0">
  <testcase name="ReferralLink#to_url should generate a valid URL" time="0.400555926">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReferralLink" tests="0" time="0.000213789" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral observer callbacks" tests="5" time="10.012389749" failures="0" errors="0" skipped="0">
  <testcase name="Referral observer callbacks should schedule reward_for_reservation when reservation is accepted" time="2.672236077">
  </testcase>
  <testcase name="Referral observer callbacks should update referral and create coupon when reservation is accepted for guest to host" time="2.2923826">
  </testcase>
  <testcase name="Referral observer callbacks should update referral when new user is created" time="1.190408091">
  </testcase>
  <testcase name="Referral observer callbacks should update referral when hosting is created and referrer is an active host" time="1.922752778">
  </testcase>
  <testcase name="Referral observer callbacks should not update referral when hosting is created and referrer is a guest" time="1.933750123">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral::Offer#from_user" tests="1" time="0.739805131" failures="0" errors="0" skipped="0">
  <testcase name="Referral::Offer#from_user should return the 25+75 offer" time="0.739436566">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral::Offer" tests="0" time="0.000249606" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral qualifying_reservation?" tests="6" time="11.966909014" failures="0" errors="0" skipped="0">
  <testcase name="Referral qualifying_reservation? should return false for reservations that are not accepted" time="1.282110532">
  </testcase>
  <testcase name="Referral qualifying_reservation? should not check for the minimum trip cost" time="1.710300474">
  </testcase>
  <testcase name="Referral qualifying_reservation? should return false if referred guest books from referrer" time="2.527354963">
  </testcase>
  <testcase name="Referral qualifying_reservation? should return false if referrer books from referred host" time="1.758696225">
  </testcase>
  <testcase name="Referral qualifying_reservation? should return false if guest and host were referred by the same user" time="2.128440274">
  </testcase>
  <testcase name="Referral qualifying_reservation? should return true for reservations that meet all criteria" time="2.559040033">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral refer_email_only" tests="4" time="7.009215799" failures="0" errors="0" skipped="0">
  <testcase name="Referral refer_email_only should create a referral instance for each address" time="1.487497707">
  </testcase>
  <testcase name="Referral refer_email_only should not save referrals if one has errors" time="1.745580846">
  </testcase>
  <testcase name="Referral refer_email_only should not allow more than 10 referrals" time="2.129632557">
  </testcase>
  <testcase name="Referral refer_email_only should not allow email only for users that were not referred" time="1.645835348">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral#referred_raw_email=" tests="1" time="0.432754355" failures="0" errors="0" skipped="0">
  <testcase name="Referral#referred_raw_email= should assign invalid string to referred_email so it triggers a validation error" time="0.432396521">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral#refer_users" tests="3" time="2.501931725" failures="0" errors="0" skipped="0">
  <testcase name="Referral#refer_users should save referrals" time="0.813588615">
  </testcase>
  <testcase name="Referral#refer_users should send emails" time="0.857238265">
  </testcase>
  <testcase name="Referral#refer_users should save nothing if some addresses have errors" time="0.830489539">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral reward_for_reservation simple :qualified_referral" tests="2" time="4.931161496" failures="0" errors="0" skipped="0">
  <testcase name="Referral reward_for_reservation simple :qualified_referral should reward referrer of guest" time="2.390995901">
  </testcase>
  <testcase name="Referral reward_for_reservation simple :qualified_referral should reward referrer of host" time="2.5395944">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral reward_for_reservation" tests="3" time="10.206973358" failures="0" errors="0" skipped="0">
  <testcase name="Referral reward_for_reservation should give host referral credit on top of guest referral credit" time="3.026035019">
  </testcase>
  <testcase name="Referral reward_for_reservation should give guest referral credit on top of host referral credit" time="3.757046663">
  </testcase>
  <testcase name="Referral reward_for_reservation should create a new coupon if referrer gets guest and host credit and already used the first coupon" time="3.423238652">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral validation" tests="2" time="1.992324858" failures="0" errors="0" skipped="0">
  <testcase name="Referral validation should not create a referral if email was already referred" time="1.191297253">
  </testcase>
  <testcase name="Referral validation should not create a referral if user already exists" time="0.800545455">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Referral" tests="3" time="5.88399442" failures="0" errors="0" skipped="0">
  <testcase name="Referral should schedule commission payments if offer has commission" time="1.472638434">
  </testcase>
  <testcase name="Referral should create a line item for qualifying reservations" time="3.211488904">
  </testcase>
  <testcase name="Referral should create the coupon for the new user" time="1.199259671">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_connections_for_hosting when social connections are off" tests="2" time="4.30839524" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_connections_for_hosting when social connections are off returns no connection for a new user" time="1.978090274">
  </testcase>
  <testcase name="Relationship#get_connections_for_hosting when social connections are off returns no connection for a user with friends" time="2.329861406">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_connections_for_hosting when social connections are on and the service is off" tests="1" time="2.000643435" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_connections_for_hosting when social connections are on and the service is off doesn't call the service" time="2.000205003">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_connections_for_hosting when social connections are on and the service is on" tests="2" time="3.870002237" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_connections_for_hosting when social connections are on and the service is on calls the service" time="2.256573564">
  </testcase>
  <testcase name="Relationship#get_connections_for_hosting when social connections are on and the service is on returns the value from the service" time="1.612896738">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_connections_for_hosting when social connections are on" tests="2" time="3.249566556" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_connections_for_hosting when social connections are on returns no connection for a new user" time="1.634471626">
  </testcase>
  <testcase name="Relationship#get_connections_for_hosting when social connections are on returns a connection for a user with friends" time="1.61466738">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_connections_for_hosting" tests="0" time="0.000195216" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_connections_for_user when social connections are off" tests="2" time="3.418770777" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_connections_for_user when social connections are off returns no connection for a new user" time="1.723943319">
  </testcase>
  <testcase name="Relationship#get_connections_for_user when social connections are off returns no connection for a user with friends" time="1.694378901">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_connections_for_user when social connections are on and the service is off" tests="1" time="2.294262017" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_connections_for_user when social connections are on and the service is off doesn't call the service" time="2.293817623">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_connections_for_user when social connections are on and the service is on" tests="2" time="3.322147384" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_connections_for_user when social connections are on and the service is on calls the service" time="1.711933435">
  </testcase>
  <testcase name="Relationship#get_connections_for_user when social connections are on and the service is on returns the value from the service" time="1.609697734">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_connections_for_user when social connections are on" tests="2" time="3.84959031" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_connections_for_user when social connections are on returns no connection for a new user" time="1.686939947">
  </testcase>
  <testcase name="Relationship#get_connections_for_user when social connections are on returns a connection for a user with friends" time="2.162187483">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_connections_for_user" tests="0" time="0.000201268" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_related_hostings when social connections are off" tests="2" time="3.782738314" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_related_hostings when social connections are off returns no connections for a new user" time="1.690983087">
  </testcase>
  <testcase name="Relationship#get_related_hostings when social connections are off returns no connections for a user with friends" time="2.091319235">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_related_hostings when social connections are on and the service is off" tests="1" time="1.675186688" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_related_hostings when social connections are on and the service is off doesn't call the service" time="1.674797843">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_related_hostings when social connections are on and the service is on" tests="2" time="4.297803709" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_related_hostings when social connections are on and the service is on calls the service" time="2.012904983">
  </testcase>
  <testcase name="Relationship#get_related_hostings when social connections are on and the service is on returns the value from the service" time="2.284407888">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_related_hostings when social connections are on" tests="2" time="4.076650634" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_related_hostings when social connections are on returns no connections for a new user" time="2.291728336">
  </testcase>
  <testcase name="Relationship#get_related_hostings when social connections are on returns connections for a user with friends" time="1.784498812">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_related_hostings" tests="0" time="0.000195289" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_related_users when social connections are off" tests="2" time="3.913118112" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_related_users when social connections are off returns no connections for a new user" time="2.273061673">
  </testcase>
  <testcase name="Relationship#get_related_users when social connections are off returns no connections for a user with friends" time="1.639592332">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_related_users when social connections are on when the service is off" tests="1" time="2.336009239" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_related_users when social connections are on when the service is off doesn't call the service" time="2.33561748">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_related_users when social connections are on when the service is on" tests="2" time="3.300944041" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_related_users when social connections are on when the service is on calls the service" time="1.627558619">
  </testcase>
  <testcase name="Relationship#get_related_users when social connections are on when the service is on returns the value from the service" time="1.672869082">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_related_users when social connections are on" tests="2" time="3.839420886" failures="0" errors="0" skipped="0">
  <testcase name="Relationship#get_related_users when social connections are on returns no connections for a new user" time="1.805926136">
  </testcase>
  <testcase name="Relationship#get_related_users when social connections are on returns connections for a user with friends" time="2.033049876">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship#get_related_users" tests="0" time="0.000170137" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Relationship" tests="0" time="0.000257347" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail (Baleen Integration)" tests="110" time="106.833556985" failures="0" errors="0" skipped="0">
  <testcase name="ReplyViaEmail (Baleen Integration) should hide a broken reply header marked by a token" time="0.39979668">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should parse an email with the worst of all possible formatting" time="0.389142549">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should detect and remove a suspected signature" time="0.387682901">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should mark deleted below unbroken reply header" time="0.386423461">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should set the visibility around the given string (reply above text)" time="0.407144693">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should hide a broken reply header marked by a token (failed)" time="0.384903233">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should remove text below the first quoted section (reply above)" time="0.415116249">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/msft_outlook_express_xp/std_en.eml" time="0.492935198">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_fi.eml" time="0.421920435">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_de.eml" time="0.987376917">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_no.eml" time="0.428829926">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/html_en.eml" time="0.45044863">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_sv.eml" time="0.439961716">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_nl.eml" time="0.422827034">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_zh2.eml" time="0.45743146">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_zh1.eml" time="0.441804056">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_ko.eml" time="0.453672637">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_el.eml" time="0.460032356">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_ru.eml" time="0.424399088">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_pl.eml" time="0.448509703">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_he.eml" time="0.458888059">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_en.eml" time="0.43553797">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_da.eml" time="0.435884787">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_ja.eml" time="0.952212184">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/hotmail/std_fr.eml" time="0.448461189">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/thunderbird/std_de.eml" time="0.462501515">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/thunderbird/alt_fr.eml" time="0.471408179">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/thunderbird/alt_he.eml" time="0.431482374">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/thunderbird/std_no.eml" time="0.451805727">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/thunderbird/html_en.eml" time="0.467932087">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/thunderbird/std_zh2.eml" time="0.443067035">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/thunderbird/std_zh1.eml" time="0.437771777">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/thunderbird/alt_ar.eml" time="0.428177879">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/thunderbird/alt_zh1.eml" time="0.41516999">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/thunderbird/std_ar.eml" time="0.462605584">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/thunderbird/alt_en.eml" time="0.562966761">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/thunderbird/std_he.eml" time="3.383966024">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/thunderbird/std_en.eml" time="0.946289864">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/thunderbird/std_fr.eml" time="0.446063697">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/msft_outlook_2013/std_en.eml" time="0.475645762">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/yahoo/std_de.eml" time="3.729329537">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/yahoo/std_zh1.eml" time="0.594773162">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/yahoo/std_ru.eml" time="0.496551984">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/yahoo/std_he.eml" time="0.4531998">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/yahoo/std_en.eml" time="3.203540592">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/sparrow/std_en.eml" time="1.021171655">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_fi.eml" time="0.447837224">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_de.eml" time="3.640856579">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_no.eml" time="0.7515699">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/html_en.eml" time="2.244879613">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_nl.eml" time="2.322594461">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_zh2.eml" time="0.398473675">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_zh1.eml" time="0.587955331">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_es.eml" time="3.46313614">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_ko.eml" time="0.70128215">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_el.eml" time="0.40365805">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_ar.eml" time="3.096201028">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_ru.eml" time="1.1572444">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_pl.eml" time="0.44226388">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_he.eml" time="2.60883518">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_en.eml" time="1.537997204">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_da.eml" time="0.578850925">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_ja.eml" time="0.441827152">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_ios/std_fr.eml" time="0.402648747">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/msft_outlook_2010/std_en.eml" time="3.818384957">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/android/var1_de.eml" time="0.42716662">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_fi.eml" time="1.627014803">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_de.eml" time="2.484049711">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_no.eml" time="0.394912149">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/html_en.eml" time="0.424241557">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_sv.eml" time="3.96842416">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_nl.eml" time="0.452255963">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_zh2.eml" time="0.423965859">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_zh1.eml" time="2.921227575">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_es.eml" time="1.128501542">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_ko.eml" time="0.404951109">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_el.eml" time="0.413192523">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_ar.eml" time="3.588624945">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_ru.eml" time="0.538391925">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_pl.eml" time="3.785809242">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_he.eml" time="0.974056701">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_en.eml" time="0.497142883">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_da.eml" time="2.774496755">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_ja.eml" time="1.304257196">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/gmail/std_fr.eml" time="0.375673019">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/msft_wlmail_2012/std_de.eml" time="0.424032232">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/msft_wlmail_2012/std_en.eml" time="1.140204556">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_fi.eml" time="3.137251097">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_de.eml" time="0.388548792">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_no.eml" time="0.403974567">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/html_en.eml" time="3.576457201">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_sv.eml" time="0.444865354">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_nl.eml" time="0.404376597">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_zh2.eml" time="0.926553543">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_zh1.eml" time="0.411129252">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_es.eml" time="0.419915761">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_ko.eml" time="0.408932872">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_el.eml" time="0.416138424">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_ru.eml" time="0.422249703">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_pl.eml" time="0.424772066">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_he.eml" time="0.423492898">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_en.eml" time="0.40662442">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_da.eml" time="0.396388259">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_ja.eml" time="0.391884341">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should decode the abstract message in fixture reply_via_email/baleen/clients/apple_mail_osx/std_fr.eml" time="0.414430633">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should correctly determine the autoresponse status reply_via_email/baleen/auto_response/auto_01.txt" time="0.369655328">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should correctly determine the autoresponse status reply_via_email/baleen/auto_response/auto_03.txt" time="0.361080876">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should correctly determine the autoresponse status reply_via_email/baleen/auto_response/auto_02.txt" time="0.363623249">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should correctly determine the autoresponse status reply_via_email/baleen/auto_response/good_01.txt" time="0.385089885">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Integration) should correctly determine the autoresponse status reply_via_email/baleen/auto_response/auto_04.txt" time="0.387553661">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail (Baleen Regression)" tests="14" time="8.463330161" failures="0" errors="0" skipped="0">
  <testcase name="ReplyViaEmail (Baleen Regression) should correctly parse 20130213_harrys_message.eml" time="0.881693796">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Regression) should correctly parse 20130213_harrys_message_alt.eml" time="0.517355101">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Regression) should correctly parse 20130214_unbroken_reply_whitespace.eml" time="0.923049731">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Regression) should correctly parse 20130214_attached_with_token.eml" time="0.431105197">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Regression) should correctly parse 20130214_italian_unbroken_header.eml" time="0.461923972">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Regression) should correctly parse 20130214_unbroken_single_email_1.eml" time="0.445916459">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Regression) should correctly parse 20130214_unbroken_single_email_2.eml" time="0.445227081">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Regression) should correctly parse 20130214_unbroken_single_email_3.eml" time="0.466903155">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Regression) should correctly parse 20130214_broken_unbroken_combo_1.eml" time="0.484888367">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Regression) should correctly parse 20130214_broken_unbroken_combo_2.eml" time="0.498973577">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Regression) should correctly parse 20130214_unbroken_short_date.eml" time="1.51628933">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Regression) should correctly parse 20130214_header_no_prefixes.eml" time="0.529105367">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Regression) should correctly parse 20130214_awkward_line_wrap.eml" time="0.423885019">
  </testcase>
  <testcase name="ReplyViaEmail (Baleen Regression) should correctly parse 20130214_underscore_line_signature.eml" time="0.435289562">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail deduplication" tests="4" time="39.652642555" failures="0" errors="0" skipped="0">
  <testcase name="ReplyViaEmail deduplication should not allow duplicate postings" time="9.684886059">
  </testcase>
  <testcase name="ReplyViaEmail deduplication should allow the same user to post multiple times" time="14.16725194">
  </testcase>
  <testcase name="ReplyViaEmail deduplication should allow the same posting in different threads" time="8.084521315">
  </testcase>
  <testcase name="ReplyViaEmail deduplication should short circuit when the rve_perform_all feature is enabled" time="7.715256403">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail::Deduplicator.canonicalize_as_json (recursion)" tests="4" time="4.974640535" failures="0" errors="0" skipped="0">
  <testcase name="ReplyViaEmail::Deduplicator.canonicalize_as_json (recursion) serializes the values of hashes" time="3.665447036">
  </testcase>
  <testcase name="ReplyViaEmail::Deduplicator.canonicalize_as_json (recursion) serializes the values of arrays" time="0.532008788">
  </testcase>
  <testcase name="ReplyViaEmail::Deduplicator.canonicalize_as_json (recursion) canonicalizes the values of hashes" time="0.359984123">
  </testcase>
  <testcase name="ReplyViaEmail::Deduplicator.canonicalize_as_json (recursion) canonicalizes the values of arrays" time="0.416399418">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail::Deduplicator.canonicalize_as_json (serialization)" tests="6" time="6.445571223" failures="0" errors="0" skipped="0">
  <testcase name="ReplyViaEmail::Deduplicator.canonicalize_as_json (serialization) serializes hashes" time="0.878896374">
  </testcase>
  <testcase name="ReplyViaEmail::Deduplicator.canonicalize_as_json (serialization) orders the keys in hashes alphabetically" time="3.437728718">
  </testcase>
  <testcase name="ReplyViaEmail::Deduplicator.canonicalize_as_json (serialization) serializes arrays" time="0.952620896">
  </testcase>
  <testcase name="ReplyViaEmail::Deduplicator.canonicalize_as_json (serialization) serializes numerics" time="0.396448089">
  </testcase>
  <testcase name="ReplyViaEmail::Deduplicator.canonicalize_as_json (serialization) serializes string and quotes them" time="0.377878274">
  </testcase>
  <testcase name="ReplyViaEmail::Deduplicator.canonicalize_as_json (serialization) serializes objects by their string representation" time="0.401165855">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail::Deduplicator.canonicalize_as_json" tests="0" time="0.000211965" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail::Deduplicator#should_perform?" tests="2" time="0.780149324" failures="0" errors="0" skipped="0">
  <testcase name="ReplyViaEmail::Deduplicator#should_perform? defaults to true" time="0.400791633">
  </testcase>
  <testcase name="ReplyViaEmail::Deduplicator#should_perform? is false after marking" time="0.378952364">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail::Deduplicator#tag" tests="1" time="0.371325243" failures="0" errors="0" skipped="0">
  <testcase name="ReplyViaEmail::Deduplicator#tag doesn't distinguish between params that identical up to ordering" time="0.370908557">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail::Deduplicator" tests="0" time="0.000260294" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail gumtree" tests="3" time="9.641517302" failures="0" errors="0" skipped="0">
  <testcase name="ReplyViaEmail gumtree should generate (and subsequently decode) reply_to emails properly" time="0.846497773">
  </testcase>
  <testcase name="ReplyViaEmail gumtree should properly handle incoming gumtree email replies and Reply-To headers" time="4.479390803">
  </testcase>
  <testcase name="ReplyViaEmail gumtree should ignore gumtree emails not including replies" time="4.315029681">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail reply to thread by email" tests="4" time="32.873522146" failures="0" errors="0" skipped="0">
  <testcase name="ReplyViaEmail reply to thread by email should encode and parse email" time="4.326581069">
  </testcase>
  <testcase name="ReplyViaEmail reply to thread by email should post to the thread" time="13.228198575">
  </testcase>
  <testcase name="ReplyViaEmail reply to thread by email should not post with expired reply-to addresses" time="6.143952343">
  </testcase>
  <testcase name="ReplyViaEmail reply to thread by email should mark the thread as read when replying" time="9.174195247">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail stats" tests="3" time="11.300089336" failures="0" errors="0" skipped="0">
  <testcase name="ReplyViaEmail stats should increment the incoming and dispatch tracers" time="4.066668032">
  </testcase>
  <testcase name="ReplyViaEmail stats should increment the error stats tracers (not an action error)" time="3.544849453">
  </testcase>
  <testcase name="ReplyViaEmail stats should increment the error stats tracers (action error)" time="3.688040828">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail store to s3" tests="1" time="0.398453257" failures="0" errors="0" skipped="0">
  <testcase name="ReplyViaEmail store to s3 should put emails into an s3 bucket (to field)" time="0.398113926">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail store to watcher" tests="2" time="7.702212146" failures="0" errors="0" skipped="0">
  <testcase name="ReplyViaEmail store to watcher should store to the reply watcher (success)" time="4.180048486">
  </testcase>
  <testcase name="ReplyViaEmail store to watcher should store to the reply watcher (exception)" time="3.521626774">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail validation errors" tests="3" time="14.871475915" failures="0" errors="0" skipped="0">
  <testcase name="ReplyViaEmail validation errors should error on a misformatted email address" time="5.206066952">
  </testcase>
  <testcase name="ReplyViaEmail validation errors should error on a email address of the incorrect length" time="5.01842739">
  </testcase>
  <testcase name="ReplyViaEmail validation errors should error on a invalid email address message" time="4.646416649">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReplyViaEmail" tests="0" time="0.000224232" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 acts_as_json_hashable estimated_payout_dates" tests="4" time="6.114081635" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 acts_as_json_hashable estimated_payout_dates should not show up if no user is passed" time="1.39487439">
  </testcase>
  <testcase name="Reservation2 acts_as_json_hashable estimated_payout_dates should not show up if guest is passed" time="1.369284407">
  </testcase>
  <testcase name="Reservation2 acts_as_json_hashable estimated_payout_dates should not show up if host is passed and is not accepted" time="1.940446819">
  </testcase>
  <testcase name="Reservation2 acts_as_json_hashable estimated_payout_dates should show up if host is passed and is accepted" time="1.408800001">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 acts_as_json_hashable" tests="0" time="0.000199077" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Advances" tests="1" time="2.248692483" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Advances should allow for Advances if the host is Seamless Transitions" time="2.248337475">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Affiliate ids and campaigns and pay for sem" tests="2" time="4.389096507" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Affiliate ids and campaigns and pay for sem should set the affiliates in being_reservation" time="1.431962725">
  </testcase>
  <testcase name="Reservation2 Affiliate ids and campaigns and pay for sem should set the pay for sem 10% fee with the right hostings, affiliates and campaigns" time="2.956643778">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 all_payments_in_expected_currency?" tests="3" time="2.104031272" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 all_payments_in_expected_currency? should return true is all payments are the same currency as the guest" time="0.724822737">
  </testcase>
  <testcase name="Reservation2 all_payments_in_expected_currency? should return false if there is a payment with a different native_currency" time="0.702926134">
  </testcase>
  <testcase name="Reservation2 all_payments_in_expected_currency? should return true if there are no payments" time="0.675643235">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 attach_to_message_thread" tests="2" time="0.001019182" failures="0" errors="0" skipped="2">
  <testcase name="Reservation2 attach_to_message_thread should set the question2_thread_id (PENDING)" time="0.000379387">
    <skipped/>
  </testcase>
  <testcase name="Reservation2 attach_to_message_thread should be able to take thread as argument to save a query (PENDING)" time="0.000305934">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 auto_return_security_deposits!" tests="1" time="1.156754614" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 auto_return_security_deposits! should at least be able to run the function without throwing errors" time="1.156133428">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 balance_payments! add more payments (balance &gt; 0) charged payment" tests="1" time="1.235143196" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 balance_payments! add more payments (balance &gt; 0) charged payment should create a new payment modeled after existing payments from charged payment" time="1.23477028">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 balance_payments! add more payments (balance &gt; 0) monthly pricing" tests="2" time="0.74770017" failures="0" errors="0" skipped="2">
  <testcase name="Reservation2 balance_payments! add more payments (balance &gt; 0) monthly pricing should create monthly payouts with process_after, destroying old payment (PENDING)" time="0.357882995">
    <skipped/>
  </testcase>
  <testcase name="Reservation2 balance_payments! add more payments (balance &gt; 0) monthly pricing should create monthly payouts with process_after, leaving old payment (PENDING)" time="0.389219564">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 balance_payments! add more payments (balance &gt; 0) no payments" tests="1" time="1.74926623" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 balance_payments! add more payments (balance &gt; 0) no payments should not create any payments if no payments exist" time="1.748603387">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 balance_payments! add more payments (balance &gt; 0) uncharged_payment" tests="1" time="1.183817812" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 balance_payments! add more payments (balance &gt; 0) uncharged_payment should create a new payment modeled after existing payments from charged payment" time="1.183412142">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 balance_payments! add more payments (balance &gt; 0)" tests="0" time="0.00020079" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 balance_payments! balance == 0" tests="1" time="4.218384651" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 balance_payments! balance == 0 should do nothing to existing payments" time="4.218044857">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) all charged" tests="2" time="5.788434854" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) all charged should refund excess payment that has already been charged" time="4.469427143">
  </testcase>
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) all charged should favor refunding the charge with higher amount" time="1.318466027">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) all uncharged" tests="6" time="7.755667138" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) all uncharged should change do nothing for the right amount" time="1.165768715">
  </testcase>
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) all uncharged should change charge_amount to be what we should charge" time="1.260466804">
  </testcase>
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) all uncharged should change prioritize higher charge amounts" time="1.70606122">
  </testcase>
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) all uncharged should change prioritize later process_after over higher charge amounts" time="1.20988797">
  </testcase>
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) all uncharged should change prioritize later process_after over higher charge amounts" time="1.225467846">
  </testcase>
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) all uncharged should change prioritize later process_after over higher charge amounts" time="1.187021661">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) coupons" tests="4" time="19.2159254" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) coupons should refund overpayment on coupons" time="4.583654864">
  </testcase>
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) coupons should favor refunding charged payments over coupons" time="4.835774173">
  </testcase>
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) coupons should favor refunding charged payments over coupons and partially refund coupon" time="4.644402033">
  </testcase>
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) coupons should favor refunding charged payments over coupons and partially refund coupon" time="5.151452718">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) mixed charged and uncharged" tests="4" time="5.369678671" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) mixed charged and uncharged should prioritize refunding uncharged payment" time="1.189685675">
  </testcase>
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) mixed charged and uncharged partial refund of charged payment" time="1.235674632">
  </testcase>
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) mixed charged and uncharged should prioritize refunding the most recent of multiple uncharged payments" time="1.717346546">
  </testcase>
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) mixed charged and uncharged should prioritize refunding multiple uncharged payments" time="1.226284208">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) non-refundable product type" tests="1" time="1.177733158" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 balance_payments! payments need refunding (balance &lt; 0) non-refundable product type should not refund losses" time="1.177347213">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 balance_payments! payments need refunding (balance &lt; 0)" tests="0" time="0.000206507" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 balance_payments!" tests="0" time="0.000168832" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#block_off_availability if listing is attached to reservation" tests="1" time="1.393872167" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#block_off_availability if listing is attached to reservation call the reservation service" time="1.393533272">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/lib/calendar/constants/definition.rb:7: warning: already initialized constant SQUARE
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#block_off_availability if listing is not attached to reservation" tests="1" time="1.772756684" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#block_off_availability if listing is not attached to reservation not call the reservation service" time="1.772384763">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#block_off_availability" tests="0" time="0.000174644" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#calculate_fees" tests="1" time="0.6608731" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#calculate_fees defers to calculate_guest_fees and calculate_host_fees" time="0.660528531">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#calculate_guest_fees" tests="2" time="1.336195365" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#calculate_guest_fees calls calculate_guest_vat" time="0.683360113">
  </testcase>
  <testcase name="Reservation2#calculate_guest_fees sets guest fee to be what vat_info[:final_fee]" time="0.652377973">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#calculate_host_fees" tests="2" time="1.823878648" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#calculate_host_fees calls calculate_host_vat" time="1.159170899">
  </testcase>
  <testcase name="Reservation2#calculate_host_fees sets host fee to be what vat_info[:final_fee]" time="0.664185265">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 cancellation policies" tests="7" time="3.886127107" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 cancellation policies should honor FLEXIBLE policies" time="0.385269128">
  </testcase>
  <testcase name="Reservation2 cancellation policies should honor MODERATE policies" time="0.381421244">
  </testcase>
  <testcase name="Reservation2 cancellation policies should honor STRICT policies" time="0.387924372">
  </testcase>
  <testcase name="Reservation2 cancellation policies should honor SUPER STRICT policies" time="0.414909142">
  </testcase>
  <testcase name="Reservation2 cancellation policies should honor NO REFUND policies" time="0.546232346">
  </testcase>
  <testcase name="Reservation2 cancellation policies should honor SUBLET policies for basic cases" time="0.491044579">
  </testcase>
  <testcase name="Reservation2 cancellation policies should honor SUBLET policies for edge cases" time="0.423484295">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 clearing reviews and dashboard alerts for voided checkpoint reservations" tests="1" time="1.980416911" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 clearing reviews and dashboard alerts for voided checkpoint reservations should deny all queued reviews for a canceled reservation" time="1.98002826">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 clearing reviews for canceled reservations" tests="1" time="2.55582272" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 clearing reviews for canceled reservations should deny all queued reviews for a canceled reservation" time="2.555396166">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#convert_calendar_to_not_available" tests="1" time="1.37627258" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#convert_calendar_to_not_available calls the reservation service.deleted_by_reservation_id! setting set_busy to true" time="1.375750596">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Coupons apply_coupon_from_code! with an invalid code" tests="1" time="1.476460275" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Coupons apply_coupon_from_code! with an invalid code returns an error with an invalid code" time="1.476015622">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Coupons apply_coupon_from_code!" tests="1" time="1.965360409" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Coupons apply_coupon_from_code! returns the coupon" time="1.965021848">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Coupons apply" tests="5" time="8.851002619" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Coupons apply should raise an error if ghost reso" time="1.964340188">
  </testcase>
  <testcase name="Reservation2 Coupons apply should raise an error if coupon does not exist" time="2.034096059">
  </testcase>
  <testcase name="Reservation2 Coupons apply should raise an error if reservation is already submitted" time="1.483570938">
  </testcase>
  <testcase name="Reservation2 Coupons apply should apply a valid coupon successfully" time="1.497986166">
  </testcase>
  <testcase name="Reservation2 Coupons apply should not successfully apply if coupon is not valid" time="1.87021262">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Coupons coupons_already_applied?" tests="2" time="1.47587338" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Coupons coupons_already_applied? returns false if no coupons are applied" time="0.746463874">
  </testcase>
  <testcase name="Reservation2 Coupons coupons_already_applied? returns true if a coupon is found" time="0.728373649">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Coupons" tests="2" time="5.979311692" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Coupons should make coupon inactive when reservation is accepted" time="3.953456261">
  </testcase>
  <testcase name="Reservation2 Coupons should make coupon active when reservations is canceled" time="2.025468294">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 create_booking_rollback_recovery" tests="1" time="1.333060863" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 create_booking_rollback_recovery should call balance payments" time="1.332523355">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#detect_special_offer_for_reservation" tests="2" time="3.342734619" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#detect_special_offer_for_reservation should return a special offer if one exists" time="1.714882728">
  </testcase>
  <testcase name="Reservation2#detect_special_offer_for_reservation should not return a special offer without a corresponding question2_post" time="1.627398227">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#ends_after? reservations that are over" tests="1" time="1.292776931" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#ends_after? reservations that are over should work" time="1.292422246">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#ends_after?" tests="0" time="0.000216009" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 enqueue_fraud_review" tests="2" time="2.730860111" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 enqueue_fraud_review should enqueue a fraud review job when reservation gets accepted" time="1.355122516">
  </testcase>
  <testcase name="Reservation2 enqueue_fraud_review should enqueue a fraud review job when base price changes" time="1.375211657">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 foreign currency transactions" tests="1" time="3.828881726" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 foreign currency transactions should handle foreign currencies with no spread" time="3.828485828">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#free_up_availability when not passed a listing id" tests="1" time="1.413057807" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#free_up_availability when not passed a listing id calls the reservation service.deleted_by_reservation_id! using reservation listing id" time="1.412686343">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#free_up_availability when passed a listing id" tests="1" time="1.714664557" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#free_up_availability when passed a listing id calls the reservation service.deleted_by_reservation_id! using passed listing id" time="1.7142721">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#free_up_availability" tests="0" time="0.000193637" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 future_payments" tests="4" time="2.749973441" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 future_payments return a empty list if there are no future payments" time="0.696926825">
  </testcase>
  <testcase name="Reservation2 future_payments return future payments" time="0.671837342">
  </testcase>
  <testcase name="Reservation2 future_payments return only the future payments" time="0.686694309">
  </testcase>
  <testcase name="Reservation2 future_payments should order by process_after soonest first" time="0.693864962">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 host_cancelation_refund" tests="12" time="40.47515612" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 host_cancelation_refund should not allow a host to refund a guest cancellation after checkin" time="4.727660055">
  </testcase>
  <testcase name="Reservation2 host_cancelation_refund should not allow a host to refund more than the payout price" time="3.267978563">
  </testcase>
  <testcase name="Reservation2 host_cancelation_refund should not allow negative refunds" time="2.894065811">
  </testcase>
  <testcase name="Reservation2 host_cancelation_refund should not allow refunds if any line_items have been reconciled" time="3.345578546">
  </testcase>
  <testcase name="Reservation2 host_cancelation_refund should allow a host to refund a guest who cancelled before the checkin date and didn't get all their money back" time="3.001958542">
  </testcase>
  <testcase name="Reservation2 host_cancelation_refund should delete all payouts when the host gives back all the cancellation money" time="2.909084661">
  </testcase>
  <testcase name="Reservation2 host_cancelation_refund should alter payouts when the host gives back part of the cancellation money" time="3.393189374">
  </testcase>
  <testcase name="Reservation2 host_cancelation_refund should work for long-term reservations" time="4.258007788">
  </testcase>
  <testcase name="Reservation2 host_cancelation_refund should work if the host refunds multiple times" time="3.539058176">
  </testcase>
  <testcase name="Reservation2 host_cancelation_refund should leave an admin note" time="2.830801821">
  </testcase>
  <testcase name="Reservation2 host_cancelation_refund should reinstate payout freezes" time="2.990761805">
  </testcase>
  <testcase name="Reservation2 host_cancelation_refund should not refund money that was paid for with a coupon" time="3.3154242">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 instant booking ib tests" tests="4" time="5.399238332" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 instant booking ib tests should indicate potential instant booking for the right status, hosting and dates" time="1.057258294">
  </testcase>
  <testcase name="Reservation2 instant booking ib tests should not be allowed when off" time="2.054585215">
  </testcase>
  <testcase name="Reservation2 instant booking ib tests should only allow experienced guests when required by the hosting settings" time="1.130188188">
  </testcase>
  <testcase name="Reservation2 instant booking ib tests should allow instant booking only with a guest photo" time="1.156315675">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 instant booking" tests="1" time="1.78457009" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 instant booking should disallow instant booking for out of bounds dates" time="1.784241673">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#in_trip_phase?" tests="7" time="10.175459702" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#in_trip_phase? should be true if reservation is in progress" time="1.811279238">
  </testcase>
  <testcase name="Reservation2#in_trip_phase? should be true if two days before start date" time="1.333018912">
  </testcase>
  <testcase name="Reservation2#in_trip_phase? should be true if three days before start date" time="1.293971225">
  </testcase>
  <testcase name="Reservation2#in_trip_phase? should be true if two days after end date" time="1.801219561">
  </testcase>
  <testcase name="Reservation2#in_trip_phase? should be true if three days after end date" time="1.320634816">
  </testcase>
  <testcase name="Reservation2#in_trip_phase? should be false if more than 3 days before start date" time="1.309608356">
  </testcase>
  <testcase name="Reservation2#in_trip_phase? should be false if more than 3 days after end date" time="1.304633425">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 logging snapshots #log_snapshots when creating snapshots raises an error" tests="2" time="3.388842862" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 logging snapshots #log_snapshots when creating snapshots raises an error should catch the error" time="1.889752867">
  </testcase>
  <testcase name="Reservation2 logging snapshots #log_snapshots when creating snapshots raises an error should notify Airbrake" time="1.498458773">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 logging snapshots #log_snapshots" tests="2" time="1.539011569" failures="0" errors="0" skipped="1">
  <testcase name="Reservation2 logging snapshots #log_snapshots should log a group of events" time="1.538308691">
  </testcase>
  <testcase name="Reservation2 logging snapshots #log_snapshots should create a Reservation2 snapshot, a Hosting snapshot, and two User snapshots for guest and host (PENDING)" time="0.000230947">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 logging snapshots #status_set_pending!" tests="1" time="2.867781713" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 logging snapshots #status_set_pending! should call log_snapshots" time="2.867425549">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 logging snapshots" tests="0" time="0.000197025" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 long term cancellations by guest after the start of the reservation" tests="3" time="6.678792326" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 long term cancellations by guest after the start of the reservation charges the guest for part of the next month's fees" time="2.750121172">
  </testcase>
  <testcase name="Reservation2 long term cancellations by guest after the start of the reservation charges the guest 1 month after his first payment" time="1.807232897">
  </testcase>
  <testcase name="Reservation2 long term cancellations by guest after the start of the reservation sends correct values to the email template" time="2.120833383">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 long term cancellations by guest before the reservation starts" tests="2" time="0.761472955" failures="0" errors="0" skipped="2">
  <testcase name="Reservation2 long term cancellations by guest before the reservation starts clears out any future payments for start date: 2014-01-31 (PENDING)" time="0.387988069">
    <skipped/>
  </testcase>
  <testcase name="Reservation2 long term cancellations by guest before the reservation starts sends correct values to the email template (PENDING)" time="0.373048166">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 long term cancellations by guest" tests="0" time="0.000177413" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 long term cancellations" tests="0" time="0.000663936" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 min_payout_date_has_passed?" tests="3" time="4.701996035" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 min_payout_date_has_passed? should be true if payout date is in the past" time="2.054664337">
  </testcase>
  <testcase name="Reservation2 min_payout_date_has_passed? should be false if payout date is in the future" time="1.328600784">
  </testcase>
  <testcase name="Reservation2 min_payout_date_has_passed? should not esplode if no payout dates" time="1.31815848">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 monthly payments" tests="14" time="108.483611194" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 monthly payments should get scheduled payments for basic cases" time="13.841458563">
  </testcase>
  <testcase name="Reservation2 monthly payments should get scheduled payments for boundary cases" time="20.892155576">
  </testcase>
  <testcase name="Reservation2 monthly payments should get scheduled payments for special cases" time="14.867960027">
  </testcase>
  <testcase name="Reservation2 monthly payments should get scheduled payment exceptions for invalid nights" time="3.607855683">
  </testcase>
  <testcase name="Reservation2 monthly payments should get scheduled payment exceptions for invalid total prices" time="1.255874258">
  </testcase>
  <testcase name="Reservation2 monthly payments should get scheduled payment exceptions for invalid first payment dates" time="3.081465722">
  </testcase>
  <testcase name="Reservation2 monthly payments should setup monthly payments for basic cases" time="16.698511307">
  </testcase>
  <testcase name="Reservation2 monthly payments should setup monthly payments for special cases" time="20.085993524">
  </testcase>
  <testcase name="Reservation2 monthly payments should setup monthly payments for boundary cases" time="5.266363293">
  </testcase>
  <testcase name="Reservation2 monthly payments should not setup monthly payments for ineligible reservations" time="2.787553777">
  </testcase>
  <testcase name="Reservation2 monthly payments should not setup monthly payments for invalid payments" time="1.304742752">
  </testcase>
  <testcase name="Reservation2 monthly payments should guarantee monthly payment sizes is at least one" time="0.371870797">
  </testcase>
  <testcase name="Reservation2 monthly payments should have monthly payment logic based on total price" time="2.163876959">
  </testcase>
  <testcase name="Reservation2 monthly payments should handle special case with exactly one payment" time="2.255814744">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 NotifyBookedElsewhereJob" tests="1" time="1.491377455" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 NotifyBookedElsewhereJob should call notify_hosts_booked_elsewhere! on the reservation instance" time="1.491028785">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 notify_hosts_booked_elsewhere_async" tests="2" time="6.606212557" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 notify_hosts_booked_elsewhere_async should be called upon reservation acceptance if it should" time="3.937870816">
  </testcase>
  <testcase name="Reservation2 notify_hosts_booked_elsewhere_async should not be called upon reservation acceptance if it shouldn't" time="2.667805974">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 notify_hosts_booked_elsewhere!" tests="1" time="3.481958598" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 notify_hosts_booked_elsewhere! should create posts in threads if there are outside inquiries if the guest opted in" time="3.481362385">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 NYC guest cancellations" tests="1" time="1.793596157" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 NYC guest cancellations should generate host adjustment for unused days" time="1.793250783">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 NYC guest_fee" tests="1" time="1.330586542" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 NYC guest_fee should have no guest fee for affiliate id 4174679" time="1.330204496">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 NYC host cancellations" tests="4" time="7.988803404" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 NYC host cancellations should generate a host_cancel_coupon" time="2.267962849">
  </testcase>
  <testcase name="Reservation2 NYC host cancellations should apply to a new reservation" time="1.736358246">
  </testcase>
  <testcase name="Reservation2 NYC host cancellations should transfer payments when accepted" time="2.266489286">
  </testcase>
  <testcase name="Reservation2 NYC host cancellations should not apply to new reservation if currencies differ" time="1.71716951">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 NYC" tests="0" time="0.000202442" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 outside_inquiries" tests="8" time="15.854018061" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 outside_inquiries should not return the inquiry post between res' guest and host" time="1.087750059">
  </testcase>
  <testcase name="Reservation2 outside_inquiries should include a thread between the guest and another host with the same dates" time="2.427865393">
  </testcase>
  <testcase name="Reservation2 outside_inquiries should include a thread between the guest and another host, with overlapping dates" time="1.830990922">
  </testcase>
  <testcase name="Reservation2 outside_inquiries should not include a thread with no overlapping dates" time="2.560827277">
  </testcase>
  <testcase name="Reservation2 outside_inquiries should not include a thread with no inquiry" time="1.655578038">
  </testcase>
  <testcase name="Reservation2 outside_inquiries should include only threads with 'open' inquiries, i.e., not declined" time="2.542756045">
  </testcase>
  <testcase name="Reservation2 outside_inquiries should not include an inquiry that began in the past" time="1.881968388">
  </testcase>
  <testcase name="Reservation2 outside_inquiries should not include an inquiry where Reservation's guest is acting as the inquiry host" time="1.865091319">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 pricing calculations #subtotal_price_with_currency_rate" tests="5" time="3.773217409" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 pricing calculations #subtotal_price_with_currency_rate should return correct converted total where rate=6.6" time="0.651511273">
  </testcase>
  <testcase name="Reservation2 pricing calculations #subtotal_price_with_currency_rate should return correct converted total where rate=1" time="0.676101523">
  </testcase>
  <testcase name="Reservation2 pricing calculations #subtotal_price_with_currency_rate should return correct converted total where rate=0.821" time="0.638567281">
  </testcase>
  <testcase name="Reservation2 pricing calculations #subtotal_price_with_currency_rate should return correct converted total where rate=0.2" time="1.162081116">
  </testcase>
  <testcase name="Reservation2 pricing calculations #subtotal_price_with_currency_rate should return correct converted total where rate=0.01" time="0.644121944">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 pricing calculations #subtotal_price" tests="1" time="0.648332375" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 pricing calculations #subtotal_price the sum of base_price and extras_price" time="0.647968612">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 pricing calculations #total_price_guest_native rounding error" tests="1" time="0.647265744" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 pricing calculations #total_price_guest_native rounding error should return correctly rounded total_price" time="0.646835423">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 pricing calculations #total_price_guest_native" tests="0" time="0.000197675" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 pricing calculations #total_price_with_currency_rate" tests="5" time="3.720998551" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 pricing calculations #total_price_with_currency_rate should return correct converted total where rate=6.6" time="0.623881425">
  </testcase>
  <testcase name="Reservation2 pricing calculations #total_price_with_currency_rate should return correct converted total where rate=1" time="0.658850939">
  </testcase>
  <testcase name="Reservation2 pricing calculations #total_price_with_currency_rate should return correct converted total where rate=0.821" time="0.645683586">
  </testcase>
  <testcase name="Reservation2 pricing calculations #total_price_with_currency_rate should return correct converted total where rate=0.2" time="0.647483232">
  </testcase>
  <testcase name="Reservation2 pricing calculations #total_price_with_currency_rate should return correct converted total where rate=0.01" time="1.144102644">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 pricing calculations #total_price" tests="3" time="1.91937704" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 pricing calculations #total_price sums returns (base_price + extras_price + guest_fee - coupon_savings)" time="0.654199417">
  </testcase>
  <testcase name="Reservation2 pricing calculations #total_price should ignore coupon_savings when told to" time="0.627074697">
  </testcase>
  <testcase name="Reservation2 pricing calculations #total_price should ignore guest_fee when told to" time="0.637550937">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 pricing calculations" tests="0" time="0.000177883" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 problems_with_any_payments?" tests="3" time="2.101953008" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 problems_with_any_payments? should be false if no payments are attempeted and charged successfully" time="0.706164062">
  </testcase>
  <testcase name="Reservation2 problems_with_any_payments? should be false if there are no payments" time="0.684139097">
  </testcase>
  <testcase name="Reservation2 problems_with_any_payments? should be true if there is a payment that is attempted and failed" time="0.710519483">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Project Omega .begin_inquiry!" tests="5" time="7.174530644" failures="0" errors="0" skipped="1">
  <testcase name="Reservation2 Project Omega .begin_inquiry! should create a Question2Thread" time="2.335356352">
  </testcase>
  <testcase name="Reservation2 Project Omega .begin_inquiry! should create a Question2Post and update Question2Thread" time="1.422416691">
  </testcase>
  <testcase name="Reservation2 Project Omega .begin_inquiry! should mark post with correct template_name if it's a multi-message" time="1.410144681">
  </testcase>
  <testcase name="Reservation2 Project Omega .begin_inquiry! should link post to an AirMatchRequest if provided one" time="1.995088025">
  </testcase>
  <testcase name="Reservation2 Project Omega .begin_inquiry! should create a Reservation2 (PENDING)" time="0.010447767">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Project Omega .preapprove!" tests="3" time="4.574797458" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Project Omega .preapprove! should create a corresponding SpecialOffer record" time="1.560628815">
  </testcase>
  <testcase name="Reservation2 Project Omega .preapprove! should throw an exception if not all nights are available" time="1.76556551">
  </testcase>
  <testcase name="Reservation2 Project Omega .preapprove! should throw an exception if SpecialOffer record does not validate" time="1.247956212">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Project Omega .send_special_offer!" tests="3" time="3.621920688" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Project Omega .send_special_offer! should create a corresponding SpecialOffer record" time="1.20976017">
  </testcase>
  <testcase name="Reservation2 Project Omega .send_special_offer! should throw an exception if not all nights are available" time="1.193394665">
  </testcase>
  <testcase name="Reservation2 Project Omega .send_special_offer! should throw an exception if SpecialOffer record does not validate" time="1.218107607">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Project Omega" tests="0" time="0.000224724" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 related_air_match_trips" tests="2" time="3.57462093" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 related_air_match_trips should detect any trips with same guest and overlapping dates" time="2.08045726">
  </testcase>
  <testcase name="Reservation2 related_air_match_trips should respect :status_in and :status_not_in options" time="1.493659198">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Reservations should be aware of time zones" tests="2" time="3.660606189" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Reservations should be aware of time zones the start date for Sydney is in the past" time="2.22496766">
  </testcase>
  <testcase name="Reservation2 Reservations should be aware of time zones the start date for San Francisco is the same day" time="1.43518516">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Returnable security deposit #can_reclaim_security_deposit? without security deposit" tests="2" time="1.273812913" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Returnable security deposit #can_reclaim_security_deposit? without security deposit should return false if within 48 hours after checkout" time="0.626332137">
  </testcase>
  <testcase name="Reservation2 Returnable security deposit #can_reclaim_security_deposit? without security deposit should return false if 48 hours after checkout" time="0.646954239">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Returnable security deposit #can_reclaim_security_deposit? with security deposit" tests="2" time="1.276796626" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Returnable security deposit #can_reclaim_security_deposit? with security deposit should return true if within 48 hours after checkout" time="0.629572484">
  </testcase>
  <testcase name="Reservation2 Returnable security deposit #can_reclaim_security_deposit? with security deposit should return false if 48 hours after checkout" time="0.646641164">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Returnable security deposit #can_reclaim_security_deposit?" tests="0" time="0.000194946" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Returnable security deposit for foreign reservation #reclaimable_foreign_security_deposit without payments, with security_price" tests="1" time="0.660990372" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Returnable security deposit for foreign reservation #reclaimable_foreign_security_deposit without payments, with security_price should return the security price" time="0.660530437">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Returnable security deposit for foreign reservation #reclaimable_foreign_security_deposit without security price or payments" tests="1" time="0.637357661" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Returnable security deposit for foreign reservation #reclaimable_foreign_security_deposit without security price or payments should return 0" time="0.63696262">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Returnable security deposit for foreign reservation #reclaimable_foreign_security_deposit with payments" tests="1" time="0.661084063" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Returnable security deposit for foreign reservation #reclaimable_foreign_security_deposit with payments should return the charged amount minus the refund amount" time="0.660724504">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Returnable security deposit for foreign reservation #reclaimable_foreign_security_deposit" tests="0" time="0.000176607" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Returnable security deposit for foreign reservation" tests="0" time="0.000194368" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Returnable security deposit #reclaimable_security_deposit without payments, with security_price" tests="1" time="0.657693465" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Returnable security deposit #reclaimable_security_deposit without payments, with security_price should return the security price" time="0.6573112">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Returnable security deposit #reclaimable_security_deposit without security price or payments" tests="1" time="0.642011316" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Returnable security deposit #reclaimable_security_deposit without security price or payments should return 0" time="0.641624831">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Returnable security deposit #reclaimable_security_deposit with payments" tests="1" time="0.672147235" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Returnable security deposit #reclaimable_security_deposit with payments should return the charged amount minus the refund amount" time="0.671696175">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Returnable security deposit #reclaimable_security_deposit" tests="0" time="0.000197799" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Returnable security deposit #two_days_after_checkout?" tests="2" time="1.270246014" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Returnable security deposit #two_days_after_checkout? should return true if before two day range" time="0.631595962">
  </testcase>
  <testcase name="Reservation2 Returnable security deposit #two_days_after_checkout? should return false if after two day range" time="0.638175116">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Returnable security deposit" tests="0" time="0.000181866" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#revive! rolling back on error states" tests="2" time="2.782683831" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#revive! rolling back on error states rolls back if balance payments fails" time="1.412275585">
  </testcase>
  <testcase name="Reservation2#revive! rolling back on error states rolls back if charge fails" time="1.369911819">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#revive!" tests="7" time="11.46830164" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#revive! should clear cancellation fees and return reservation to accepted state" time="1.548663358">
  </testcase>
  <testcase name="Reservation2#revive! should refund host penalty if it exists and is reconciled" time="1.488777948">
  </testcase>
  <testcase name="Reservation2#revive! should destroy host penalty line item if it exist and is not reconciled" time="1.447393763">
  </testcase>
  <testcase name="Reservation2#revive! should handle multiple host penalty line items gracefully" time="2.035354109">
  </testcase>
  <testcase name="Reservation2#revive! should deactivate host canceled coupon if exists" time="1.544028701">
  </testcase>
  <testcase name="Reservation2#revive! should raise BalancePaymentsFailureError if balance payments fails" time="1.498593077">
  </testcase>
  <testcase name="Reservation2#revive! ensures line items are balanced" time="1.904602965">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 sanity checks" tests="2" time="9.086000835" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 sanity checks should not create invalid reservations" time="5.075463452">
  </testcase>
  <testcase name="Reservation2 sanity checks should accurately identify reservations that have problematic associated payment2s" time="4.010084157">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 scope: ended_in_past" tests="1" time="3.983388545" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 scope: ended_in_past should select reservations that ended in the past specified time" time="3.982963649">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 scope: ends_after" tests="1" time="3.664273098" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 scope: ends_after should select reservations that end after the specified time" time="3.663886856">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 scope: ends_within" tests="1" time="3.765997525" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 scope: ends_within should select reservations that end within the specified time" time="3.765524963">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 scope: not_over" tests="1" time="2.850887359" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 scope: not_over should select reservations where the checkout is not in the past" time="2.850500388">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 scope: over" tests="1" time="3.953985482" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 scope: over should select reservations where the checkout is in the past" time="3.953637868">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 scope: started_in_past" tests="1" time="4.681179889" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 scope: started_in_past should select reservations that started in the past specified time" time="4.680812476">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 scopes" tests="2" time="2.433426502" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 scopes should accept User model or id for between_users" time="1.216985708">
  </testcase>
  <testcase name="Reservation2 scopes should accept a User model or id for with_user" time="1.215849257">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 security_deposit_price" tests="2" time="3.009049628" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 security_deposit_price should return price of the security deposit authorization" time="1.782954346">
  </testcase>
  <testcase name="Reservation2 security_deposit_price should return the security deposit price on the reso" time="1.225599346">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#set_guest_currency FX spread changes spread started at 0.0 guest_spread_is_applicable? == false" tests="1" time="1.22963007" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#set_guest_currency FX spread changes spread started at 0.0 guest_spread_is_applicable? == false recalculates guest fees" time="1.229232417">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#set_guest_currency FX spread changes spread started at 0.0 guest_spread_is_applicable? == true" tests="1" time="1.823102956" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#set_guest_currency FX spread changes spread started at 0.0 guest_spread_is_applicable? == true recalculates guest fees" time="1.822750799">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#set_guest_currency FX spread changes spread started at 0.0" tests="0" time="0.000212573" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#set_guest_currency FX spread changes" tests="1" time="1.209849044" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#set_guest_currency FX spread changes spread started at 0.03 and changes to 0.0" time="1.209536884">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#set_guest_currency FX spread remains the same" tests="2" time="2.867506258" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#set_guest_currency FX spread remains the same with spread does not recalculate guest fees" time="1.584180075">
  </testcase>
  <testcase name="Reservation2#set_guest_currency FX spread remains the same without spread does not recalculate guest fees" time="1.282756404">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#set_guest_currency" tests="0" time="0.00017448" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 setup_payment" tests="7" time="11.539992445" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 setup_payment should setup an original_payment2" time="1.346216541">
  </testcase>
  <testcase name="Reservation2 setup_payment should set payment_instrument" time="1.836006092">
  </testcase>
  <testcase name="Reservation2 setup_payment should setup a full verification payment for authable cards" time="1.373828304">
  </testcase>
  <testcase name="Reservation2 setup_payment should setup a $1 verification payment for non-authable cards" time="1.372270556">
  </testcase>
  <testcase name="Reservation2 setup_payment should setup a full reservation payment for non-authable but verified cards" time="1.443217264">
  </testcase>
  <testcase name="Reservation2 setup_payment should set the process_after for the original payment to today for monthly resos" time="2.822869235">
  </testcase>
  <testcase name="Reservation2 setup_payment should set the processor and currency" time="1.344515897">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 sharing reservations" tests="7" time="13.684192949" failures="0" errors="0" skipped="1">
  <testcase name="Reservation2 sharing reservations should create a new user account for an unknown email address" time="2.212602385">
  </testcase>
  <testcase name="Reservation2 sharing reservations should record full names of additional guests (PENDING)" time="0.390466946">
    <skipped/>
  </testcase>
  <testcase name="Reservation2 sharing reservations should not let a user be added more than once" time="2.497274198">
  </testcase>
  <testcase name="Reservation2 sharing reservations should link up to existing users" time="2.873474422">
  </testcase>
  <testcase name="Reservation2 sharing reservations should ignore an invalid email address" time="1.55326297">
  </testcase>
  <testcase name="Reservation2 sharing reservations should send an itinerary if the reservation is accepted" time="2.360297749">
  </testcase>
  <testcase name="Reservation2 sharing reservations should not send an itinerary if the reservation is pending" time="1.795808653">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 should_notify_hosts_booked_elsewhere!" tests="3" time="4.694363956" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 should_notify_hosts_booked_elsewhere! should save a RichMemory with a nil message if reservation isn't yet accepted" time="1.688724439">
  </testcase>
  <testcase name="Reservation2 should_notify_hosts_booked_elsewhere! should save a RichMemory with a present message if reservation isn't yet accepted" time="1.492003053">
  </testcase>
  <testcase name="Reservation2 should_notify_hosts_booked_elsewhere! should not save a RichMemory, and should call notify_hosts_booked_elsewhere! if reso already accepted (prepproval)" time="1.513026849">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 split payouts" tests="10" time="22.40053118" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 split payouts should update splits for newly generated payout split" time="2.206112">
  </testcase>
  <testcase name="Reservation2 split payouts should update reservations with frozen line items maintaining admin freeze" time="1.700266396">
  </testcase>
  <testcase name="Reservation2 split payouts should update reservations with one frozen line item freezing all new line items" time="1.587623538">
  </testcase>
  <testcase name="Reservation2 split payouts should update reservations with frozen line item freezing all new line items" time="2.371808437">
  </testcase>
  <testcase name="Reservation2 split payouts should update reservations under fraud review" time="1.663197293">
  </testcase>
  <testcase name="Reservation2 split payouts shouldn't update reservations starting before tomorrow" time="2.11748761">
  </testcase>
  <testcase name="Reservation2 split payouts should calculate split payouts for native amounts" time="5.388498426">
  </testcase>
  <testcase name="Reservation2 split payouts should update line items when split payouts are modified" time="1.67230756">
  </testcase>
  <testcase name="Reservation2 split payouts should update line items when split payouts are deleted" time="1.593173107">
  </testcase>
  <testcase name="Reservation2 split payouts should update line items when split payouts are deleted with admin_freeze" time="2.098694323">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#status_set_pending!" tests="1" time="2.846042055" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#status_set_pending! should not raise an error" time="2.845562885">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#tax_price_dollars_rounded" tests="2" time="3.184037555" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#tax_price_dollars_rounded should round to an integer when called with no arguments" time="1.868158561">
  </testcase>
  <testcase name="Reservation2#tax_price_dollars_rounded should round to two decimal places if called with a precision of two" time="1.315435469">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 Testing checkpoint status" tests="9" time="39.126971974" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 Testing checkpoint status should only allow reservations in new state to move to checkpoint state" time="5.54625454">
  </testcase>
  <testcase name="Reservation2 Testing checkpoint status should only allow reservations in new state to be frozen" time="5.6228428">
  </testcase>
  <testcase name="Reservation2 Testing checkpoint status should only allow reservations in checkpoint state to be unfrozen" time="4.895405199">
  </testcase>
  <testcase name="Reservation2 Testing checkpoint status should only allow reservations in new state and checkpoint state to move to pending state" time="6.770550808">
  </testcase>
  <testcase name="Reservation2 Testing checkpoint status should only allow reservations in checkpoint state to move to pending state or canceled state" time="9.864655961">
  </testcase>
  <testcase name="Reservation2 Testing checkpoint status should be able to distinguish between checkpoint and checkpoint_light" time="1.619920567">
  </testcase>
  <testcase name="Reservation2 Testing checkpoint status should create an incomplete profile review for checkpoint light" time="1.951702753">
  </testcase>
  <testcase name="Reservation2 Testing checkpoint status should create an frozen reservation review for regular checkpoint" time="1.446926951">
  </testcase>
  <testcase name="Reservation2 Testing checkpoint status should create dashboard alerts for a checkpointed reso" time="1.407451484">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 total_future_payments" tests="2" time="1.915691933" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 total_future_payments 0 when no future payments" time="0.708551613">
  </testcase>
  <testcase name="Reservation2 total_future_payments total future payments" time="1.206677899">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 total_payments_collected_native only_successful == true" tests="3" time="2.0707561" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 total_payments_collected_native only_successful == true should ignore payments that don't effect balance" time="0.673356448">
  </testcase>
  <testcase name="Reservation2 total_payments_collected_native only_successful == true should ignore payments that don't effect balance" time="0.693557828">
  </testcase>
  <testcase name="Reservation2 total_payments_collected_native only_successful == true should only show successful charged payments" time="0.703096697">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 total_payments_collected_native" tests="4" time="2.762337349" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 total_payments_collected_native should sum payments" time="0.713543552">
  </testcase>
  <testcase name="Reservation2 total_payments_collected_native should sum payments minus refund_amount" time="0.698001215">
  </testcase>
  <testcase name="Reservation2 total_payments_collected_native should return 0 for no payments" time="0.668394022">
  </testcase>
  <testcase name="Reservation2 total_payments_collected_native should ignore payments that don't effect balance" time="0.68163559">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 total_payments_collected only_successful == true" tests="3" time="2.558615378" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 total_payments_collected only_successful == true should ignore payments that don't effect balance" time="0.672504487">
  </testcase>
  <testcase name="Reservation2 total_payments_collected only_successful == true should ignore payments that don't effect balance" time="0.657438431">
  </testcase>
  <testcase name="Reservation2 total_payments_collected only_successful == true should only show successful charged payments" time="1.228037043">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 total_payments_collected" tests="4" time="3.313252076" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 total_payments_collected should sum payments" time="1.187661468">
  </testcase>
  <testcase name="Reservation2 total_payments_collected should sum payments minus refund_amount" time="0.767433893">
  </testcase>
  <testcase name="Reservation2 total_payments_collected should return 0 for no payments" time="0.668622609">
  </testcase>
  <testcase name="Reservation2 total_payments_collected should ignore payments that don't effect balance" time="0.688932819">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2#total_price_expected" tests="2" time="3.748372609" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2#total_price_expected the price expected should be zero for a checkpoint voided reservation" time="2.405524255">
  </testcase>
  <testcase name="Reservation2#total_price_expected the price expected should not be zero for an accepted reservation" time="1.342391807">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #calculate_guest_vat on canceled reservation" tests="1" time="1.410764009" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #calculate_guest_vat on canceled reservation defers to pricing rules for remittance" time="1.410362158">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #calculate_guest_vat" tests="1" time="2.001443683" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #calculate_guest_vat defers to pricing rules for remittance" time="2.001108358">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #calculate_host_vat on canceled reservation" tests="1" time="2.057972349" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #calculate_host_vat on canceled reservation defers to pricing rules for remittance" time="2.057592498">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #calculate_host_vat" tests="1" time="1.796676082" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #calculate_host_vat defers to pricing rules for remittance" time="1.796351962">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by admin with FX spread behaves like changes vat" tests="4" time="6.9519649" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #cancel! by admin with FX spread behaves like changes vat remittance for host" time="1.496560445">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by admin with FX spread behaves like changes vat revenue for host" time="1.896963466">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by admin with FX spread behaves like changes vat remittance for guest" time="2.07226223">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by admin with FX spread behaves like changes vat revenue for guest" time="1.485444434">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by admin with FX spread" tests="0" time="0.000217124" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by admin without FX spread behaves like changes vat" tests="4" time="7.111169009" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #cancel! by admin without FX spread behaves like changes vat remittance for host" time="1.49157537">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by admin without FX spread behaves like changes vat revenue for host" time="1.827816856">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by admin without FX spread behaves like changes vat remittance for guest" time="1.78141223">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by admin without FX spread behaves like changes vat revenue for guest" time="2.009644973">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by admin without FX spread" tests="0" time="0.000183612" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by admin" tests="0" time="0.000181385" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by guest with flexible cancellation policy with FX spread behaves like changes vat" tests="2" time="4.095718979" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #cancel! by guest with flexible cancellation policy with FX spread behaves like changes vat remittance for guest" time="2.562809853">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by guest with flexible cancellation policy with FX spread behaves like changes vat revenue for guest" time="1.532373753">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by guest with flexible cancellation policy with FX spread" tests="0" time="0.000207053" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by guest with flexible cancellation policy without FX spread behaves like changes vat" tests="2" time="4.190447153" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #cancel! by guest with flexible cancellation policy without FX spread behaves like changes vat remittance for host" time="2.079014859">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by guest with flexible cancellation policy without FX spread behaves like changes vat revenue for host" time="2.110862679">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by guest with flexible cancellation policy without FX spread behaves like doesn't change vat" tests="2" time="3.441968494" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #cancel! by guest with flexible cancellation policy without FX spread behaves like doesn't change vat remittance for guest" time="1.52383443">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by guest with flexible cancellation policy without FX spread behaves like doesn't change vat revenue for guest" time="1.91760732">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by guest with flexible cancellation policy without FX spread" tests="0" time="0.000193768" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by guest with flexible cancellation policy" tests="0" time="0.000197152" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by guest with strict cancellation policy with FX spread behaves like doesn't change vat" tests="4" time="8.37151053" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #cancel! by guest with strict cancellation policy with FX spread behaves like doesn't change vat remittance for host" time="2.151321161">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by guest with strict cancellation policy with FX spread behaves like doesn't change vat revenue for host" time="2.177496879">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by guest with strict cancellation policy with FX spread behaves like doesn't change vat remittance for guest" time="1.578423243">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by guest with strict cancellation policy with FX spread behaves like doesn't change vat revenue for guest" time="2.463515295">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by guest with strict cancellation policy with FX spread" tests="0" time="0.00018951" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by guest with strict cancellation policy without FX spread behaves like doesn't change vat" tests="4" time="7.194127073" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #cancel! by guest with strict cancellation policy without FX spread behaves like doesn't change vat remittance for host" time="1.581669564">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by guest with strict cancellation policy without FX spread behaves like doesn't change vat revenue for host" time="1.905193048">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by guest with strict cancellation policy without FX spread behaves like doesn't change vat remittance for guest" time="2.174517369">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by guest with strict cancellation policy without FX spread behaves like doesn't change vat revenue for guest" time="1.531977946">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by guest with strict cancellation policy without FX spread" tests="0" time="0.000210671" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by guest with strict cancellation policy" tests="0" time="0.000210754" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by guest" tests="0" time="0.000252468" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by host with FX spread behaves like changes vat" tests="4" time="8.958802363" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #cancel! by host with FX spread behaves like changes vat remittance for host" time="2.096672688">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by host with FX spread behaves like changes vat revenue for host" time="2.364531136">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by host with FX spread behaves like changes vat remittance for guest" time="2.080714015">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by host with FX spread behaves like changes vat revenue for guest" time="2.416093363">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by host with FX spread" tests="0" time="0.000225254" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by host without FX spread behaves like changes vat" tests="4" time="9.51203799" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #cancel! by host without FX spread behaves like changes vat remittance for host" time="2.762299253">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by host without FX spread behaves like changes vat revenue for host" time="2.309669751">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by host without FX spread behaves like changes vat remittance for guest" time="2.109804944">
  </testcase>
  <testcase name="Reservation2 VAT tax #cancel! by host without FX spread behaves like changes vat revenue for guest" time="2.329521778">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by host without FX spread" tests="0" time="0.00018377" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel! by host" tests="0" time="0.000201839" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #cancel!" tests="0" time="0.000196398" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a non-VAT country behaves like finalizes fees and currency" tests="6" time="9.845007557" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a non-VAT country behaves like finalizes fees and currency sets guest_currency_spread" time="1.692197559">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a non-VAT country behaves like finalizes fees and currency sets guest_fee" time="1.896818853">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a non-VAT country behaves like finalizes fees and currency sets guest_vat_rate" time="1.338839131">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a non-VAT country behaves like finalizes fees and currency sets guest_vat_country" time="1.67176759">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a non-VAT country behaves like finalizes fees and currency sets guest_vat_remittance_cents" time="1.916742583">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a non-VAT country behaves like finalizes fees and currency sets guest_fee_revenue_cents" time="1.327740297">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a non-VAT country" tests="0" time="0.000202431" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country with FX spread behaves like finalizes fees and currency" tests="6" time="10.002327777" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country with FX spread behaves like finalizes fees and currency sets guest_currency_spread" time="1.641017493">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country with FX spread behaves like finalizes fees and currency sets guest_fee" time="1.446305351">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country with FX spread behaves like finalizes fees and currency sets guest_vat_rate" time="1.921297927">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country with FX spread behaves like finalizes fees and currency sets guest_vat_country" time="1.348754681">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country with FX spread behaves like finalizes fees and currency sets guest_vat_remittance_cents" time="1.692563663">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country with FX spread behaves like finalizes fees and currency sets guest_fee_revenue_cents" time="1.951426852">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country with FX spread" tests="1" time="1.373559052" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country with FX spread retains VAT fields after save" time="1.373174109">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country without FX Spread behaves like finalizes fees and currency" tests="6" time="9.986381543" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country without FX Spread behaves like finalizes fees and currency sets guest_currency_spread" time="1.36365612">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country without FX Spread behaves like finalizes fees and currency sets guest_fee" time="1.777679049">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country without FX Spread behaves like finalizes fees and currency sets guest_vat_rate" time="1.883619685">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country without FX Spread behaves like finalizes fees and currency sets guest_vat_country" time="1.338968204">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country without FX Spread behaves like finalizes fees and currency sets guest_vat_remittance_cents" time="1.681903137">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country without FX Spread behaves like finalizes fees and currency sets guest_fee_revenue_cents" time="1.939542272">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country without FX Spread" tests="0" time="0.000195918" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #finalize_fees_and_currency guest fee in a VAT country" tests="0" time="0.000242781" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #finalize_fees_and_currency guest fee" tests="0" time="0.000181273" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a non-VAT country behaves like finalizes fees and currency" tests="6" time="9.228641087" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a non-VAT country behaves like finalizes fees and currency sets guest_currency_spread" time="1.322445356">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a non-VAT country behaves like finalizes fees and currency sets host_fee" time="1.657252174">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a non-VAT country behaves like finalizes fees and currency sets host_vat_rate" time="1.401651134">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a non-VAT country behaves like finalizes fees and currency sets host_vat_country" time="1.835220458">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a non-VAT country behaves like finalizes fees and currency sets host_vat_remittance_cents" time="1.311632973">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a non-VAT country behaves like finalizes fees and currency sets host_fee_revenue_cents" time="1.699544284">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a non-VAT country" tests="0" time="0.000189255" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a VAT country behaves like finalizes fees and currency" tests="6" time="9.46418904" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a VAT country behaves like finalizes fees and currency sets guest_currency_spread" time="1.933321497">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a VAT country behaves like finalizes fees and currency sets host_fee" time="1.291121427">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a VAT country behaves like finalizes fees and currency sets host_vat_rate" time="1.649101728">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a VAT country behaves like finalizes fees and currency sets host_vat_country" time="1.458466559">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a VAT country behaves like finalizes fees and currency sets host_vat_remittance_cents" time="1.81931512">
  </testcase>
  <testcase name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a VAT country behaves like finalizes fees and currency sets host_fee_revenue_cents" time="1.311742854">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #finalize_fees_and_currency host fee in a VAT country" tests="0" time="0.00024089" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #finalize_fees_and_currency host fee" tests="0" time="0.000232218" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax #finalize_fees_and_currency" tests="0" time="0.000218928" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 VAT tax" tests="0" time="0.000175823" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 when reservation2 host is under leonidas review .unfreeze_leonidas_payouts" tests="4" time="12.027682697" failures="0" errors="0" skipped="0">
  <testcase name="Reservation2 when reservation2 host is under leonidas review .unfreeze_leonidas_payouts removes admin_freeze from single reservation line_item" time="3.162650146">
  </testcase>
  <testcase name="Reservation2 when reservation2 host is under leonidas review .unfreeze_leonidas_payouts removes admin_freeze from more than one reservation line_item at a time" time="2.689089932">
  </testcase>
  <testcase name="Reservation2 when reservation2 host is under leonidas review .unfreeze_leonidas_payouts does not remove admin_freeze from reservation that isn't accepted yet" time="3.410824693">
  </testcase>
  <testcase name="Reservation2 when reservation2 host is under leonidas review .unfreeze_leonidas_payouts does not remove admin_freeze from reservation in another unaccepted queued_review" time="2.764416935">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2 when reservation2 host is under leonidas review" tests="0" time="0.000196922" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Reservation2" tests="0" time="0.000291873" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationAlteration alteration after reservation has started" tests="1" time="2.711487613" failures="0" errors="0" skipped="0">
  <testcase name="ReservationAlteration alteration after reservation has started should create negative adjustment for amount over paid" time="2.711002076">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationAlteration long term reservation alterations payments after a checkin date change (for hostings with split payouts)" tests="2" time="6.250803005" failures="0" errors="0" skipped="0">
  <testcase name="ReservationAlteration long term reservation alterations payments after a checkin date change (for hostings with split payouts) should apply payout splits correctly on a long term reservation alteration" time="3.097342149">
  </testcase>
  <testcase name="ReservationAlteration long term reservation alterations payments after a checkin date change (for hostings with split payouts) should update line items' release dates appropriately" time="3.152953161">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationAlteration long term reservation alterations payments modify stay length when extending stay by making the start date earlier on a long term reservation" tests="1" time="2.930234615" failures="0" errors="0" skipped="0">
  <testcase name="ReservationAlteration long term reservation alterations payments modify stay length when extending stay by making the start date earlier on a long term reservation should not create duplicate payouts/LineItem or duplicatepayments/Payment2s" time="2.92985299">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationAlteration long term reservation alterations payments modify stay length when extending stay by  on a long term reservation" tests="1" time="3.245135516" failures="0" errors="0" skipped="0">
  <testcase name="ReservationAlteration long term reservation alterations payments modify stay length when extending stay by  on a long term reservation should not create duplicate payouts/LineItem or duplicate payments/Payment2s" time="3.244755588">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationAlteration long term reservation alterations payments modify stay length when moving stay forward on a long term reservation" tests="1" time="3.304811058" failures="0" errors="0" skipped="0">
  <testcase name="ReservationAlteration long term reservation alterations payments modify stay length when moving stay forward on a long term reservation should not create duplicate payouts/LineItem or duplicate payments/Payment2s" time="3.304392479">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationAlteration long term reservation alterations payments modify stay length when shortening stay by making the start date later on a long term reservation" tests="1" time="3.06774786" failures="0" errors="0" skipped="0">
  <testcase name="ReservationAlteration long term reservation alterations payments modify stay length when shortening stay by making the start date later on a long term reservation should not create duplicate payouts/LineItem or duplicate payments/Paymnet2s" time="3.067374955">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationAlteration long term reservation alterations payments modify stay length with security deposit" tests="1" time="3.662827243" failures="0" errors="0" skipped="0">
  <testcase name="ReservationAlteration long term reservation alterations payments modify stay length with security deposit should not count security deposit" time="3.662474892">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationAlteration long term reservation alterations payments modify stay length" tests="0" time="0.000202201" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationAlteration long term reservation alterations payments" tests="3" time="10.196809249" failures="0" errors="0" skipped="0">
  <testcase name="ReservationAlteration long term reservation alterations payments should update line items' release dates appropriately after a checkin date change" time="3.867593021">
  </testcase>
  <testcase name="ReservationAlteration long term reservation alterations payments should not change line items' release dates if checkin did not change" time="3.488246669">
  </testcase>
  <testcase name="ReservationAlteration long term reservation alterations payments should remove payouts when shortening stay by &gt; 31 days on long term reservations" time="2.840256638">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationAlteration long term reservation alterations" tests="8" time="12.903765051" failures="0" errors="0" skipped="0">
  <testcase name="ReservationAlteration long term reservation alterations should have a longterm cancelation policy" time="1.896032214">
  </testcase>
  <testcase name="ReservationAlteration long term reservation alterations should be able to alter: before start, change checkout, 30 days of stay, no extra charge" time="1.393421994">
  </testcase>
  <testcase name="ReservationAlteration long term reservation alterations should be able to alter: before start, change checkout, 15 days of stay, 15 days extra charge" time="1.773841216">
  </testcase>
  <testcase name="ReservationAlteration long term reservation alterations should be able to alter: before start, change checkin, 15 days of stay left, 15 days extra charge" time="1.424956728">
  </testcase>
  <testcase name="ReservationAlteration long term reservation alterations should be able to alter: after start, change checkout, 30 days of stay left, no extra charge" time="1.414856389">
  </testcase>
  <testcase name="ReservationAlteration long term reservation alterations should be able to alter: after start, change checkout, 15 days of stay left, 15 days extra charge" time="1.799494989">
  </testcase>
  <testcase name="ReservationAlteration long term reservation alterations should be able to alter: after start, change checkout, add days, no extra charge" time="1.435522951">
  </testcase>
  <testcase name="ReservationAlteration long term reservation alterations should be able recalculate without fees" time="1.764389095">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationAlteration possible?" tests="8" time="12.163335598" failures="0" errors="0" skipped="0">
  <testcase name="ReservationAlteration possible? should not allow alterations on canceled reservations" time="1.387661119">
  </testcase>
  <testcase name="ReservationAlteration possible? disallows alterations when there are unavailable calendar squares on the new date range" time="1.850751302">
  </testcase>
  <testcase name="ReservationAlteration possible? should allow extending a reservation" time="1.389331624">
  </testcase>
  <testcase name="ReservationAlteration possible? should not allow a subtotal_price of zero" time="1.727108178">
  </testcase>
  <testcase name="ReservationAlteration possible? should not allow a checkin date after checkout" time="1.360976363">
  </testcase>
  <testcase name="ReservationAlteration possible? should allow a checkin date modification if checkin is today" time="1.347539566">
  </testcase>
  <testcase name="ReservationAlteration possible? should not allow a checkin date modification if after checkin" time="1.71960972">
  </testcase>
  <testcase name="ReservationAlteration possible? should allow a checkout date modification if after checkin" time="1.379251411">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationAlteration" tests="0" time="0.000251661" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationController#approve for a legitimate pending reservation when the host accepts when the guest is Facebook-connected" tests="1" time="0.000830547" failures="0" errors="0" skipped="1">
  <testcase name="ReservationController#approve for a legitimate pending reservation when the host accepts when the guest is Facebook-connected should add an open graph notification for the guest (PENDING)" time="0.000247294">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationController#approve for a legitimate pending reservation when the host accepts when there is a message" tests="2" time="4.084556243" failures="0" errors="0" skipped="0">
  <testcase name="ReservationController#approve for a legitimate pending reservation when the host accepts when there is a message should message if reservation involves no ghosts" time="1.952807136">
  </testcase>
  <testcase name="ReservationController#approve for a legitimate pending reservation when the host accepts when there is a message should not message if reservation involves a ghost" time="2.131007581">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
Client attempted to override key: bev with value: 1382135985_BuF961ll+6LdfGSm
Client attempted to override key: bev with value: 1382135987_EMEjjF1eo3jl+UFk
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationController#approve for a legitimate pending reservation when the host accepts" tests="2" time="3.937588371" failures="0" errors="0" skipped="0">
  <testcase name="ReservationController#approve for a legitimate pending reservation when the host accepts should increment the relevant STATSD counters" time="2.206784711">
  </testcase>
  <testcase name="ReservationController#approve for a legitimate pending reservation when the host accepts should set the reservation status to accepted" time="1.729461824">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
Client attempted to override key: bev with value: 1382135980_VbM6853p5dV58yOS
Client attempted to override key: bev with value: 1382135983_v4WIChjb/GvNoRP+
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationController#approve for a legitimate pending reservation" tests="0" time="0.000190397" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationController#approve when the reservation doesn't exist" tests="2" time="2.032973678" failures="0" errors="0" skipped="0">
  <testcase name="ReservationController#approve when the reservation doesn't exist should set the flash notice" time="0.893078016">
  </testcase>
  <testcase name="ReservationController#approve when the reservation doesn't exist should redirect to /home/my_listings" time="1.139334144">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationController#approve" tests="0" time="0.000187353" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationController requested" tests="1" time="1.781813295" failures="0" errors="0" skipped="0">
  <testcase name="ReservationController requested should mark a reservation as should notify air match hosts when submitting that page 5 screen" time="1.781461347">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationController should allow guests to send us feedback on chargebacks" tests="4" time="7.941222549" failures="0" errors="0" skipped="0">
  <testcase name="ReservationController should allow guests to send us feedback on chargebacks shouldn't load the page if the user isn't logged in" time="2.006400521">
  </testcase>
  <testcase name="ReservationController should allow guests to send us feedback on chargebacks shouldn't load the page if the reservation doesn't belong to this user" time="2.277412343">
  </testcase>
  <testcase name="ReservationController should allow guests to send us feedback on chargebacks shouldn't load the page if the payment doesn't have a chargeback flag" time="1.820644504">
  </testcase>
  <testcase name="ReservationController should allow guests to send us feedback on chargebacks should record feedback" time="1.835979384">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationController" tests="0" time="0.000224827" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationFraudReview#should_be_frozen? Host required Verified ID" tests="2" time="3.366554659" failures="0" errors="0" skipped="0">
  <testcase name="ReservationFraudReview#should_be_frozen? Host required Verified ID freezes reservations where the host requires Verified ID" time="2.128799395">
  </testcase>
  <testcase name="ReservationFraudReview#should_be_frozen? Host required Verified ID doesn't freeze reservations where the host doesn't require Verified ID" time="1.236816413">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationFraudReview#should_be_frozen? Last minute reservations" tests="2" time="2.432954276" failures="0" errors="0" skipped="0">
  <testcase name="ReservationFraudReview#should_be_frozen? Last minute reservations are frozen if a guest is in the experiment" time="1.213559742">
  </testcase>
  <testcase name="ReservationFraudReview#should_be_frozen? Last minute reservations aren't frozen if a guest isn't in the experiment" time="1.218993415">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationFraudReview#should_be_frozen? Other Situations:  guest has white glove service" tests="1" time="1.003786171" failures="0" errors="0" skipped="0">
  <testcase name="ReservationFraudReview#should_be_frozen? Other Situations:  guest has white glove service doesn't freeze reservations" time="1.003392552">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationFraudReview#should_be_frozen? Other Situations:  guest in disaster area" tests="3" time="4.261124204" failures="0" errors="0" skipped="0">
  <testcase name="ReservationFraudReview#should_be_frozen? Other Situations:  guest in disaster area doesn't freeze reso" time="1.753173564">
  </testcase>
  <testcase name="ReservationFraudReview#should_be_frozen? Other Situations:  guest in disaster area freezes reso if host requires Verified ID " time="1.265816449">
  </testcase>
  <testcase name="ReservationFraudReview#should_be_frozen? Other Situations:  guest in disaster area doesn't freeze even if it's in Oslo" time="1.241602464">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationFraudReview#should_be_frozen? Other Situations:  guest is checkpoint flagged for reservations" tests="2" time="1.998768301" failures="0" errors="0" skipped="0">
  <testcase name="ReservationFraudReview#should_be_frozen? Other Situations:  guest is checkpoint flagged for reservations logs experiment event" time="0.989063255">
  </testcase>
  <testcase name="ReservationFraudReview#should_be_frozen? Other Situations:  guest is checkpoint flagged for reservations freezes reservation" time="1.009292973">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationFraudReview#should_be_frozen? Other Situations:  guest is long time experienced user" tests="2" time="2.052056441" failures="0" errors="0" skipped="0">
  <testcase name="ReservationFraudReview#should_be_frozen? Other Situations:  guest is long time experienced user doesn't freeze reservations if the host doesn't require checkpoint" time="1.035154832">
  </testcase>
  <testcase name="ReservationFraudReview#should_be_frozen? Other Situations:  guest is long time experienced user does freeze the reso if the host requires verified id" time="1.016386794">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationFraudReview#should_be_frozen? Other Situations: " tests="0" time="0.00017302" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationFraudReview#should_be_frozen? reservations in special markets: Oslo/Stockholm" tests="2" time="2.990768786" failures="0" errors="0" skipped="0">
  <testcase name="ReservationFraudReview#should_be_frozen? reservations in special markets: Oslo/Stockholm are frozen if the hosting is there" time="1.74673773">
  </testcase>
  <testcase name="ReservationFraudReview#should_be_frozen? reservations in special markets: Oslo/Stockholm aren't frozen if the hosting is outside those markets" time="1.243606672">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationFraudReview#should_be_frozen? Reservations made by US guests" tests="2" time="2.794878156" failures="0" errors="0" skipped="0">
  <testcase name="ReservationFraudReview#should_be_frozen? Reservations made by US guests are frozen if the guest is in the experiment" time="1.426166742">
  </testcase>
  <testcase name="ReservationFraudReview#should_be_frozen? Reservations made by US guests aren't frozen if the user isn't in the experiment" time="1.368233497">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationFraudReview#should_be_frozen?" tests="0" time="0.000143232" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationFraudReview" tests="0" time="0.000231162" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationGuestUpdater#results" tests="2" time="0.795032127" failures="0" errors="0" skipped="0">
  <testcase name="ReservationGuestUpdater#results includes the id for each guest that's created or replaced" time="0.397088204">
  </testcase>
  <testcase name="ReservationGuestUpdater#results includes whether or not each guest update was successful" time="0.397434521">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationGuestUpdater#set_guests" tests="5" time="2.458691208" failures="0" errors="0" skipped="0">
  <testcase name="ReservationGuestUpdater#set_guests creates new reservation_users when guest has no ID" time="0.379467866">
  </testcase>
  <testcase name="ReservationGuestUpdater#set_guests updates the names of existing users when email is unchaged" time="0.391335022">
  </testcase>
  <testcase name="ReservationGuestUpdater#set_guests replaces the existing reservation_user if the email has changed" time="0.423835136">
  </testcase>
  <testcase name="ReservationGuestUpdater#set_guests doesn't create a new user for an updated email if it can't destroy the old one" time="0.871264384">
  </testcase>
  <testcase name="ReservationGuestUpdater#set_guests destroys existing guests if fields are cleared out" time="0.391999">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationGuestUpdater#success replacing an existing user" tests="2" time="0.762647854" failures="0" errors="0" skipped="0">
  <testcase name="ReservationGuestUpdater#success replacing an existing user returns false if the old user can't be destroyed" time="0.384934562">
  </testcase>
  <testcase name="ReservationGuestUpdater#success replacing an existing user returns false if the new user can't be created" time="0.377208118">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationGuestUpdater#success" tests="5" time="1.982447588" failures="0" errors="0" skipped="0">
  <testcase name="ReservationGuestUpdater#success returns false if set_guests hasn't been called" time="0.393643959">
  </testcase>
  <testcase name="ReservationGuestUpdater#success returns true if all users were created or updated successfully" time="0.415368666">
  </testcase>
  <testcase name="ReservationGuestUpdater#success returns false if a user couldn't be created" time="0.40113838">
  </testcase>
  <testcase name="ReservationGuestUpdater#success returns false if a user couldn't be updated" time="0.392214627">
  </testcase>
  <testcase name="ReservationGuestUpdater#success returns false if a user couldn't be removed" time="0.379333634">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationGuestUpdater" tests="1" time="0.402889996" failures="0" errors="0" skipped="0">
  <testcase name="ReservationGuestUpdater allows reservation to be retrieved" time="0.402542627">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReservationObserver" tests="1" time="1.667463765" failures="0" errors="0" skipped="0">
  <testcase name="ReservationObserver should call Referral.after_update_reservation" time="1.665790624">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Failure::MultipleWithRetrySuppression#save for a job that doesn't include resque-retry" tests="1" time="0.904014494" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Failure::MultipleWithRetrySuppression#save for a job that doesn't include resque-retry doesn't set an expiration" time="0.903516893">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Failure::MultipleWithRetrySuppression#save" tests="2" time="0.762987316" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Failure::MultipleWithRetrySuppression#save calls the original backend" time="0.377850473">
  </testcase>
  <testcase name="Resque::Failure::MultipleWithRetrySuppression#save sets an expiration on the failure key" time="0.384773311">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Failure::MultipleWithRetrySuppression" tests="0" time="0.000209608" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque #identifier_for_item" tests="3" time="1.131227548" failures="0" errors="0" skipped="0">
  <testcase name="Resque #identifier_for_item returns a sha1 digest" time="0.373478114">
  </testcase>
  <testcase name="Resque #identifier_for_item depends on the class key" time="0.37634445">
  </testcase>
  <testcase name="Resque #identifier_for_item depends on the args key" time="0.380867685">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Job#current_job when invoked after #fail" tests="1" time="0.378401114" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Job#current_job when invoked after #fail returns the internal instance of the current job" time="0.37805659">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Job#current_job when invoked after #perform" tests="1" time="0.38548465" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Job#current_job when invoked after #perform returns the internal instance of the current job" time="0.385167834">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Job#current_job within the job class's on_failure hooks" tests="1" time="0.400264096" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Job#current_job within the job class's on_failure hooks returns the internal instance of the current job" time="0.399834973">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Job#current_job within the job class's #perform" tests="1" time="0.378155498" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Job#current_job within the job class's #perform returns the internal instance of the current job" time="0.377809934">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Job#current_job" tests="0" time="0.00016631" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Job#identifier" tests="1" time="0.391892231" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Job#identifier returns the identifier from the payload" time="0.391545909">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Job#original_args" tests="2" time="0.770890576" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Job#original_args returns the job arguments" time="0.397954202">
  </testcase>
  <testcase name="Resque::Job#original_args is insensitive to mutation of the payload args" time="0.372433466">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Job#perform" tests="1" time="0.426505354" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Job#perform calls the job's perform method" time="0.42619166">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque job without an identifier (and successful)" tests="2" time="0.821712234" failures="0" errors="0" skipped="0">
  <testcase name="Resque job without an identifier (and successful) enqueues and performs a job" time="0.413821974">
  </testcase>
  <testcase name="Resque job without an identifier (and successful) calls the job with the enqueued arguments" time="0.407501558">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque job without an identifier with a failing job (that can be retried)" tests="2" time="0.879639898" failures="0" errors="0" skipped="0">
  <testcase name="Resque job without an identifier with a failing job (that can be retried) enqueues, attempts, and retries a job" time="0.459806413">
  </testcase>
  <testcase name="Resque job without an identifier with a failing job (that can be retried) retries the job with the correct arguments" time="0.419297569">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque job without an identifier with a failing job (that can't be retried)" tests="1" time="0.3878777" failures="0" errors="0" skipped="0">
  <testcase name="Resque job without an identifier with a failing job (that can't be retried) enqueues and attempts a job" time="0.387576165">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque job without an identifier with a failing job" tests="0" time="0.000164058" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque job without an identifier" tests="0" time="0.000137832" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Job" tests="0" time="0.000206947" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#after_perform_retry when the job succeeds" tests="1" time="0.407926366" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Plugins::Retry#after_perform_retry when the job succeeds removes the retry key" time="0.407505363">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#after_perform_retry" tests="0" time="0.000211524" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#before_perform_retry" tests="7" time="2.774220323" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Plugins::Retry#before_perform_retry doesn't prevent the job's perform method from being called" time="0.412244286">
  </testcase>
  <testcase name="Resque::Plugins::Retry#before_perform_retry records the original arguments" time="0.38543473">
  </testcase>
  <testcase name="Resque::Plugins::Retry#before_perform_retry chooses a retry key" time="0.362983736">
  </testcase>
  <testcase name="Resque::Plugins::Retry#before_perform_retry creates the retry key" time="0.434440968">
  </testcase>
  <testcase name="Resque::Plugins::Retry#before_perform_retry sets an expiration on the retry key" time="0.399657332">
  </testcase>
  <testcase name="Resque::Plugins::Retry#before_perform_retry passes the original arguments to #redis_retry_key" time="0.402157533">
  </testcase>
  <testcase name="Resque::Plugins::Retry#before_perform_retry sets retry_attempt to zero on the first attempt" time="0.376336809">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#current_retry_key (across retries)" tests="1" time="0.401201797" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Plugins::Retry#current_retry_key (across retries) is identical" time="0.400842042">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#current_retry_key" tests="0" time="0.000163275" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#identifier when the job has an identifier" tests="1" time="0.38566792" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Plugins::Retry#identifier when the job has an identifier uses it" time="0.385336609">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#identifier when the job lacks an identifier" tests="1" time="0.384963079" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Plugins::Retry#identifier when the job lacks an identifier joins the arguments with dashes" time="0.384536729">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#identifier" tests="0" time="0.00014345" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#on_failure_retry when the job fails (and can be retried)" tests="2" time="0.795208335" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Plugins::Retry#on_failure_retry when the job fails (and can be retried) removes the retry key after all attempts are exhausted" time="0.406629292">
  </testcase>
  <testcase name="Resque::Plugins::Retry#on_failure_retry when the job fails (and can be retried) increments retry_attempts with each attempt" time="0.388132006">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#on_failure_retry when the job fails (and can't be retried)" tests="1" time="0.380736981" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Plugins::Retry#on_failure_retry when the job fails (and can't be retried) removes the retry key" time="0.380431123">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#on_failure_retry when the job fails" tests="0" time="0.000145257" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#on_failure_retry" tests="0" time="0.000165418" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#retry_original_args when the job mutates (and can be retried)" tests="1" time="0.364682499" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Plugins::Retry#retry_original_args when the job mutates (and can be retried) is used to re-enqueue the job" time="0.364338592">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#retry_original_args when the job mutates" tests="1" time="0.39686443" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Plugins::Retry#retry_original_args when the job mutates doesn't change" time="0.39649708">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry#retry_original_args" tests="0" time="0.000165121" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Plugins::Retry" tests="0" time="0.000214595" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque #push" tests="2" time="0.776407016" failures="0" errors="0" skipped="0">
  <testcase name="Resque #push passes the class and args keys through" time="0.405966587">
  </testcase>
  <testcase name="Resque #push appends an identifier" time="0.370032426">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Status#logger" tests="3" time="1.254166891" failures="0" errors="0" skipped="0">
  <testcase name="Resque::Status#logger is an instance of LoggerProxy" time="0.513738365">
  </testcase>
  <testcase name="Resque::Status#logger forwards invocations to Rails.logger" time="0.380760744">
  </testcase>
  <testcase name="Resque::Status#logger can be invoked with an exception in the first argument" time="0.359098287">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque::Status" tests="0" time="0.000220634" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque when a job is failed by unregisteration (that can be retried)" tests="2" time="0.827010768" failures="0" errors="0" skipped="0">
  <testcase name="Resque when a job is failed by unregisteration (that can be retried) re-enqueues and attempts the job" time="0.40511349">
  </testcase>
  <testcase name="Resque when a job is failed by unregisteration (that can be retried) re-enqueues the job with the correct arguments" time="0.421447979">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque when a job is failed by unregisteration" tests="0" time="0.000165425" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque with a failing job (that can be retried)" tests="2" time="1.305470786" failures="0" errors="0" skipped="0">
  <testcase name="Resque with a failing job (that can be retried) enqueues, attempts, and retries a job" time="0.420311775">
  </testcase>
  <testcase name="Resque with a failing job (that can be retried) retries the job with the correct arguments" time="0.884714427">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque with a failing job (that can't be retried)" tests="1" time="0.390068582" failures="0" errors="0" skipped="0">
  <testcase name="Resque with a failing job (that can't be retried) enqueues and attempts a job" time="0.389766565">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque with a failing job" tests="0" time="0.000157732" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque with a successful job" tests="2" time="1.122365716" failures="0" errors="0" skipped="0">
  <testcase name="Resque with a successful job enqueues and performs a job" time="0.704781498">
  </testcase>
  <testcase name="Resque with a successful job calls the job with the enqueued arguments" time="0.417143554">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Resque" tests="0" time="0.00020177" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Review order of reminder emails sent for the guest review" tests="5" time="25.077229001" failures="0" errors="0" skipped="0">
  <testcase name="Review order of reminder emails sent for the guest review should first send the review email with the right template" time="5.101780863">
  </testcase>
  <testcase name="Review order of reminder emails sent for the guest review should then send the reminder review email" time="4.9499546">
  </testcase>
  <testcase name="Review order of reminder emails sent for the guest review should finally send the private review email" time="5.097459752">
  </testcase>
  <testcase name="Review order of reminder emails sent for the guest review but no fourth email." time="4.888659319">
  </testcase>
  <testcase name="Review order of reminder emails sent for the guest review should send no third email if private_feedback_for_airbnb_email is turned off" time="5.038518719">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Review order of reminder emails sent for the host review" tests="3" time="10.627850993" failures="0" errors="0" skipped="0">
  <testcase name="Review order of reminder emails sent for the host review should first send the review email with the right template" time="3.556366537">
  </testcase>
  <testcase name="Review order of reminder emails sent for the host review should then send the reminder email with the right subject" time="4.013399047">
  </testcase>
  <testcase name="Review order of reminder emails sent for the host review should finally send the private review email" time="3.057530263">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Review order of reminder emails sent" tests="0" time="0.000212159" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReviewsController A new host review" tests="2" time="6.435292488" failures="0" errors="0" skipped="0">
  <testcase name="ReviewsController A new host review should not be submitted" time="3.475838825">
  </testcase>
  <testcase name="ReviewsController A new host review should have a Host role" time="2.959011145">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReviewsController A submitted review older than 14 days" tests="2" time="8.200268642" failures="0" errors="0" skipped="0">
  <testcase name="ReviewsController A submitted review older than 14 days should be submitted" time="4.395767072">
  </testcase>
  <testcase name="ReviewsController A submitted review older than 14 days should not be editable" time="3.803964964">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ReviewsController" tests="0" time="0.000244613" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Review within_reminder_range scope" tests="5" time="18.168331316" failures="0" errors="0" skipped="0">
  <testcase name="Review within_reminder_range scope should exclude a review created today" time="0.41430268">
  </testcase>
  <testcase name="Review within_reminder_range scope should exclude a review created yesterday" time="0.363925392">
  </testcase>
  <testcase name="Review within_reminder_range scope should include a review created two days ago" time="0.706208614">
  </testcase>
  <testcase name="Review within_reminder_range scope should include a review from beginning" time="0.974985075">
  </testcase>
  <testcase name="Review within_reminder_range scope should exclude a review from a day before the beginning" time="0.370459283">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Review" tests="0" time="0.000269352" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Rookery" tests="4" time="2.894200744" failures="0" errors="0" skipped="0">
  <testcase name="Rookery should send notification emails for posts" time="1.288621062">
  </testcase>
  <testcase name="Rookery should send admin alerts (via .admin_alert)" time="0.854044986">
  </testcase>
  <testcase name="Rookery should send admin alerts (via .create_from_template)" time="0.367163302">
  </testcase>
  <testcase name="Rookery should enqueue the resque retry job on failure" time="0.383515174">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal availability when calendar service returns not available" tests="1" time="0.857719827" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal availability when calendar service returns not available is false" time="0.857340308">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal availability when dates are not available" tests="1" time="0.000561856" failures="0" errors="0" skipped="1">
  <testcase name="RoomsController#ajax_refresh_subtotal availability when dates are not available is false (PENDING)" time="0.000266929">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal availability when global maximum lenghth of stay is exceeded" tests="1" time="0.909472358" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal availability when global maximum lenghth of stay is exceeded is false" time="0.908977199">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal availability when hosting capacity is exceeded" tests="1" time="1.029661768" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal availability when hosting capacity is exceeded is false" time="1.029196908">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal availability when pricing service returns not available" tests="1" time="0.844889091" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal availability when pricing service returns not available is false" time="0.844476698">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal availability" tests="0" time="0.000189422" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal experiments [include guest fees] when the currency is pounds" tests="1" time="0.885260894" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal experiments [include guest fees] when the currency is pounds returns a converted currency" time="0.884870475">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal experiments [include guest fees]" tests="1" time="1.152268215" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal experiments [include guest fees] includes the fee" time="1.151927665">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal experiments [show breakdown]" tests="1" time="0.911603384" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal experiments [show breakdown] includes the breakdown flag" time="0.91110789">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal experiments" tests="0" time="0.000185486" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal logging when the listing is available" tests="1" time="0.884971656" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal logging when the listing is available logs the pricing event with the pricing payload" time="0.884581238">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal logging when the listing isn't available" tests="1" time="0.871383035" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal logging when the listing isn't available log the pricing event" time="0.871029271">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal logging" tests="1" time="0.89204407" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal logging logs the pricing p3 event" time="0.891738072">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal native currency when pounds" tests="1" time="1.381141421" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal native currency when pounds gives response prices in pounds" time="1.380740597">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal native currency when us dollars" tests="1" time="0.913126986" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal native currency when us dollars gives response prices in us dollars" time="0.912766755">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal native currency" tests="0" time="0.000188259" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal pricing" tests="2" time="2.221787746" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal pricing gives the total price reported by the pricing service" time="1.042274256">
  </testcase>
  <testcase name="RoomsController#ajax_refresh_subtotal pricing gives the price per night as an average over all nights" time="1.179057002">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal response when available" tests="1" time="0.928516065" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal response when available contains the pricing payload" time="0.928121696">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal response when staggered" tests="1" time="0.890339971" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal response when staggered contains the staggered price payload" time="0.889914566">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal response" tests="1" time="1.398237811" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal response contains the base payload" time="1.397942843">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal validation" tests="3" time="3.911393102" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#ajax_refresh_subtotal validation returns an error when the hosting doesn't exist" time="1.657603371">
  </testcase>
  <testcase name="RoomsController#ajax_refresh_subtotal validation returns an error when the checkin date is invalid" time="0.901757479">
  </testcase>
  <testcase name="RoomsController#ajax_refresh_subtotal validation returns an error when the checkout date is invalid" time="1.351451352">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#ajax_refresh_subtotal" tests="0" time="0.000152817" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#calendar_inner_tab2 assigning is visible" tests="1" time="0.874147069" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#calendar_inner_tab2 assigning is visible is always true, always...forever" time="0.87373415">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#calendar_inner_tab2 assigning squares" tests="1" time="0.865544597" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#calendar_inner_tab2 assigning squares should assign squares from calling CalendarSquare.get_squares_for_dates_tng" time="0.864924626">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#calendar_inner_tab2 assigning the month" tests="2" time="1.701827942" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#calendar_inner_tab2 assigning the month should assign the current month if month is not passed" time="0.86095787">
  </testcase>
  <testcase name="RoomsController#calendar_inner_tab2 assigning the month should assign the month passed" time="0.840329098">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#calendar_inner_tab2 assigning the year" tests="2" time="2.301045382" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#calendar_inner_tab2 assigning the year should assign the current year if year is not passed" time="1.430791387">
  </testcase>
  <testcase name="RoomsController#calendar_inner_tab2 assigning the year should assign the year passed" time="0.869579538">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#calendar_inner_tab2 when looking for the listing in question" tests="2" time="1.306161891" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#calendar_inner_tab2 when looking for the listing in question should redirect if it can't find the listing" time="0.4036091">
  </testcase>
  <testcase name="RoomsController#calendar_inner_tab2 when looking for the listing in question should not redirect if it can find the listing" time="0.902007082">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#calendar_inner_tab2 when request is xhr" tests="1" time="0.876920449" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#calendar_inner_tab2 when request is xhr should assign first day, last day and start of month" time="0.876485327">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#calendar_inner_tab2" tests="0" time="0.000207013" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#create when requesting JSON format when the user is logged in already when the room_type is invalid" tests="2" time="1.633249074" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#create when requesting JSON format when the user is logged in already when the room_type is invalid should respond with status set to &quot;error&quot;" time="0.818140784">
  </testcase>
  <testcase name="RoomsController#create when requesting JSON format when the user is logged in already when the room_type is invalid should not create a hosting" time="0.8142598">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#create when requesting JSON format when the user is logged in already" tests="2" time="3.059899263" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#create when requesting JSON format when the user is logged in already should respond with status set to &quot;redirect&quot;" time="1.84121308">
  </testcase>
  <testcase name="RoomsController#create when requesting JSON format when the user is logged in already should create a hosting" time="1.217852642">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
Client attempted to override key: bev with value: 1382136061_Xz/kRacF/9cdHb2u
Client attempted to override key: bev with value: 1382136063_K0ETu4ui5xr3/AlH
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#create when requesting JSON format" tests="0" time="0.000161501" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#create" tests="0" time="0.000164129" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#edit" tests="6" time="7.88696561" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#edit should set @translation_source if hosting has autotranslations" time="1.648930563">
  </testcase>
  <testcase name="RoomsController#edit should not allow guests to edit hostings" time="0.953040788">
  </testcase>
  <testcase name="RoomsController#edit should only allow owner to edit hosting" time="1.746931609">
  </testcase>
  <testcase name="RoomsController#edit should allow owner to edit hosting" time="0.925580486">
  </testcase>
  <testcase name="RoomsController#edit should allow host_callers to edit hostings" time="1.288839628">
  </testcase>
  <testcase name="RoomsController#edit should allow admins to edit hostings" time="1.322647463">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#show" tests="4" time="5.482897919" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#show should redirect if ghost listing, unless the ghost is viewing their own listing or admin" time="1.856682964">
  </testcase>
  <testcase name="RoomsController#show should increment impressions count if user is not logged in" time="1.454601517">
  </testcase>
  <testcase name="RoomsController#show should increment impressions count if user is logged in as non-owner" time="1.280224372">
  </testcase>
  <testcase name="RoomsController#show should not increment impressions count if user is logged in as owner" time="0.890622542">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#update when user is already logged in Creating/Updating Sublet Pricing setting sublet off" tests="1" time="0.983673171" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#update when user is already logged in Creating/Updating Sublet Pricing setting sublet off should create sublet pricing" time="0.983256701">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
Client attempted to override key: bev with value: 1382136084_LlHR3bUGBqGz7UtL
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#update when user is already logged in Creating/Updating Sublet Pricing setting sublet on" tests="1" time="1.031530766" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#update when user is already logged in Creating/Updating Sublet Pricing setting sublet on should create sublet pricing" time="1.031066245">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
Client attempted to override key: bev with value: 1382136085_pCrEBhmQUocLh3Tz
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#update when user is already logged in Creating/Updating Sublet Pricing" tests="0" time="0.000278265" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#update when user is already logged in when creating a new hosting and room_type param is invalid" tests="3" time="2.869870856" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#update when user is already logged in when creating a new hosting and room_type param is invalid should respond with a redirect" time="0.83021698">
  </testcase>
  <testcase name="RoomsController#update when user is already logged in when creating a new hosting and room_type param is invalid should not create a new hosting" time="1.248244693">
  </testcase>
  <testcase name="RoomsController#update when user is already logged in when creating a new hosting and room_type param is invalid should set a flash notice" time="0.790728396">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#update when user is already logged in when creating a new hosting" tests="1" time="1.05202075" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#update when user is already logged in when creating a new hosting should create a new hosting" time="1.051679547">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
Client attempted to override key: bev with value: 1382136079_CFY2vqdL019a2TWR
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#update when user is already logged in when updating an existing hosting" tests="1" time="1.202438359" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController#update when user is already logged in when updating an existing hosting should respond with a redirect" time="1.201995965">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#update when user is already logged in" tests="0" time="0.000234528" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController#update" tests="0" time="0.000255899" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController XHR post #update multilingual hostings for users with autotranslate" tests="3" time="3.992527764" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController XHR post #update multilingual hostings for users with autotranslate should produce a HostingDescription object with where machine_translated is false and source_locale is nil if those params are passed in" time="1.736738042">
  </testcase>
  <testcase name="RoomsController XHR post #update multilingual hostings for users with autotranslate should produce a HostingDescription object with where machine_translated is true and source_locale is a locale if those params are passed in" time="1.07641325">
  </testcase>
  <testcase name="RoomsController XHR post #update multilingual hostings for users with autotranslate should save names and descriptions with English last so that they are preferred" time="1.178690311">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController XHR post #update multilingual hostings" tests="0" time="0.000225988" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController XHR post #update" tests="1" time="1.150514103" failures="0" errors="0" skipped="0">
  <testcase name="RoomsController XHR post #update should update name and description normally" time="1.150151481">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsController" tests="0" time="0.000227687" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsHelper generating hash for cancellation policy page" tests="2" time="0.726289184" failures="0" errors="0" skipped="0">
  <testcase name="RoomsHelper generating hash for cancellation policy page should not error when the id is invalid (out of range or nil)" time="0.368471189">
  </testcase>
  <testcase name="RoomsHelper generating hash for cancellation policy page should return the correct hash values for various Hosting.cancel_policy values" time="0.356689021">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RoomsHelper" tests="0" time="0.000813709" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Catalog" tests="2" time="0.761264953" failures="0" errors="0" skipped="0">
  <testcase name="RouteRules::Catalog should register and retrieve" time="0.395245179">
  </testcase>
  <testcase name="RouteRules::Catalog should register and retrieve via TestController" time="0.365541713">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Controller enabled enforcers" tests="2" time="0.776436665" failures="0" errors="0" skipped="0">
  <testcase name="RouteRules::Controller enabled enforcers should provide default enabled_enforcers for controllers" time="0.37976314">
  </testcase>
  <testcase name="RouteRules::Controller enabled enforcers should allow actions to override enabled_enforcers setting" time="0.396063008">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Controller" tests="2" time="0.756643464" failures="0" errors="0" skipped="0">
  <testcase name="RouteRules::Controller should raise error if register action before register_controller" time="0.389278823">
  </testcase>
  <testcase name="RouteRules::Controller should register action after register_controller" time="0.366875627">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Enforcer enforce without registered enforcers" tests="1" time="0.387371976" failures="0" errors="0" skipped="0">
  <testcase name="RouteRules::Enforcer enforce without registered enforcers does nothing if nothing registered" time="0.387069193">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Enforcer enforce with registered enforcers" tests="5" time="1.894472349" failures="0" errors="0" skipped="0">
  <testcase name="RouteRules::Enforcer enforce with registered enforcers does nothing if empty documentation" time="0.400511619">
  </testcase>
  <testcase name="RouteRules::Enforcer enforce with registered enforcers calls only enabled enforcers" time="0.373456664">
  </testcase>
  <testcase name="RouteRules::Enforcer enforce with registered enforcers ignores invalid enforcer names" time="0.36395956">
  </testcase>
  <testcase name="RouteRules::Enforcer enforce with registered enforcers correctly calls statsd enforcer" time="0.380294626">
  </testcase>
  <testcase name="RouteRules::Enforcer enforce with registered enforcers correctly calls logger enforcer" time="0.375510006">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Enforcer enforce" tests="0" time="0.000143954" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Enforcer extra" tests="1" time="0.384765862" failures="0" errors="0" skipped="0">
  <testcase name="RouteRules::Enforcer extra finds extra non-documented params" time="0.384396693">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Enforcer invalid" tests="1" time="0.360459042" failures="0" errors="0" skipped="0">
  <testcase name="RouteRules::Enforcer invalid returns correct errors for verify_param_type" time="0.360144543">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Enforcer missing" tests="3" time="1.093164279" failures="0" errors="0" skipped="0">
  <testcase name="RouteRules::Enforcer missing finds all missing required params" time="0.371527925">
  </testcase>
  <testcase name="RouteRules::Enforcer missing finds some missing required params" time="0.354762642">
  </testcase>
  <testcase name="RouteRules::Enforcer missing finds no missing required params" time="0.366164999">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Enforcer register" tests="2" time="1.2761857" failures="0" errors="0" skipped="0">
  <testcase name="RouteRules::Enforcer register should have default enforcers" time="0.893012977">
  </testcase>
  <testcase name="RouteRules::Enforcer register registers a procs" time="0.382758705">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Enforcer verify type" tests="25" time="9.98215939" failures="0" errors="0" skipped="0">
  <testcase name="RouteRules::Enforcer verify type verifies integer 1234" time="0.36140611">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies integer  1234 " time="0.364265437">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies integer +1234" time="0.372938854">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies integer -1234" time="0.393654905">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies integer 1234" time="0.383204879">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies integer 12ab34" time="0.383764516">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies integer 12.34" time="0.371242645">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies float 12.34" time="0.35146766">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies float  12.34 " time="0.378901575">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies float +12.34" time="0.369032976">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies float -12.34" time="0.812168077">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies float 12.34" time="0.42525368">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies float -1.673027873032167E-4" time="0.339374565">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies float 8.224323391649857E-4" time="0.342254378">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies float abc" time="0.374905311">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies string 12.34" time="0.515167327">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies string abc" time="0.380865758">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies string [abc]" time="0.381991954">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies string [&quot;one&quot;, &quot;two&quot;]" time="0.42165857">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies array [&quot;one&quot;, &quot;two&quot;]" time="0.371545682">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies array 1,2,3" time="0.394091837">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies object [&quot;one&quot;, &quot;two&quot;]" time="0.373903305">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies object 1,2,3" time="0.372798313">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies object {:one=&gt;&quot;one&quot;}" time="0.374412018">
  </testcase>
  <testcase name="RouteRules::Enforcer verify type verifies invalid hello" time="0.368447356">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Enforcer" tests="0" time="0.000255379" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Routes routes" tests="2" time="0.805306973" failures="0" errors="0" skipped="0">
  <testcase name="RouteRules::Routes routes should correctly stub routes" time="0.406775727">
  </testcase>
  <testcase name="RouteRules::Routes routes should get routes for version" time="0.39805306">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Routes" tests="0" time="0.000237499" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Swagger initialized" tests="2" time="0.797735375" failures="0" errors="0" skipped="0">
  <testcase name="RouteRules::Swagger initialized converts route/action definition into swagger api docs" time="0.414767294">
  </testcase>
  <testcase name="RouteRules::Swagger initialized generates dashboard" time="0.382454531">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RouteRules::Swagger" tests="2" time="0.886359727" failures="0" errors="0" skipped="0">
  <testcase name="RouteRules::Swagger initializes charts" time="0.396842301">
  </testcase>
  <testcase name="RouteRules::Swagger supports nested_documentation" time="0.488954243">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RSAClient" tests="2" time="0.735914728" failures="0" errors="0" skipped="0">
  <testcase name="RSAClient should post user data" time="0.364560457">
  </testcase>
  <testcase name="RSAClient should post question answers" time="0.37068525">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#create_or_update_monthly_pricing_for_hosting_and_schedule_dates existing schedule2s for hosting and schedule dates" tests="1" time="0.850311803" failures="0" errors="0" skipped="0">
  <testcase name="Schedule2#create_or_update_monthly_pricing_for_hosting_and_schedule_dates existing schedule2s for hosting and schedule dates should update the schedule2 if monthly pricing is blank" time="0.849930305">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#create_or_update_monthly_pricing_for_hosting_and_schedule_dates no existing schedule2s for hosting and schedule dates" tests="2" time="2.23082663" failures="0" errors="0" skipped="0">
  <testcase name="Schedule2#create_or_update_monthly_pricing_for_hosting_and_schedule_dates no existing schedule2s for hosting and schedule dates should create schedule2s with appropriate monthly pricing" time="1.366280042">
  </testcase>
  <testcase name="Schedule2#create_or_update_monthly_pricing_for_hosting_and_schedule_dates no existing schedule2s for hosting and schedule dates should not create a schedule2 with a blank monthly pricing" time="0.864059258">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#create_or_update_monthly_pricing_for_hosting_and_schedule_dates" tests="0" time="0.000195391" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#create_or_update_weekly_pricing_for_hosting_and_schedule_dates existing schedule2s for hosting and schedule dates" tests="1" time="1.120005567" failures="0" errors="0" skipped="0">
  <testcase name="Schedule2#create_or_update_weekly_pricing_for_hosting_and_schedule_dates existing schedule2s for hosting and schedule dates should update the schedule2 if weekly pricing is blank" time="1.119599668">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#create_or_update_weekly_pricing_for_hosting_and_schedule_dates no existing schedule2s for hosting and schedule dates" tests="2" time="2.067772453" failures="0" errors="0" skipped="0">
  <testcase name="Schedule2#create_or_update_weekly_pricing_for_hosting_and_schedule_dates no existing schedule2s for hosting and schedule dates should create schedule2s with appropriate weekly pricing" time="1.179216284">
  </testcase>
  <testcase name="Schedule2#create_or_update_weekly_pricing_for_hosting_and_schedule_dates no existing schedule2s for hosting and schedule dates should not create a schedule2 with a blank weekly pricing" time="0.888089688">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#create_or_update_weekly_pricing_for_hosting_and_schedule_dates" tests="0" time="0.000201691" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2.get_schedule_during_dates" tests="2" time="2.181620049" failures="0" errors="0" skipped="0">
  <testcase name="Schedule2.get_schedule_during_dates should get schedule2s for listing ignoring duplicates" time="1.287118655">
  </testcase>
  <testcase name="Schedule2.get_schedule_during_dates should get schedule2s for listing ignoring duplicates in order of schedule_date ASC" time="0.894012041">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#is_available_during_dates?" tests="6" time="6.130788202" failures="0" errors="0" skipped="0">
  <testcase name="Schedule2#is_available_during_dates? should be available if no schedule2 exists during the specified period" time="0.870872868">
  </testcase>
  <testcase name="Schedule2#is_available_during_dates? should be available if a schedule2 exists outside the specified period" time="1.18843863">
  </testcase>
  <testcase name="Schedule2#is_available_during_dates? should be available if a schedule2 exists in the specified period for another hosting" time="0.897474849">
  </testcase>
  <testcase name="Schedule2#is_available_during_dates? should not be available if a schedule2 exists in the specified period for this hosting" time="0.895814815">
  </testcase>
  <testcase name="Schedule2#is_available_during_dates? should not be available if a schedule2 exists in the specified period for this hosting and the period is just 1 day long" time="0.926389212">
  </testcase>
  <testcase name="Schedule2#is_available_during_dates? should be available if a schedule2 exists where is_available is true" time="1.350889555">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#monthly_pricing_for_hosting_id_indexed_by_week" tests="1" time="0.84566998" failures="0" errors="0" skipped="0">
  <testcase name="Schedule2#monthly_pricing_for_hosting_id_indexed_by_week returns an array of hashes with keys and values for week and price" time="0.845307214">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#num_available_nights_from_start" tests="5" time="4.558642723" failures="0" errors="0" skipped="0">
  <testcase name="Schedule2#num_available_nights_from_start should report 10 nights available for a 10-night period if no schedule2 exists during that period" time="0.80557072">
  </testcase>
  <testcase name="Schedule2#num_available_nights_from_start should report 8 nights available for a 10-night period if a schedule2 exists on the 9th night" time="0.795174093">
  </testcase>
  <testcase name="Schedule2#num_available_nights_from_start should report 3 nights available for a 10-night period if a schedule2 exists on the 4th night and even if there are no schedule2's after" time="0.911365777">
  </testcase>
  <testcase name="Schedule2#num_available_nights_from_start should report 3 nights available for a 10-night period if an available schedule2 exists on the 2nd night and an unavailable schedule2 exists on the 4th night" time="1.121175622">
  </testcase>
  <testcase name="Schedule2#num_available_nights_from_start should report 0 nights available if an unavailable schedule2 exists on the 1st night" time="0.924524565">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#schedules_by_date_for_dates with duplicate dates" tests="2" time="0.786105843" failures="0" errors="0" skipped="0">
  <testcase name="Schedule2#schedules_by_date_for_dates with duplicate dates should return most recently created schedules by date" time="0.40122605">
  </testcase>
  <testcase name="Schedule2#schedules_by_date_for_dates with duplicate dates should return most recently created schedules by date and delete duplicates" time="0.384400571">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#schedules_by_date_for_dates without duplicates" tests="1" time="0.39515378" failures="0" errors="0" skipped="0">
  <testcase name="Schedule2#schedules_by_date_for_dates without duplicates should return schedules by date" time="0.394756948">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#schedules_by_date_for_dates" tests="0" time="0.000200139" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#schedules_by_date_for_range with duplicate dates" tests="2" time="0.800062733" failures="0" errors="0" skipped="0">
  <testcase name="Schedule2#schedules_by_date_for_range with duplicate dates should return most recently created schedules by date" time="0.389108016">
  </testcase>
  <testcase name="Schedule2#schedules_by_date_for_range with duplicate dates should return most recently created schedules by date and delete duplicates" time="0.410376998">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#schedules_by_date_for_range without duplicates" tests="1" time="0.416251469" failures="0" errors="0" skipped="0">
  <testcase name="Schedule2#schedules_by_date_for_range without duplicates should return schedules by date" time="0.415829619">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#schedules_by_date_for_range" tests="0" time="0.000205815" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#sublet_pricing_for_hosting_id" tests="1" time="0.89140793" failures="0" errors="0" skipped="0">
  <testcase name="Schedule2#sublet_pricing_for_hosting_id returns an array of hashes with sublet checkin, checkout, monthly price, weekly price" time="0.891052802">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2#weekly_pricing_for_hosting_id_indexed_by_week" tests="1" time="0.900782927" failures="0" errors="0" skipped="0">
  <testcase name="Schedule2#weekly_pricing_for_hosting_id_indexed_by_week returns an array of hashes with keys and values for week and price" time="0.900409381">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Schedule2" tests="0" time="0.00023404" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ScreenshotMaker from_url_with_phrases" tests="1" time="0.41722055" failures="0" errors="0" skipped="1">
  <testcase name="ScreenshotMaker from_url_with_phrases should be able to screenshot airbnb.com and find some phrases on it (PENDING)" time="0.416899745">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ScreenshotMaker" tests="0" time="0.000240189" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search cacheable" tests="1" time="0.778296117" failures="0" errors="0" skipped="0">
  <testcase name="Search cacheable the search results should not be cached if and only if admin passes inst param" time="0.777887082">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SearchController formatted search results on index" tests="16" time="77.438050112" failures="0" errors="0" skipped="0">
  <testcase name="SearchController formatted search results on index should not raise an error from an empty string in the 'code' param" time="5.353731597">
  </testcase>
  <testcase name="SearchController formatted search results on index should ignore a 'code' param for a code that doesn't exist" time="4.696770203">
  </testcase>
  <testcase name="SearchController formatted search results on index should populate a single result" time="4.848044205">
  </testcase>
  <testcase name="SearchController formatted search results on index should return a City title for a USA search" time="4.765405874">
  </testcase>
  <testcase name="SearchController formatted search results on index should return a City title for a non-USA search" time="4.935960078">
  </testcase>
  <testcase name="SearchController formatted search results on index should return a specific title for a more detailed search" time="4.756762067">
  </testcase>
  <testcase name="SearchController formatted search results on index should return a city title for a wordy search for a city" time="4.866400087">
  </testcase>
  <testcase name="SearchController formatted search results on index should return a Country title for a vague search" time="5.053014108">
  </testcase>
  <testcase name="SearchController formatted search results on index should set canonical URL for searches with property_type_id set" time="4.673717107">
  </testcase>
  <testcase name="SearchController formatted search results on index should set canonical URL for searches with type set" time="4.967340016">
  </testcase>
  <testcase name="SearchController formatted search results on index should set canonical URL for searches with neighborhoods set" time="4.668722607">
  </testcase>
  <testcase name="SearchController formatted search results on index should set canonical URL for searches for natural features and colloquial areas" time="4.834809079">
  </testcase>
  <testcase name="SearchController formatted search results on index should not set canonical URL for searches with any other parameters set" time="4.743672298">
  </testcase>
  <testcase name="SearchController formatted search results on index should not include location in canonical URL for searches that don't return results" time="5.052887948">
  </testcase>
  <testcase name="SearchController formatted search results on index should grok oldstyle location URLs" time="4.685232568">
  </testcase>
  <testcase name="SearchController formatted search results on index should grok new-style location URLs" time="4.533444248">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SearchController personalization on index" tests="1" time="5.445103798" failures="0" errors="0" skipped="0">
  <testcase name="SearchController personalization on index should skip personalization if user is not logged in" time="5.444765426">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SearchController" tests="0" time="0.000257877" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search#fetch_prices" tests="2" time="0.773156796" failures="0" errors="0" skipped="0">
  <testcase name="Search#fetch_prices uses different cache keys for different options" time="0.399039665">
  </testcase>
  <testcase name="Search#fetch_prices uses the same cache key for equivalent queries" time="0.373267895">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SearchHelper canonical location strings" tests="3" time="5.003091505" failures="0" errors="0" skipped="0">
  <testcase name="SearchHelper canonical location strings should create canonical location strings" time="0.383506648">
  </testcase>
  <testcase name="SearchHelper canonical location strings should create localized canonical location strings" time="3.171840796">
  </testcase>
  <testcase name="SearchHelper canonical location strings should create canonical natural feature strings" time="1.446411822">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SearchHelper#is_bot?" tests="2" time="0.798928278" failures="0" errors="0" skipped="0">
  <testcase name="SearchHelper#is_bot? returns true for bot user agents" time="0.423456699">
  </testcase>
  <testcase name="SearchHelper#is_bot? returns false for Chrome, Firefox and Safari user agents" time="0.373520079">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SearchHelper#is_ie_7_9?" tests="3" time="1.164233649" failures="0" errors="0" skipped="0">
  <testcase name="SearchHelper#is_ie_7_9? returns true for Internet Explorer 7, 8, 9 user agents" time="0.395485723">
  </testcase>
  <testcase name="SearchHelper#is_ie_7_9? returns false for Internet Explorer &gt; 9 user agents" time="0.387664337">
  </testcase>
  <testcase name="SearchHelper#is_ie_7_9? returns false for Chrome, Firefox and Safari user agents" time="0.378678924">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SearchHelper location to url parameter transformation" tests="2" time="4.022356753" failures="0" errors="0" skipped="0">
  <testcase name="SearchHelper location to url parameter transformation should transform location to url parameter" time="3.195816295">
  </testcase>
  <testcase name="SearchHelper location to url parameter transformation should transform url parameter to location" time="0.824571106">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SearchHelper" tests="0" time="0.001796895" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SearchIndexObserver" tests="10" time="15.359070379" failures="0" errors="0" skipped="0">
  <testcase name="SearchIndexObserver should reindex when a user is ghosted" time="1.186321317">
  </testcase>
  <testcase name="SearchIndexObserver should NOT reindex when an unavailable hosting changes" time="1.770101776">
  </testcase>
  <testcase name="SearchIndexObserver should reindex when a hosting changes availability" time="1.222990224">
  </testcase>
  <testcase name="SearchIndexObserver should reindex when a hosting changes a specific value" time="1.206965914">
  </testcase>
  <testcase name="SearchIndexObserver should reindex when a user with available hostings changes names" time="1.227788224">
  </testcase>
  <testcase name="SearchIndexObserver should NOT reindex when a user with unavailable hostings changes names" time="1.2852748">
  </testcase>
  <testcase name="SearchIndexObserver should reindex only a user's availble hostings when changing names" time="2.742967223">
  </testcase>
  <testcase name="SearchIndexObserver should reindex all available listings for a user when changing names" time="2.263057861">
  </testcase>
  <testcase name="SearchIndexObserver should reindex a hosting when it gains amenities" time="1.246069455">
  </testcase>
  <testcase name="SearchIndexObserver should reindex a hosting when it loses amenities" time="1.205929648">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search initializer" tests="1" time="0.388928705" failures="0" errors="0" skipped="0">
  <testcase name="Search initializer creates search query for the backend" time="0.388575068">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search price ranges" tests="4" time="1.545189646" failures="0" errors="0" skipped="0">
  <testcase name="Search price ranges should know how to round to two sigfigs" time="0.398812896">
  </testcase>
  <testcase name="Search price ranges should know how to round to two pretty sigfigs" time="0.392880896">
  </testcase>
  <testcase name="Search price ranges should convert USD ranges to other currencies nicely" time="0.384109226">
  </testcase>
  <testcase name="Search price ranges should automatically compute ranges for basic currencies" time="0.368674221">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search#process_params currency setting" tests="3" time="1.155257407" failures="0" errors="0" skipped="0">
  <testcase name="Search#process_params currency setting should process I18n.currency if no currency param given" time="0.392797866">
  </testcase>
  <testcase name="Search#process_params currency setting should process currency param" time="0.400783288">
  </testcase>
  <testcase name="Search#process_params currency setting should ignore invalid currency param" time="0.361098345">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search#process_params daily pricing" tests="3" time="1.186548108" failures="0" errors="0" skipped="0">
  <testcase name="Search#process_params daily pricing should reset min or max price if either of them is outside the range" time="0.405656926">
  </testcase>
  <testcase name="Search#process_params daily pricing should reset min or max if they are equal to the range min or max" time="0.392693093">
  </testcase>
  <testcase name="Search#process_params daily pricing should not break if prices are nil" time="0.387620395">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search#process_params debug parameter" tests="3" time="1.934193819" failures="0" errors="0" skipped="0">
  <testcase name="Search#process_params debug parameter should ignore deb parameter for non-signedin users" time="0.375737827">
  </testcase>
  <testcase name="Search#process_params debug parameter should ignore deb parameter for non-admins" time="0.737419951">
  </testcase>
  <testcase name="Search#process_params debug parameter should use deb parameter for admin users" time="0.820436246">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search#process_params explicit experiments parameter" tests="3" time="2.528576502" failures="0" errors="0" skipped="0">
  <testcase name="Search#process_params explicit experiments parameter should ignore exps parameter for non-signedin users" time="0.400146222">
  </testcase>
  <testcase name="Search#process_params explicit experiments parameter should ignore exps parameter for non-admins" time="1.307211162">
  </testcase>
  <testcase name="Search#process_params explicit experiments parameter should use exps parameter for admin users" time="0.820434682">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search#process_params instant book filter parameter" tests="1" time="0.443482874" failures="0" errors="0" skipped="0">
  <testcase name="Search#process_params instant book filter parameter the ib parameter should activate instant book filter for all users" time="0.443080255">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search#process_params monthly pricing" tests="3" time="1.181006044" failures="0" errors="0" skipped="0">
  <testcase name="Search#process_params monthly pricing should reset min or max price if either of them is outside the range" time="0.384998421">
  </testcase>
  <testcase name="Search#process_params monthly pricing should reset min or max if they are equal to the range min or max" time="0.40568629">
  </testcase>
  <testcase name="Search#process_params monthly pricing should not break if prices are nil" time="0.389693157">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search#process_params ranking options parameter" tests="3" time="1.946920997" failures="0" errors="0" skipped="0">
  <testcase name="Search#process_params ranking options parameter should ignore opts parameter for non-signedin users" time="0.399160473">
  </testcase>
  <testcase name="Search#process_params ranking options parameter should ignore opts parameter for non-admins" time="0.762829906">
  </testcase>
  <testcase name="Search#process_params ranking options parameter should use opts parameter for admin users" time="0.78435378">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search#process_params" tests="6" time="2.958033183" failures="0" errors="0" skipped="0">
  <testcase name="Search#process_params should process various forms of room types" time="0.37653764">
  </testcase>
  <testcase name="Search#process_params should process various forms of neighborhoods" time="0.371616478">
  </testcase>
  <testcase name="Search#process_params should process various forms of property types" time="0.508221412">
  </testcase>
  <testcase name="Search#process_params should process various forms of hosting amenities" time="0.942233624">
  </testcase>
  <testcase name="Search#process_params should process various forms of languages" time="0.354988218">
  </testcase>
  <testcase name="Search#process_params should set nights as a Fixnum" time="0.403636544">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search#relationship_count" tests="1" time="0.415564523" failures="0" errors="0" skipped="0">
  <testcase name="Search#relationship_count should return the number of relationships" time="0.415200553">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search#relationships_for_api" tests="1" time="0.413114504" failures="0" errors="0" skipped="0">
  <testcase name="Search#relationships_for_api should return a properly formatted json hash" time="0.412722525">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search#set_experiment_ids" tests="4" time="1.161172396" failures="0" errors="0" skipped="1">
  <testcase name="Search#set_experiment_ids should disable experiments if :no_experiments is passed" time="0.368274362">
  </testcase>
  <testcase name="Search#set_experiment_ids should disable experiments if 'no_experiments' is passed" time="0.392419601">
  </testcase>
  <testcase name="Search#set_experiment_ids keep experiment_ids default if no search experiments are defined (PENDING)" time="0.000111813">
    <skipped/>
  </testcase>
  <testcase name="Search#set_experiment_ids store experiments with names starting with search_ in experiment_ids" time="0.3997749">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search sorting" tests="1" time="0.376128152" failures="0" errors="0" skipped="0">
  <testcase name="Search sorting not settings the sort param should equal sort=0" time="0.375773776">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search support filtering by collections, groups, etc" tests="1" time="0.387045007" failures="0" errors="0" skipped="0">
  <testcase name="Search support filtering by collections, groups, etc should filter by collection" time="0.386694447">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search support for international dates" tests="10" time="3.853770649" failures="0" errors="0" skipped="0">
  <testcase name="Search support for international dates should properly parse English (:en) dates" time="0.395251904">
  </testcase>
  <testcase name="Search support for international dates should properly parse German (:de) dates" time="0.379797728">
  </testcase>
  <testcase name="Search support for international dates should properly parse Russian (:ru) dates" time="0.370883412">
  </testcase>
  <testcase name="Search support for international dates should properly parse Italian (:it) dates" time="0.388653568">
  </testcase>
  <testcase name="Search support for international dates should properly parse French (:fr) dates" time="0.370564866">
  </testcase>
  <testcase name="Search support for international dates should properly parse Spanish (:es) dates" time="0.376178903">
  </testcase>
  <testcase name="Search support for international dates should properly parse Portuguese (:pt) dates" time="0.399301739">
  </testcase>
  <testcase name="Search support for international dates should properly parse Chinese (:zh) dates" time="0.378328712">
  </testcase>
  <testcase name="Search support for international dates should properly parse Japanese (:ja) dates" time="0.393109387">
  </testcase>
  <testcase name="Search support for international dates should properly parse Korean (:ko) dates" time="0.400406425">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search support searching by location" tests="13" time="5.9354392" failures="0" errors="0" skipped="0">
  <testcase name="Search support searching by location should sort by points within city-based markets" time="0.511676165">
  </testcase>
  <testcase name="Search support searching by location should sort by rank within countries" time="0.387345556">
  </testcase>
  <testcase name="Search support searching by location should set search params for US states" time="0.399833153">
  </testcase>
  <testcase name="Search support searching by location should use points sort and an appropriate radius for counties or governmental areas that are bigger than cities but smaller than states" time="0.944191904">
  </testcase>
  <testcase name="Search support searching by location should use points sort for non-market cities" time="0.47105438">
  </testcase>
  <testcase name="Search support searching by location should use points sort for neighborhoods" time="0.414865602">
  </testcase>
  <testcase name="Search support searching by location should use distance sort for addresses or points of interest" time="0.404167596">
  </testcase>
  <testcase name="Search support searching by location should sort by points for cities that take require filtering" time="0.415951873">
  </testcase>
  <testcase name="Search support searching by location should be able to sort by distance" time="0.398218582">
  </testcase>
  <testcase name="Search support searching by location should be able to sort by newest" time="0.403657641">
  </testcase>
  <testcase name="Search support searching by location should search by rank when no geo is specified" time="0.402041945">
  </testcase>
  <testcase name="Search support searching by location should use suggested bounds for international regions / states like sicily" time="0.375700671">
  </testcase>
  <testcase name="Search support searching by location should set geo_x fields with geocoded query location data" time="0.405008517">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search support searching by map" tests="2" time="0.750697854" failures="0" errors="0" skipped="0">
  <testcase name="Search support searching by map should sort by points" time="0.366440496">
  </testcase>
  <testcase name="Search support searching by map should ignore location and have no radius" time="0.383793801">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search title and meta description" tests="6" time="3.197723937" failures="0" errors="0" skipped="0">
  <testcase name="Search title and meta description has a default title" time="0.369759907">
  </testcase>
  <testcase name="Search title and meta description should properly title searches for different locations" time="0.431641819">
  </testcase>
  <testcase name="Search title and meta description should title searches for property types" time="0.559230344">
  </testcase>
  <testcase name="Search title and meta description should title searches with amenities" time="0.45306219">
  </testcase>
  <testcase name="Search title and meta description should title searches for monthly sublets" time="0.415328796">
  </testcase>
  <testcase name="Search title and meta description should title searches for keywords" time="0.967716374">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Search" tests="0" time="0.000278641" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SendgridController#parsed_reply reply via email" tests="2" time="9.700917947" failures="0" errors="0" skipped="0">
  <testcase name="SendgridController#parsed_reply reply via email should post given an inbound thread reply email" time="5.120178704">
  </testcase>
  <testcase name="SendgridController#parsed_reply reply via email should correct handle emails that are encoded with something other than utf-8" time="4.580191648">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SendgridController#parsed_reply store to s3" tests="1" time="0.743263014" failures="0" errors="0" skipped="0">
  <testcase name="SendgridController#parsed_reply store to s3 should put emails into an s3 bucket (to field)" time="0.741975996">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SendgridController#parsed_reply" tests="0" time="0.000177049" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SendgridController" tests="0" time="0.000417864" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SignupPresenter prefilled signup fields" tests="1" time="0.369618795" failures="0" errors="0" skipped="0">
  <testcase name="SignupPresenter prefilled signup fields defaults to the existing value" time="0.359231008">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SignupPresenter the signup options when the user is fb auth" tests="2" time="1.302242074" failures="0" errors="0" skipped="0">
  <testcase name="SignupPresenter the signup options when the user is fb auth shows the fb signup option" time="0.924462402">
  </testcase>
  <testcase name="SignupPresenter the signup options when the user is fb auth shows the email signup as a link" time="0.377319222">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SignupPresenter the signup options when the user is from China (where FB is banned)" tests="2" time="0.767958571" failures="0" errors="0" skipped="0">
  <testcase name="SignupPresenter the signup options when the user is from China (where FB is banned) shows the expanded email form" time="0.390191798">
  </testcase>
  <testcase name="SignupPresenter the signup options when the user is from China (where FB is banned) doesnt show the other elements" time="0.377362201">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SignupPresenter the signup options when the user is not fb auth" tests="2" time="0.761022831" failures="0" errors="0" skipped="0">
  <testcase name="SignupPresenter the signup options when the user is not fb auth shows the facebook signup option" time="0.362941284">
  </testcase>
  <testcase name="SignupPresenter the signup options when the user is not fb auth shows the email expand cta" time="0.397598654">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SignupPresenter the signup options with a modal customization param when signup_mode=1 (standard fb + email)" tests="2" time="0.715914983" failures="0" errors="0" skipped="0">
  <testcase name="SignupPresenter the signup options with a modal customization param when signup_mode=1 (standard fb + email) shows the email expand cta" time="0.358238997">
  </testcase>
  <testcase name="SignupPresenter the signup options with a modal customization param when signup_mode=1 (standard fb + email) shows the standard signup button" time="0.357240899">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SignupPresenter the signup options with a modal customization param when signup_mode=2 (expand email)" tests="2" time="0.733682284" failures="0" errors="0" skipped="0">
  <testcase name="SignupPresenter the signup options with a modal customization param when signup_mode=2 (expand email) shows the expanded email form" time="0.373290278">
  </testcase>
  <testcase name="SignupPresenter the signup options with a modal customization param when signup_mode=2 (expand email) shows the standard signup button" time="0.359944486">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SignupPresenter the signup options with a modal customization param when signup_mode=3 (only email)" tests="2" time="0.732149104" failures="0" errors="0" skipped="0">
  <testcase name="SignupPresenter the signup options with a modal customization param when signup_mode=3 (only email) shows the expanded email form" time="0.364235899">
  </testcase>
  <testcase name="SignupPresenter the signup options with a modal customization param when signup_mode=3 (only email) doesnt show the other elements" time="0.367390827">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SignupPresenter the signup options with a modal customization param" tests="0" time="0.000176765" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SignupPresenter the signup options" tests="0" time="0.000144605" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SignupPresenter" tests="0" time="0.000212927" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SimilarListings safe_houses" tests="2" time="3.946075025" failures="0" errors="0" skipped="0">
  <testcase name="SimilarListings safe_houses returns listings from non-ghost users" time="2.086202759">
  </testcase>
  <testcase name="SimilarListings safe_houses returns no listings from ghosted users" time="1.850486572">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SimilarListings" tests="0" time="0.000202357" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SmartHelp" tests="9" time="4.467970585" failures="0" errors="0" skipped="0">
  <testcase name="SmartHelp should return suggestions for the whole thread" time="0.961052265">
  </testcase>
  <testcase name="SmartHelp should show help when users try to go offline" time="0.45257759">
  </testcase>
  <testcase name="SmartHelp should show the parking help text" time="0.419189428">
  </testcase>
  <testcase name="SmartHelp should show the pictures help text" time="0.417518288">
  </testcase>
  <testcase name="SmartHelp should show the address help text" time="0.432008213">
  </testcase>
  <testcase name="SmartHelp should do show the payment help text" time="0.513859508">
  </testcase>
  <testcase name="SmartHelp should show the special offer help text" time="0.394612021">
  </testcase>
  <testcase name="SmartHelp should show the cleaning fee text" time="0.428628775">
  </testcase>
  <testcase name="SmartHelp should show the internet help text" time="0.444447998">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Snapshot S3 storage of data" tests="6" time="14.57355891" failures="0" errors="0" skipped="0">
  <testcase name="Snapshot S3 storage of data should attempt to store data on S3" time="4.101597196">
  </testcase>
  <testcase name="Snapshot S3 storage of data should return data from db if not stored on s3" time="0.72456569">
  </testcase>
  <testcase name="Snapshot S3 storage of data should still save if S3 is broken" time="4.212362737">
  </testcase>
  <testcase name="Snapshot S3 storage of data should show stored data" time="0.818329003">
  </testcase>
  <testcase name="Snapshot S3 storage of data should show unstored data" time="3.951051922">
  </testcase>
  <testcase name="Snapshot S3 storage of data returns valid json data" time="0.764691903">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Snapshot" tests="0" time="0.000251282" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="spec_helper methods pending_on_jenkins not on Jenkins" tests="2" time="0.756316638" failures="0" errors="0" skipped="0">
  <testcase name="spec_helper methods pending_on_jenkins not on Jenkins runs the test if not on jenkins" time="0.357112943">
  </testcase>
  <testcase name="spec_helper methods pending_on_jenkins not on Jenkins runs regardless of date" time="0.397166329">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="spec_helper methods pending_on_jenkins on Jenkins" tests="3" time="1.148489611" failures="0" errors="0" skipped="0">
  <testcase name="spec_helper methods pending_on_jenkins on Jenkins skips the test" time="0.378369456">
  </testcase>
  <testcase name="spec_helper methods pending_on_jenkins on Jenkins expires" time="0.377475367">
  </testcase>
  <testcase name="spec_helper methods pending_on_jenkins on Jenkins lasts for 5 days" time="0.391488752">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="spec_helper methods pending_on_jenkins" tests="0" time="0.000640568" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="spec_helper methods" tests="0" time="0.001612506" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="StayAttempt from AirMatchRequest" tests="7" time="7.916943072" failures="0" errors="0" skipped="3">
  <testcase name="StayAttempt from AirMatchRequest should populate metadata" time="2.244623447">
  </testcase>
  <testcase name="StayAttempt from AirMatchRequest should show initial event" time="1.703599623">
  </testcase>
  <testcase name="StayAttempt from AirMatchRequest should show a host reply" time="1.752287946">
  </testcase>
  <testcase name="StayAttempt from AirMatchRequest should show a guest reply" time="2.205091804">
  </testcase>
  <testcase name="StayAttempt from AirMatchRequest should show an ignored thread (PENDING)" time="0.000240226">
    <skipped/>
  </testcase>
  <testcase name="StayAttempt from AirMatchRequest should show a preapproval (PENDING)" time="0.010100529">
    <skipped/>
  </testcase>
  <testcase name="StayAttempt from AirMatchRequest should show an accepted preapproval (PENDING)" time="0.000149515">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="StayAttempt from AirMatchTrip" tests="1" time="4.125125117" failures="0" errors="0" skipped="0">
  <testcase name="StayAttempt from AirMatchTrip should populate StayAttempts" time="4.124720283">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="StayAttempt" tests="0" time="0.000226818" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="StickyFlag when Redis is down" tests="2" time="1.327417826" failures="0" errors="0" skipped="0">
  <testcase name="StickyFlag when Redis is down should set the flag locally" time="0.441277654">
  </testcase>
  <testcase name="StickyFlag when Redis is down should unset the flag locally" time="0.885545544">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="StickyFlag when Redis is up" tests="2" time="0.735845747" failures="0" errors="0" skipped="0">
  <testcase name="StickyFlag when Redis is up should set the flag in redis" time="0.372904538">
  </testcase>
  <testcase name="StickyFlag when Redis is up should set the flag in redis" time="0.362510958">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="StickyFlag" tests="0" time="0.000212488" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="StickySet data manipulation" tests="7" time="3.457239025" failures="0" errors="0" skipped="0">
  <testcase name="StickySet data manipulation should persist elements through Redis" time="0.397551225">
  </testcase>
  <testcase name="StickySet data manipulation should handle addition of elements" time="0.419566548">
  </testcase>
  <testcase name="StickySet data manipulation should handle persistant addition of elements" time="0.948030135">
  </testcase>
  <testcase name="StickySet data manipulation should handle removal of elements" time="0.425759459">
  </testcase>
  <testcase name="StickySet data manipulation should handle persistant removal of elements" time="0.423657418">
  </testcase>
  <testcase name="StickySet data manipulation should handle clearing of elements" time="0.448979197">
  </testcase>
  <testcase name="StickySet data manipulation should handle persistant clearing of elements" time="0.392752879">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="StickySet data reload" tests="2" time="0.000812686" failures="0" errors="0" skipped="2">
  <testcase name="StickySet data reload shouldn't reload from Redis before the TTL (PENDING)" time="0.000224049">
    <skipped/>
  </testcase>
  <testcase name="StickySet data reload should reload from Redis after the TTL (PENDING)" time="0.000182661">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="StickySet" tests="0" time="0.000203422" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="stub_trebuchet get_feature_names" tests="2" time="0.710572015" failures="0" errors="0" skipped="0">
  <testcase name="stub_trebuchet get_feature_names supports string experiment name" time="0.350755365">
  </testcase>
  <testcase name="stub_trebuchet get_feature_names supports symbol experiment name" time="0.35393859">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="stub_trebuchet launch?" tests="2" time="0.697577361" failures="0" errors="0" skipped="0">
  <testcase name="stub_trebuchet launch? supports string experiment name" time="0.352205224">
  </testcase>
  <testcase name="stub_trebuchet launch? supports symbol experiment name" time="0.344994256">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="stub_trebuchet" tests="0" time="0.00019264" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SubletPrice After creating a &gt;=1 month sublet get sublet price" tests="1" time="1.256082064" failures="0" errors="0" skipped="0">
  <testcase name="SubletPrice After creating a &gt;=1 month sublet get sublet price returns the correct sublet price" time="1.255741362">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SubletPrice After creating a &gt;=1 month sublet remove sublet" tests="1" time="1.382357875" failures="0" errors="0" skipped="0">
  <testcase name="SubletPrice After creating a &gt;=1 month sublet remove sublet returns nil" time="1.381967531">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SubletPrice After creating a &gt;=1 month sublet" tests="0" time="0.000196501" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SubletPrice Before creating a sublet .get_sublet_dates_if_available" tests="1" time="0.94676508" failures="0" errors="0" skipped="0">
  <testcase name="SubletPrice Before creating a sublet .get_sublet_dates_if_available returns nil" time="0.94638775">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SubletPrice Before creating a sublet .get_sublet" tests="1" time="0.918364472" failures="0" errors="0" skipped="0">
  <testcase name="SubletPrice Before creating a sublet .get_sublet returns nil" time="0.918013716">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SubletPrice Before creating a sublet" tests="0" time="0.000170589" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SubletPrice" tests="0" time="0.000279212" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SwiftypeClient explode_de_query" tests="15" time="6.234060603" failures="0" errors="0" skipped="0">
  <testcase name="SwiftypeClient explode_de_query should not alter query that doesn't use special characters" time="0.361458704">
  </testcase>
  <testcase name="SwiftypeClient explode_de_query should replace uses of &#228;" time="0.404921236">
  </testcase>
  <testcase name="SwiftypeClient explode_de_query should replace uses of ae" time="0.364622267">
  </testcase>
  <testcase name="SwiftypeClient explode_de_query should replace uses of &#196;" time="0.86982891">
  </testcase>
  <testcase name="SwiftypeClient explode_de_query should replace uses of Ae" time="0.362780631">
  </testcase>
  <testcase name="SwiftypeClient explode_de_query should replace uses of &#246;" time="0.39071755">
  </testcase>
  <testcase name="SwiftypeClient explode_de_query should replace uses of oe" time="0.359202472">
  </testcase>
  <testcase name="SwiftypeClient explode_de_query should replace uses of &#214;" time="0.398309314">
  </testcase>
  <testcase name="SwiftypeClient explode_de_query should replace uses of Oe" time="0.363673728">
  </testcase>
  <testcase name="SwiftypeClient explode_de_query should replace uses of &#252;" time="0.389326396">
  </testcase>
  <testcase name="SwiftypeClient explode_de_query should replace uses of ue" time="0.357746266">
  </testcase>
  <testcase name="SwiftypeClient explode_de_query should replace uses of &#220;" time="0.347000247">
  </testcase>
  <testcase name="SwiftypeClient explode_de_query should replace uses of Ue" time="0.53087908">
  </testcase>
  <testcase name="SwiftypeClient explode_de_query should replace uses of &#223;" time="0.350455184">
  </testcase>
  <testcase name="SwiftypeClient explode_de_query should replace uses of ss" time="0.38125187">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SwiftypeClient filter_records_by_faq_experiment" tests="6" time="3.598856249" failures="0" errors="0" skipped="0">
  <testcase name="SwiftypeClient filter_records_by_faq_experiment should remove FAQ records that should be swapped other FAQs" time="0.549885468">
  </testcase>
  <testcase name="SwiftypeClient filter_records_by_faq_experiment should remove any FAQ records that should not be launched" time="0.500606114">
  </testcase>
  <testcase name="SwiftypeClient filter_records_by_faq_experiment should remove any FAQ records that should not be launched, and support nil user" time="0.513954934">
  </testcase>
  <testcase name="SwiftypeClient filter_records_by_faq_experiment should not remove FAQ records that should not be swapped for other FAQs" time="0.493076133">
  </testcase>
  <testcase name="SwiftypeClient filter_records_by_faq_experiment should not remove FAQ records that don't have a Trebuchet mapping" time="1.017488706">
  </testcase>
  <testcase name="SwiftypeClient filter_records_by_faq_experiment should remove all instances of the same FAQ id" time="0.522954677">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SwiftypeClient filter_records_by_platform" tests="2" time="0.800728101" failures="0" errors="0" skipped="0">
  <testcase name="SwiftypeClient filter_records_by_platform filters out any FAQs that don't match the given platform" time="0.390022634">
  </testcase>
  <testcase name="SwiftypeClient filter_records_by_platform doesn't filter out FAQs that match the given platform" time="0.410292542">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SwiftypeClient get_records_by_faq_id" tests="1" time="0.361725746" failures="0" errors="0" skipped="0">
  <testcase name="SwiftypeClient get_records_by_faq_id should group by FAQ id, filtering out non-FAQ results" time="0.361398159">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SwiftypeClient search platform" tests="2" time="0.760746976" failures="0" errors="0" skipped="0">
  <testcase name="SwiftypeClient search platform filters by platform if option present" time="0.396702506">
  </testcase>
  <testcase name="SwiftypeClient search platform doesn't filter by platform if option not present" time="0.363489863">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SwiftypeClient search" tests="0" time="0.00016446" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SwiftypeClient str_replace_hash" tests="1" time="0.368867986" failures="0" errors="0" skipped="0">
  <testcase name="SwiftypeClient str_replace_hash should replace characters in the hash that's passed" time="0.368578109">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SwiftypeClient" tests="0" time="0.000250026" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TaxAttribution.create_for_payout_info" tests="4" time="4.263683853" failures="0" errors="0" skipped="0">
  <testcase name="TaxAttribution.create_for_payout_info creates new tax attributions" time="0.928377925">
  </testcase>
  <testcase name="TaxAttribution.create_for_payout_info revives an old tax attributions with matching params" time="0.868568487">
  </testcase>
  <testcase name="TaxAttribution.create_for_payout_info disables &quot;hosting&quot; attributions when a new attribution is created" time="1.213509357">
  </testcase>
  <testcase name="TaxAttribution.create_for_payout_info creates new tax attributions where tax_info_id is nil" time="1.252610192">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TaxAttribution" tests="0" time="0.000263809" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Taxes::AttributionsController#create" tests="5" time="6.050672451" failures="0" errors="0" skipped="0">
  <testcase name="Taxes::AttributionsController#create assigns a tax form to a payout info" time="1.035565146">
  </testcase>
  <testcase name="Taxes::AttributionsController#create assigns a nil (default) to a payout info" time="1.367233537">
  </testcase>
  <testcase name="Taxes::AttributionsController#create does not allow another user to change it" time="1.14713702">
  </testcase>
  <testcase name="Taxes::AttributionsController#create does not allow a standard admin to make changes" time="1.266124895">
  </testcase>
  <testcase name="Taxes::AttributionsController#create allows a tax admin to make changes" time="1.232517784">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Taxes::AttributionsController" tests="0" time="0.000467416" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Taxes::FormsController#create" tests="4" time="4.331116571" failures="0" errors="0" skipped="0">
  <testcase name="Taxes::FormsController#create sets some things automatically" time="0.770638856">
  </testcase>
  <testcase name="Taxes::FormsController#create complains if an unsupported form type is specified" time="1.090844852">
  </testcase>
  <testcase name="Taxes::FormsController#create does not allow a standard admin to create" time="1.20192222">
  </testcase>
  <testcase name="Taxes::FormsController#create allows a tax admin to create" time="1.266974427">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Taxes::FormsController default forms" tests="2" time="1.705557268" failures="0" errors="0" skipped="0">
  <testcase name="Taxes::FormsController default forms updates other forms to not be default when making one default" time="0.905359618">
  </testcase>
  <testcase name="Taxes::FormsController default forms does not allow a user to set a is_default to false" time="0.799679325">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Taxes::FormsController#destroy / #undestroy" tests="7" time="8.20155497" failures="0" errors="0" skipped="0">
  <testcase name="Taxes::FormsController#destroy / #undestroy does not allow regular users to delete" time="0.76450026">
  </testcase>
  <testcase name="Taxes::FormsController#destroy / #undestroy does not allow a standard admin to delete" time="1.654447633">
  </testcase>
  <testcase name="Taxes::FormsController#destroy / #undestroy allows a tax admin to delete" time="1.237179235">
  </testcase>
  <testcase name="Taxes::FormsController#destroy / #undestroy does not allow a deleted form to be re-deleted" time="1.149617451">
  </testcase>
  <testcase name="Taxes::FormsController#destroy / #undestroy does not allow regular users to undelete" time="0.772495394">
  </testcase>
  <testcase name="Taxes::FormsController#destroy / #undestroy allows a tax admin to undelete" time="1.469746479">
  </testcase>
  <testcase name="Taxes::FormsController#destroy / #undestroy does not allow an undeleted form to be re-undeleted" time="1.152606702">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Taxes::FormsController#index" tests="4" time="4.628427111" failures="0" errors="0" skipped="0">
  <testcase name="Taxes::FormsController#index returns an array of forms" time="1.399093719">
  </testcase>
  <testcase name="Taxes::FormsController#index does not show old or deleted forms" time="0.86792827">
  </testcase>
  <testcase name="Taxes::FormsController#index shows forms (including deleted) to a standard (not tax) admin" time="1.18439142">
  </testcase>
  <testcase name="Taxes::FormsController#index shows forms (including deleted) to a tax admin" time="1.176346838">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Taxes::FormsController security" tests="3" time="3.94088228" failures="0" errors="0" skipped="0">
  <testcase name="Taxes::FormsController security does not let a random person view another persons forms" time="1.185030693">
  </testcase>
  <testcase name="Taxes::FormsController security does not let a random person view forms using view_as" time="1.627989876">
  </testcase>
  <testcase name="Taxes::FormsController security always shows an obscured tax id" time="1.127286084">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Taxes::FormsController#show" tests="5" time="5.545186522" failures="0" errors="0" skipped="0">
  <testcase name="Taxes::FormsController#show returns one form by uid" time="1.078337016">
  </testcase>
  <testcase name="Taxes::FormsController#show does not allow use of normal id" time="0.893944217">
  </testcase>
  <testcase name="Taxes::FormsController#show does not find an old or deleted form" time="1.27494147">
  </testcase>
  <testcase name="Taxes::FormsController#show allows a standard admin to view" time="1.148607325">
  </testcase>
  <testcase name="Taxes::FormsController#show allows a tax admin to view" time="1.148581033">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Taxes::FormsController#update" tests="5" time="6.28211279" failures="0" errors="0" skipped="0">
  <testcase name="Taxes::FormsController#update does not allow users to update certain fields" time="1.28346108">
  </testcase>
  <testcase name="Taxes::FormsController#update ignores partial birthdates" time="1.180638322">
  </testcase>
  <testcase name="Taxes::FormsController#update updates the birthdate if given a valid date" time="1.146440124">
  </testcase>
  <testcase name="Taxes::FormsController#update does not allow a standard admin to update" time="1.1220608">
  </testcase>
  <testcase name="Taxes::FormsController#update allows a tax admin to update any field" time="1.548618337">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Taxes::FormsController" tests="0" time="0.000225252" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TaxInfo#as_json" tests="5" time="4.242667702" failures="0" errors="0" skipped="0">
  <testcase name="TaxInfo#as_json should output the partial ssn via as_json" time="0.765596132">
  </testcase>
  <testcase name="TaxInfo#as_json should output the partial ein via as_json" time="0.776685324">
  </testcase>
  <testcase name="TaxInfo#as_json should output the uid in place of the id" time="0.794359394">
  </testcase>
  <testcase name="TaxInfo#as_json should output the class name as type" time="0.765499261">
  </testcase>
  <testcase name="TaxInfo#as_json should output the display name" time="1.13974369">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TaxInfo#display_name" tests="3" time="2.894262572" failures="0" errors="0" skipped="0">
  <testcase name="TaxInfo#display_name should be full_name if no dba_name" time="1.358691334">
  </testcase>
  <testcase name="TaxInfo#display_name should be dba_name if set" time="0.767715041">
  </testcase>
  <testcase name="TaxInfo#display_name should fall back to user's name" time="0.767228176">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TaxInfo#form_name" tests="1" time="0.758300025" failures="0" errors="0" skipped="0">
  <testcase name="TaxInfo#form_name should output nice form names" time="0.757954288">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TaxInfo.is_valid_tin?" tests="9" time="7.744599568" failures="0" errors="0" skipped="0">
  <testcase name="TaxInfo.is_valid_tin? rejects short/long tins" time="0.749670765">
  </testcase>
  <testcase name="TaxInfo.is_valid_tin? rejects the same digit repeated" time="0.770988294">
  </testcase>
  <testcase name="TaxInfo.is_valid_tin? rejects ***00****" time="1.107795009">
  </testcase>
  <testcase name="TaxInfo.is_valid_tin? rejects 98765432*" time="0.767984989">
  </testcase>
  <testcase name="TaxInfo.is_valid_tin? rejects 000*" time="1.320259368">
  </testcase>
  <testcase name="TaxInfo.is_valid_tin? rejects *0000" time="0.762470838">
  </testcase>
  <testcase name="TaxInfo.is_valid_tin? rejects 666*" time="0.755897766">
  </testcase>
  <testcase name="TaxInfo.is_valid_tin? rejects 123456789" time="0.751855558">
  </testcase>
  <testcase name="TaxInfo.is_valid_tin? allows anything else through" time="0.756222776">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TaxInfo.need_tax_info_for_user?" tests="8" time="18.804778685" failures="0" errors="0" skipped="0">
  <testcase name="TaxInfo.need_tax_info_for_user? returns false if the user has a current tax info" time="2.042863844">
  </testcase>
  <testcase name="TaxInfo.need_tax_info_for_user? returns true if no tax info and US resos exist for the user" time="2.403792962">
  </testcase>
  <testcase name="TaxInfo.need_tax_info_for_user? returns false if no tax info and US resos that are new" time="2.632771">
  </testcase>
  <testcase name="TaxInfo.need_tax_info_for_user? returns true if no tax info and US resos that are cancelled" time="2.076592557">
  </testcase>
  <testcase name="TaxInfo.need_tax_info_for_user? returns false if no tax info and US resos that are from last year" time="2.548987086">
  </testcase>
  <testcase name="TaxInfo.need_tax_info_for_user? returns false if the user has no tax info, but no US resos" time="2.680784527">
  </testcase>
  <testcase name="TaxInfo.need_tax_info_for_user? returns false if the user has no tax info, US resos, no payouts" time="2.028207227">
  </testcase>
  <testcase name="TaxInfo.need_tax_info_for_user? returns false if the user has no tax info, US resos, old payouts" time="2.38961542">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TaxInfo scopes" tests="2" time="2.184461907" failures="0" errors="0" skipped="0">
  <testcase name="TaxInfo scopes should not have a default scope" time="1.353027248">
  </testcase>
  <testcase name="TaxInfo scopes should have a &quot;current&quot; scope that leaves out old and deleted forms" time="0.830893821">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TaxInfo#soft_delete" tests="2" time="2.228238253" failures="0" errors="0" skipped="0">
  <testcase name="TaxInfo#soft_delete soft deletes the form and sets attributions to disabled" time="1.396916249">
  </testcase>
  <testcase name="TaxInfo#soft_delete soft deletes the form and sets the first active form to default" time="0.830878037">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TaxInfo#soft_undelete" tests="1" time="0.76335015" failures="0" errors="0" skipped="0">
  <testcase name="TaxInfo#soft_undelete soft undeletes the form" time="0.762992795">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TaxInfo.ssn_for" tests="4" time="5.174648073" failures="0" errors="0" skipped="0">
  <testcase name="TaxInfo.ssn_for should return the ssn if the names match, even a little fuzzy" time="1.754588324">
  </testcase>
  <testcase name="TaxInfo.ssn_for should have the option to return an encrypted ssn" time="1.145129331">
  </testcase>
  <testcase name="TaxInfo.ssn_for should return nil if one or both of the user names don't match" time="1.151538526">
  </testcase>
  <testcase name="TaxInfo.ssn_for should return the ssn if the names match" time="1.122650422">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TaxInfo#tax_id_formatted" tests="7" time="5.756572974" failures="0" errors="0" skipped="0">
  <testcase name="TaxInfo#tax_id_formatted should show the partial ssn when calling tax_id_formatted with no options" time="0.760568019">
  </testcase>
  <testcase name="TaxInfo#tax_id_formatted should show the partial ein when calling tax_id_formatted with no options" time="0.74477947">
  </testcase>
  <testcase name="TaxInfo#tax_id_formatted should default to ssn for invalid tax_id_type" time="0.822555833">
  </testcase>
  <testcase name="TaxInfo#tax_id_formatted should show the partial ssn when calling tax_id_formatted with full" time="0.758908507">
  </testcase>
  <testcase name="TaxInfo#tax_id_formatted should show the partial ein when calling tax_id_formatted with full" time="0.748818978">
  </testcase>
  <testcase name="TaxInfo#tax_id_formatted should default to ssn for invalid tax_id_type with full" time="0.761915138">
  </testcase>
  <testcase name="TaxInfo#tax_id_formatted should return nil if no tax_id exists" time="1.157975207">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TaxInfo#tax_id_raw" tests="1" time="1.173289001" failures="0" errors="0" skipped="0">
  <testcase name="TaxInfo#tax_id_raw should return the full decrypted tin with no formatting" time="1.172964203">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TaxInfo" tests="0" time="0.000231285" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TestimonialsServiceController#post" tests="2" time="1.948013421" failures="0" errors="0" skipped="0">
  <testcase name="TestimonialsServiceController#post should return a 500 when the testimonial service times out" time="1.115948486">
  </testcase>
  <testcase name="TestimonialsServiceController#post should return a 500 when it can't connect to the testimonial service" time="0.831594462">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TestimonialsServiceController" tests="0" time="0.00022924" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessage choose_text_message_locale_and_encoding" tests="1" time="0.768690473" failures="0" errors="0" skipped="0">
  <testcase name="TextMessage choose_text_message_locale_and_encoding should work" time="0.768332213">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessage determine_message_type" tests="2" time="2.001935754" failures="0" errors="0" skipped="0">
  <testcase name="TextMessage determine_message_type should send unicode if the body has unicode characters" time="1.179424059">
  </testcase>
  <testcase name="TextMessage determine_message_type should not send unicode if the body has only GSM7 characters" time="0.821933761">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessage.incoming message" tests="2" time="5.091496745" failures="0" errors="0" skipped="0">
  <testcase name="TextMessage.incoming message creates new question2_post" time="2.680937554">
  </testcase>
  <testcase name="TextMessage.incoming message does not create new question2_post if a user is ghost" time="2.410079402">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessage.incoming reservation_alteration_approved" tests="2" time="6.278552243" failures="0" errors="0" skipped="0">
  <testcase name="TextMessage.incoming reservation_alteration_approved creates a new question2_post" time="3.243252108">
  </testcase>
  <testcase name="TextMessage.incoming reservation_alteration_approved does not create a new question2_post if guest is ghost" time="3.034840531">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessage.incoming reservation_host_request" tests="3" time="6.762727025" failures="0" errors="0" skipped="0">
  <testcase name="TextMessage.incoming reservation_host_request accepts a pending reservation" time="2.191821548">
  </testcase>
  <testcase name="TextMessage.incoming reservation_host_request does not accept a retracted reservation" time="2.320119506">
  </testcase>
  <testcase name="TextMessage.incoming reservation_host_request should not allow ghosted user to accept a reservation" time="2.2501052">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessage.incoming reservation" tests="2" time="4.257199153" failures="0" errors="0" skipped="0">
  <testcase name="TextMessage.incoming reservation creates a new question2_post" time="2.214096583">
  </testcase>
  <testcase name="TextMessage.incoming reservation does not create new question2_post if sender (host) is ghost" time="2.042533803">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessage.incoming user" tests="2" time="4.077599521" failures="0" errors="0" skipped="0">
  <testcase name="TextMessage.incoming user creates a new question2_post" time="1.847395378">
  </testcase>
  <testcase name="TextMessage.incoming user does not create new question2_post if guest is ghost" time="2.229717679">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessage.incoming" tests="1" time="0.905682258" failures="0" errors="0" skipped="0">
  <testcase name="TextMessage.incoming responds to HELP" time="0.905310692">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessage.matching_push_notification_opened?" tests="2" time="1.67471356" failures="0" errors="0" skipped="0">
  <testcase name="TextMessage.matching_push_notification_opened? returns true if the user opened a push notification with the same template" time="0.856493409">
  </testcase>
  <testcase name="TextMessage.matching_push_notification_opened? returns false if the user did not open a push notification with the same template" time="0.81772824">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessageTemplate help" tests="2" time="1.650469693" failures="0" errors="0" skipped="0">
  <testcase name="TextMessageTemplate help renders for one-way SMS" time="0.80613199">
  </testcase>
  <testcase name="TextMessageTemplate help renders for two-way SMS" time="0.843757667">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessageTemplate reservation" tests="3" time="7.102108455" failures="0" errors="0" skipped="0">
  <testcase name="TextMessageTemplate reservation renders for unaccepted reservation" time="2.399999773">
  </testcase>
  <testcase name="TextMessageTemplate reservation renders for accepted reservation" time="2.673146739">
  </testcase>
  <testcase name="TextMessageTemplate reservation renders for accepted reservation with phone number" time="2.028365911">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessage templates reservation remplate" tests="5" time="13.00067534" failures="0" errors="0" skipped="0">
  <testcase name="TextMessage templates reservation remplate should render reservation template" time="2.655619541">
  </testcase>
  <testcase name="TextMessage templates reservation remplate should render reservation template in Spanish" time="2.609698651">
  </testcase>
  <testcase name="TextMessage templates reservation remplate should remove accents when sending Spanish to US number" time="2.451139251">
  </testcase>
  <testcase name="TextMessage templates reservation remplate should truncate to 70 chars in Japanese" time="2.669093593">
  </testcase>
  <testcase name="TextMessage templates reservation remplate should truncate to 160 chars in Chinese if template has only GSM7 characters" time="2.614321092">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessage templates user template" tests="1" time="1.64876978" failures="0" errors="0" skipped="0">
  <testcase name="TextMessage templates user template should render user template" time="1.64843723">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessage templates" tests="0" time="0.000222479" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessageTemplate" tests="0" time="0.000267244" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TextMessage" tests="1" time="1.770256058" failures="0" errors="0" skipped="0">
  <testcase name="TextMessage renders user template" time="1.769887042">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TranslateController" tests="10" time="14.160996713" failures="0" errors="0" skipped="0">
  <testcase name="TranslateController should work for proofreaders" time="1.929255752">
  </testcase>
  <testcase name="TranslateController should report error in phrase translation validation" time="1.182333435">
  </testcase>
  <testcase name="TranslateController should work for translators without proofreader role" time="1.343812584">
  </testcase>
  <testcase name="TranslateController should let people add comments" time="1.673650448">
  </testcase>
  <testcase name="TranslateController should let people adopt and acknowledge comments" time="2.126216934">
  </testcase>
  <testcase name="TranslateController should update Traditional Chinese translation when a Simplified translation is made" time="1.308547679">
  </testcase>
  <testcase name="TranslateController should update Catalan translation when a new Spanish translation is made" time="0.826041829">
  </testcase>
  <testcase name="TranslateController should create a zh-TW translation when a new zh-HK translation is made" time="1.374553244">
  </testcase>
  <testcase name="TranslateController should add existing phrase to collection" time="0.91843289">
  </testcase>
  <testcase name="TranslateController should add new phrases to collection and set screenshot" time="1.47565757">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TranslationFinancier compute monthly translator payments" tests="3" time="4.615193032" failures="0" errors="0" skipped="0">
  <testcase name="TranslationFinancier compute monthly translator payments should pay for last month's translation" time="1.578139096">
  </testcase>
  <testcase name="TranslationFinancier compute monthly translator payments should pay less for verification" time="1.798265118">
  </testcase>
  <testcase name="TranslationFinancier compute monthly translator payments should keep track of translated and verified word count in new regime" time="1.238126573">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TranslationFinancier" tests="0" time="0.000208748" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TranslationGlossary basic glossary action" tests="3" time="1.175098484" failures="0" errors="0" skipped="0">
  <testcase name="TranslationGlossary basic glossary action should load glossary" time="0.357913811">
  </testcase>
  <testcase name="TranslationGlossary basic glossary action should find relevant glossary items" time="0.357914064">
  </testcase>
  <testcase name="TranslationGlossary basic glossary action should prepare simple data structure" time="0.36986281">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TranslationGlossary" tests="0" time="0.00022268" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TranslationPriority priority_pages" tests="6" time="18.603780331" failures="0" errors="0" skipped="1">
  <testcase name="TranslationPriority priority_pages should compute set of priority pages" time="3.20722171">
  </testcase>
  <testcase name="TranslationPriority priority_pages should measure priority phrase progress" time="3.123531853">
  </testcase>
  <testcase name="TranslationPriority priority_pages should list somebody's recent work" time="3.127069287">
  </testcase>
  <testcase name="TranslationPriority priority_pages should sample somebody's recent work" time="2.844621981">
  </testcase>
  <testcase name="TranslationPriority priority_pages pages_by_translation_priority (PENDING)" time="3.121300152">
    <skipped/>
  </testcase>
  <testcase name="TranslationPriority priority_pages pages_by_translation_priority with unused phrases" time="3.179156687">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TranslationPriority" tests="0" time="0.000264319" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TripProfile message depersonalization:" tests="2" time="0.833607844" failures="0" errors="0" skipped="0">
  <testcase name="TripProfile message depersonalization: should remove names from messages" time="0.433109134">
  </testcase>
  <testcase name="TripProfile message depersonalization: should leave non-name intros in messages" time="0.400031664">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TripProfile" tests="0" time="0.00025956" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Trust::BouncerService#client" tests="2" time="0.885476939" failures="0" errors="0" skipped="0">
  <testcase name="Trust::BouncerService#client creates a Bouncer client" time="0.491688416">
  </testcase>
  <testcase name="Trust::BouncerService#client memoizes the client" time="0.393175571">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Trust::BouncerService" tests="0" time="0.008155773" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Trust::RemoveExternalService multiplexes to the correct service" tests="3" time="2.484834891" failures="0" errors="0" skipped="0">
  <testcase name="Trust::RemoveExternalService multiplexes to the correct service should find facebook" time="0.722216026">
  </testcase>
  <testcase name="Trust::RemoveExternalService multiplexes to the correct service should find linkedin" time="0.731403571">
  </testcase>
  <testcase name="Trust::RemoveExternalService multiplexes to the correct service should find linked_in" time="1.030666244">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Trust::RemoveExternalService removes the proper stuff" tests="4" time="4.265499923" failures="0" errors="0" skipped="0">
  <testcase name="Trust::RemoveExternalService removes the proper stuff for facebook" time="0.910909532">
  </testcase>
  <testcase name="Trust::RemoveExternalService removes the proper stuff for linkedin" time="0.847639944">
  </testcase>
  <testcase name="Trust::RemoveExternalService removes the proper stuff for xing" time="1.550919284">
  </testcase>
  <testcase name="Trust::RemoveExternalService removes the proper stuff for google" time="0.955221414">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Trust::RemoveExternalService" tests="0" time="0.000255372" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Trust::Scoring::NetworkTrustworthinessScore" tests="1" time="1.07569842" failures="0" errors="0" skipped="0">
  <testcase name="Trust::Scoring::NetworkTrustworthinessScore should return a score between 0 and 1 for a user" time="1.075297183">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Trust::Scoring::TrustworthinessScore" tests="1" time="0.81087135" failures="0" errors="0" skipped="0">
  <testcase name="Trust::Scoring::TrustworthinessScore should return a score between -1 and 1 for a user" time="0.81039465">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Trust::UserVerifiedId verified id experiments" tests="2" time="1.530585145" failures="0" errors="0" skipped="0">
  <testcase name="Trust::UserVerifiedId verified id experiments correctly identifies that a user saw an experiment" time="0.749977821">
  </testcase>
  <testcase name="Trust::UserVerifiedId verified id experiments correctly identifies when a user saw the control" time="0.779920951">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Trust::UserVerifiedId" tests="0" time="0.000297645" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TungstenSupport::Caching::Observer key generation from url" tests="3" time="2.242072364" failures="0" errors="0" skipped="0">
  <testcase name="TungstenSupport::Caching::Observer key generation from url should not expire on safe field updates" time="0.724848961">
  </testcase>
  <testcase name="TungstenSupport::Caching::Observer key generation from url should expire the correct url on unsafe field updates" time="0.757210992">
  </testcase>
  <testcase name="TungstenSupport::Caching::Observer key generation from url should return the correct cache key for the given options" time="0.75339351">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TungstenSupport::Caching::Observer key generation with child caches" tests="3" time="2.780532639" failures="0" errors="0" skipped="0">
  <testcase name="TungstenSupport::Caching::Observer key generation with child caches should blow the parent cache on child cache expirations" time="0.774344134">
  </testcase>
  <testcase name="TungstenSupport::Caching::Observer key generation with child caches should not unnecessarily expire sibling caches" time="0.763102896">
  </testcase>
  <testcase name="TungstenSupport::Caching::Observer key generation with child caches should generate the correct logging prefixes" time="1.242529327">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TungstenSupport::Caching::Observer key generation" tests="0" time="0.00016708" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TungstenSupport::Caching::Observer manual expiration" tests="2" time="1.475006694" failures="0" errors="0" skipped="0">
  <testcase name="TungstenSupport::Caching::Observer manual expiration should not expire the cache on safe attribute change" time="0.751041875">
  </testcase>
  <testcase name="TungstenSupport::Caching::Observer manual expiration should expire the cache on unsafe attribute change" time="0.723548444">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TungstenSupport::Caching::Observer multiple observers" tests="2" time="1.523513244" failures="0" errors="0" skipped="0">
  <testcase name="TungstenSupport::Caching::Observer multiple observers should not overwrite each others class variables" time="0.757981574">
  </testcase>
  <testcase name="TungstenSupport::Caching::Observer multiple observers should not share nodes" time="0.765021065">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TungstenSupport::Caching::Observer" tests="0" time="0.00020878" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TungstenSupport::ContactInfoScrubber" tests="1" time="1.252843104" failures="0" errors="0" skipped="0">
  <testcase name="TungstenSupport::ContactInfoScrubber should filter full names in some countries" time="1.252394732">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TwoFactor backup codes" tests="2" time="1.747793711" failures="0" errors="0" skipped="0">
  <testcase name="TwoFactor backup codes should allow backup codes to be used only once" time="0.764100213">
  </testcase>
  <testcase name="TwoFactor backup codes should never expire and continue to work once" time="0.983196064">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TwoFactor disable two-factor" tests="1" time="0.408784737" failures="0" errors="0" skipped="0">
  <testcase name="TwoFactor disable two-factor should not require two-factor once it's been disabled" time="0.408389304">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TwoFactor enable two-factor" tests="5" time="1.875462621" failures="0" errors="0" skipped="0">
  <testcase name="TwoFactor enable two-factor should not require two-factor before it's been enabled" time="0.36515734">
  </testcase>
  <testcase name="TwoFactor enable two-factor should not require two-factor before it's been activated" time="0.401756599">
  </testcase>
  <testcase name="TwoFactor enable two-factor should not enable two-factor if activation code is wrong" time="0.372156825">
  </testcase>
  <testcase name="TwoFactor enable two-factor should enable two-factor if the code is correct" time="0.38043327">
  </testcase>
  <testcase name="TwoFactor enable two-factor should require two-factor once it's been enabled" time="0.355137296">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TwoFactor remember" tests="2" time="0.844711955" failures="0" errors="0" skipped="0">
  <testcase name="TwoFactor remember should not require two-factor if rememebered" time="0.427359297">
  </testcase>
  <testcase name="TwoFactor remember should require two-factor if rememebered secret is wrong" time="0.416853085">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TwoFactor temporary codes" tests="2" time="0.780020257" failures="0" errors="0" skipped="0">
  <testcase name="TwoFactor temporary codes should work once before expiration" time="0.401499425">
  </testcase>
  <testcase name="TwoFactor temporary codes should not work once expired" time="0.377998503">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TwoFactor" tests="0" time="0.347267449" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UpdateUserFacebookJob with friends" tests="1" time="0.900778696" failures="0" errors="0" skipped="0">
  <testcase name="UpdateUserFacebookJob with friends should create a facebook friends list" time="0.900328361">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UpdateUserFacebookJob with no friends" tests="1" time="1.330736183" failures="0" errors="0" skipped="0">
  <testcase name="UpdateUserFacebookJob with no friends should not create a facebook friends list" time="1.330409672">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UpdateUserFacebookJob" tests="0" time="0.00020724" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UrbanAirship UrbanAirship.register_device" tests="2" time="1.325729218" failures="0" errors="0" skipped="0">
  <testcase name="UrbanAirship UrbanAirship.register_device should raise an error if attempting to register unsupported device type" time="0.372217855">
  </testcase>
  <testcase name="UrbanAirship UrbanAirship.register_device should not raise an error if attempting to register supported device type" time="0.953069079">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UrbanAirship" tests="0" time="0.000211317" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserBackgroundCheck when determining to run a background check on user #should_run_resident_screening" tests="3" time="5.399945793" failures="0" errors="0" skipped="0">
  <testcase name="UserBackgroundCheck when determining to run a background check on user #should_run_resident_screening returns true when no completed records are present" time="1.808523454">
  </testcase>
  <testcase name="UserBackgroundCheck when determining to run a background check on user #should_run_resident_screening returns true when time between reports is more than 12 months" time="2.850030201">
  </testcase>
  <testcase name="UserBackgroundCheck when determining to run a background check on user #should_run_resident_screening returns false when time between reports is less than 12 months" time="0.74089763">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserBackgroundCheck when determining to run a background check on user" tests="0" time="0.000155125" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserBackgroundCheck when running background check on user #run_resident_screening_background_check when adding offline verification dashboard alert" tests="3" time="9.508831684" failures="0" errors="0" skipped="0">
  <testcase name="UserBackgroundCheck when running background check on user #run_resident_screening_background_check when adding offline verification dashboard alert adds dashboard alert when not jumio verified and alert doesn't exist" time="4.335096002">
  </testcase>
  <testcase name="UserBackgroundCheck when running background check on user #run_resident_screening_background_check when adding offline verification dashboard alert doesn't add dashboard alert if jumio verified already" time="4.291339793">
  </testcase>
  <testcase name="UserBackgroundCheck when running background check on user #run_resident_screening_background_check when adding offline verification dashboard alert doesn't add dashboard alert if alert exists already" time="0.881844078">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserBackgroundCheck when running background check on user #run_resident_screening_background_check when checking if background check should be reviewed" tests="2" time="1.674300561" failures="0" errors="0" skipped="0">
  <testcase name="UserBackgroundCheck when running background check on user #run_resident_screening_background_check when checking if background check should be reviewed enqueues when background check is not approved" time="0.881356906">
  </testcase>
  <testcase name="UserBackgroundCheck when running background check on user #run_resident_screening_background_check when checking if background check should be reviewed does not enqueue when background check is approved" time="0.792447197">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserBackgroundCheck when running background check on user #run_resident_screening_background_check" tests="0" time="0.000148515" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserBackgroundCheck when running background check on user" tests="0" time="0.000165725" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserBackgroundCheck" tests="0" time="0.000238762" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#can_send_profile_messages?" tests="4" time="13.383085337" failures="0" errors="0" skipped="0">
  <testcase name="User#can_send_profile_messages? should be false with inactive and unreviews listings" time="3.662941459">
  </testcase>
  <testcase name="User#can_send_profile_messages? should be false with just good review" time="3.053376537">
  </testcase>
  <testcase name="User#can_send_profile_messages? should be false with just active listing" time="3.806559006">
  </testcase>
  <testcase name="User#can_send_profile_messages? should be true with good review and active listing" time="2.859477998">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#claimable?" tests="22" time="17.895573473" failures="0" errors="0" skipped="0">
  <testcase name="User#claimable? should return true if the user was generated" time="0.653703251">
  </testcase>
  <testcase name="User#claimable? should return false if the user has a non-generated first name" time="0.624235849">
  </testcase>
  <testcase name="User#claimable? should return false if the user has a non-generated last name" time="0.833062158">
  </testcase>
  <testcase name="User#claimable? should return false if the user has accepted some version of the TOS" time="0.645245828">
  </testcase>
  <testcase name="User#claimable? should return false if the user has a birthdate" time="0.607492217">
  </testcase>
  <testcase name="User#claimable? should return false if the user has a Facebook ID" time="1.555428535">
  </testcase>
  <testcase name="User#claimable? should return false if the user has a hometown" time="0.640834539">
  </testcase>
  <testcase name="User#claimable? should return false if the user has an about section" time="0.621346321">
  </testcase>
  <testcase name="User#claimable? should return false if the user has a current_city" time="0.628373938">
  </testcase>
  <testcase name="User#claimable? should return false if the user has a phone number" time="0.630742946">
  </testcase>
  <testcase name="User#claimable? should return false if the user has a profile picture" time="0.709169639">
  </testcase>
  <testcase name="User#claimable? should return false if the user has an available hosting" time="0.780520032">
  </testcase>
  <testcase name="User#claimable? should return false if the user has tax attributions" time="0.631125578">
  </testcase>
  <testcase name="User#claimable? should return false if the user has a reservation as a guest" time="1.193612458">
  </testcase>
  <testcase name="User#claimable? should return false if the user has a reservation as a host" time="1.464725124">
  </testcase>
  <testcase name="User#claimable? should return false if the user has linked a twitter account" time="0.67116602">
  </testcase>
  <testcase name="User#claimable? should return false if the user has linked oauth ID" time="1.247987866">
  </testcase>
  <testcase name="User#claimable? should return false if the user has a thread" time="1.142455003">
  </testcase>
  <testcase name="User#claimable? should return false if the user has a payout info" time="0.673760667">
  </testcase>
  <testcase name="User#claimable? should return false if the user has a payment instrument" time="0.671792516">
  </testcase>
  <testcase name="User#claimable? should return false if the user has a line item" time="0.621646101">
  </testcase>
  <testcase name="User#claimable? should return false if the user has associate info" time="0.644101833">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#confirm_email" tests="1" time="2.07682331" failures="0" errors="0" skipped="0">
  <testcase name="User#confirm_email updates email_confirmed and last_action_at" time="2.076419837">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#deactivated_listings_sorted_by_impressions_count" tests="1" time="1.428403412" failures="0" errors="0" skipped="0">
  <testcase name="User#deactivated_listings_sorted_by_impressions_count should return the list correctly sorted" time="1.428049168">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#describe_time_zone" tests="4" time="3.209708651" failures="0" errors="0" skipped="0">
  <testcase name="User#describe_time_zone should determine time zone for France is 'Paris'" time="0.782855479">
  </testcase>
  <testcase name="User#describe_time_zone should determine time zone for a US number with area code 415 is Pacific Time (US &amp; Canada)" time="0.856671712">
  </testcase>
  <testcase name="User#describe_time_zone should be nil if country code is no help" time="0.785248441">
  </testcase>
  <testcase name="User#describe_time_zone should be Eastern Time (US &amp; Canada) for USian with no phone number" time="0.784142445">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User determine_vat_country guest without payoument_instrument" tests="1" time="0.962628899" failures="0" errors="0" skipped="0">
  <testcase name="User determine_vat_country guest without payoument_instrument should get country from user_profile_info" time="0.962270188">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User determine_vat_country guest with payoument_instrument" tests="1" time="0.793103878" failures="0" errors="0" skipped="0">
  <testcase name="User determine_vat_country guest with payoument_instrument should get country from payout_info over user_profile_info" time="0.792659334">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User determine_vat_country guest" tests="0" time="0.000208392" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User determine_vat_country host without payout_info" tests="1" time="1.435327288" failures="0" errors="0" skipped="0">
  <testcase name="User determine_vat_country host without payout_info should get country from user_profile_info" time="1.434886827">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User determine_vat_country host with payout_info" tests="2" time="1.740131751" failures="0" errors="0" skipped="0">
  <testcase name="User determine_vat_country host with payout_info should get country from payout_info over user_profile_info" time="0.839836773">
  </testcase>
  <testcase name="User determine_vat_country host with payout_info should correct country codes for sub regions" time="0.899777149">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User determine_vat_country host" tests="0" time="0.000177998" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User determine_vat_country" tests="0" time="0.000206505" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#disputable_reservations association" tests="3" time="14.649549262" failures="0" errors="0" skipped="0">
  <testcase name="User#disputable_reservations association should only include reservations for which the user is either a guest or a host" time="3.67897278">
  </testcase>
  <testcase name="User#disputable_reservations association should only include reservations for which the status is considered disputable" time="8.815243596">
  </testcase>
  <testcase name="User#disputable_reservations association should only include reservations within the last 30 days" time="2.154750796">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#experienced_guest?" tests="3" time="5.321203342" failures="0" errors="0" skipped="0">
  <testcase name="User#experienced_guest? should return false for users with &lt; 3 positive reviews" time="1.724656794">
  </testcase>
  <testcase name="User#experienced_guest? should return false for reviews with rating=3 and recommend=false" time="2.092909844">
  </testcase>
  <testcase name="User#experienced_guest? should return true for users with &gt;= 3 positive reviews" time="1.502841473">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User fake_delete!" tests="4" time="8.384764195" failures="0" errors="0" skipped="0">
  <testcase name="User fake_delete! should cancel accepted reservations if host" time="2.157626703">
  </testcase>
  <testcase name="User fake_delete! should decline pending reservations if host" time="2.898709037">
  </testcase>
  <testcase name="User fake_delete! should cancel accepted or pending reservations if guest" time="1.89144268">
  </testcase>
  <testcase name="User fake_delete! should cancel checkpointed reservations if guest" time="1.436257042">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User format_name" tests="5" time="2.110234134" failures="0" errors="0" skipped="0">
  <testcase name="User format_name should capitalize the first letter of a lower-case name" time="0.450558008">
  </testcase>
  <testcase name="User format_name should not lower-case the rest of the name if there is a capital in the middle (i.e. MacRae)" time="0.42624201">
  </testcase>
  <testcase name="User format_name should lower-case the rest of the name if the whole name is caps" time="0.403992812">
  </testcase>
  <testcase name="User format_name should be compatible with mb chars" time="0.405356711">
  </testcase>
  <testcase name="User format_name should be compatible with mb chars without encoding" time="0.423170311">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#can_be_autoghosted? when dealing with a ghosted user" tests="1" time="0.724212698" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview#can_be_autoghosted? when dealing with a ghosted user returns true for a user with a primary ghosting already" time="0.723800099">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#can_be_autoghosted? when dealing with a guest" tests="2" time="3.010488428" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview#can_be_autoghosted? when dealing with a guest returns true for guest with upcoming accepted reservation" time="1.789049931">
  </testcase>
  <testcase name="UserFraudReview#can_be_autoghosted? when dealing with a guest returns false for guest without upcoming accepted reservation" time="1.220909211">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#can_be_autoghosted? when dealing with a host" tests="2" time="2.616097501" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview#can_be_autoghosted? when dealing with a host returns true for host with accepted reservation" time="1.405956134">
  </testcase>
  <testcase name="UserFraudReview#can_be_autoghosted? when dealing with a host returns false for host without accepted reservation" time="1.209743879">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#can_be_autoghosted?" tests="0" time="0.000213866" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview Checkpointed flags" tests="4" time="3.021214647" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview Checkpointed flags for reservations should handle addition and subtraction" time="0.774554711">
  </testcase>
  <testcase name="UserFraudReview Checkpointed flags for reservations should handle addition and subtraction with caching" time="0.745000269">
  </testcase>
  <testcase name="UserFraudReview Checkpointed flags for all actions should handle addition and subtraction" time="0.759061574">
  </testcase>
  <testcase name="UserFraudReview Checkpointed flags for all actions should handle addition and subtraction with caching" time="0.74179419">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#get_checkpoint_response_message" tests="3" time="1.648190973" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview#get_checkpoint_response_message returns the correct message if the verification was successful" time="0.532402541">
  </testcase>
  <testcase name="UserFraudReview#get_checkpoint_response_message returns the correct message if the verification failed with no alternative" time="0.560606993">
  </testcase>
  <testcase name="UserFraudReview#get_checkpoint_response_message returns the correct message if the verification failed with an alternative" time="0.554528023">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview ghost_by_country" tests="5" time="3.833799438" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview ghost_by_country should add ghost sign-ups from restricted countries" time="0.79406332">
  </testcase>
  <testcase name="UserFraudReview ghost_by_country should add an admin flag for sign-ups from watchlist countries" time="0.773248402">
  </testcase>
  <testcase name="UserFraudReview ghost_by_country should add an admin flag for IPs from Nigeria after sign-up" time="0.747769095">
  </testcase>
  <testcase name="UserFraudReview ghost_by_country should add not add admin flag for sign-ups from watchlist countries twice" time="0.798286182">
  </testcase>
  <testcase name="UserFraudReview ghost_by_country should not add an admin flag for sign-ups from watchlist countries if user is verified" time="0.719563318">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview.ghost_delete_and_mass_email" tests="2" time="2.432368121" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview.ghost_delete_and_mass_email fake deletes user" time="1.237821129">
  </testcase>
  <testcase name="UserFraudReview.ghost_delete_and_mass_email ghosts the user with given reason and mass emails users contacted by ghost" time="1.194132274">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#id_verified? with Bouncer enabled" tests="2" time="1.137430211" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview#id_verified? with Bouncer enabled calls the Bouncer service" time="0.580120867">
  </testcase>
  <testcase name="UserFraudReview#id_verified? with Bouncer enabled returns the result of calling Bouncer" time="0.556860933">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#id_verified?" tests="0" time="0.000181957" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#jumio_verified?" tests="4" time="3.605775039" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview#jumio_verified? should consider a user awaiting callback verified" time="0.754522533">
  </testcase>
  <testcase name="UserFraudReview#jumio_verified? should consider a user with a sucessful callback verified" time="0.750862553">
  </testcase>
  <testcase name="UserFraudReview#jumio_verified? should consider a user with an unsupported country verified" time="0.777879376">
  </testcase>
  <testcase name="UserFraudReview#jumio_verified? should consider a user with an unsupported id unverified" time="1.321736166">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#kba_verified?" tests="4" time="2.023056341" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview#kba_verified? counts idology as kba" time="0.51247428">
  </testcase>
  <testcase name="UserFraudReview#kba_verified? counts rsa as kba" time="0.503450874">
  </testcase>
  <testcase name="UserFraudReview#kba_verified? counts gdc as kba" time="0.506983836">
  </testcase>
  <testcase name="UserFraudReview#kba_verified? counts experian as kba" time="0.499467137">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#manual_offline_verify!" tests="1" time="0.658496598" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview#manual_offline_verify! calls the Bouncer service" time="0.658186287">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#manual_verify!" tests="1" time="0.684440888" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview#manual_verify! calls the Bouncer service" time="0.684122747">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#remove_verification! with a KBA method :experian" tests="1" time="0.679620642" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview#remove_verification! with a KBA method :experian marks the KbaResult as removed" time="0.679257574">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#remove_verification! with a KBA method :gdc" tests="1" time="0.688974823" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview#remove_verification! with a KBA method :gdc marks the KbaResult as removed" time="0.688654727">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#remove_verification! with a KBA method :idology" tests="1" time="0.68421506" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview#remove_verification! with a KBA method :idology marks the KbaResult as removed" time="0.683864614">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#remove_verification! with a KBA method :rsa" tests="1" time="0.653910628" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview#remove_verification! with a KBA method :rsa marks the KbaResult as removed" time="0.653075438">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#remove_verification! with a KBA method" tests="0" time="0.000181729" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#remove_verification! with the Bouncer service" tests="1" time="0.637392723" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview#remove_verification! with the Bouncer service removes the verification" time="0.63702576">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview#remove_verification!" tests="0" time="0.000181561" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview user jumio callbacks" tests="2" time="2.037037155" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview user jumio callbacks #jumio_recent_denied_status should be correct for a denied fraud user" time="0.757418282">
  </testcase>
  <testcase name="UserFraudReview user jumio callbacks #jumio_recent_denied_status should be correct for a denied not readable id user" time="1.279115845">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview User Verifications" tests="6" time="5.983659138" failures="0" errors="0" skipped="0">
  <testcase name="UserFraudReview User Verifications should offline verify someone who completed KBA" time="0.708763088">
  </testcase>
  <testcase name="UserFraudReview User Verifications should offline verify someone who completed Jumio" time="0.697052472">
  </testcase>
  <testcase name="UserFraudReview User Verifications should not offline verify someone who had their jumio verification removed" time="0.751457201">
  </testcase>
  <testcase name="UserFraudReview User Verifications should verify someone is both online and offline verified" time="1.334152824">
  </testcase>
  <testcase name="UserFraudReview User Verifications should not verify someone who hasn't completed any verifications" time="1.374847879">
  </testcase>
  <testcase name="UserFraudReview User Verifications should delete verification" time="1.116433281">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserFraudReview" tests="0" time="0.000230108" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User.friend_recommendations call" tests="1" time="2.042411586" failures="0" errors="0" skipped="0">
  <testcase name="User.friend_recommendations call does display ghosts" time="2.041940131">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User.friend_recommendations for_display call" tests="1" time="2.165375244" failures="0" errors="0" skipped="0">
  <testcase name="User.friend_recommendations for_display call does not display ghosts" time="2.165002493">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User.friend_recommendations update_friend_count" tests="2" time="5.194422286" failures="0" errors="0" skipped="0">
  <testcase name="User.friend_recommendations update_friend_count includes all non-ghost users in count" time="3.153996832">
  </testcase>
  <testcase name="User.friend_recommendations update_friend_count does not include ghosts in the count" time="2.039928299">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User.friend_recommendations" tests="0" time="0.000209126" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User generated user signups" tests="2" time="1.430397553" failures="0" errors="0" skipped="0">
  <testcase name="User generated user signups should signup users through the iphone_regular flow" time="0.756270969">
  </testcase>
  <testcase name="User generated user signups should signup through the gumtree_email flow, generating a password for the user" time="0.673616779">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User.get_active_guest_to_host_offer" tests="3" time="2.780571673" failures="0" errors="0" skipped="0">
  <testcase name="User.get_active_guest_to_host_offer returns a guest to host offer if one exists" time="0.864626783">
  </testcase>
  <testcase name="User.get_active_guest_to_host_offer does not return a hidden guest to host offer" time="0.77860658">
  </testcase>
  <testcase name="User.get_active_guest_to_host_offer hides and does not return expired guest to offers" time="1.136693306">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User get_vat_rate host not vat verified" tests="2" time="1.356071959" failures="0" errors="0" skipped="0">
  <testcase name="User get_vat_rate host not vat verified should return VAT rate for" time="0.792748701">
  </testcase>
  <testcase name="User get_vat_rate host not vat verified should return VAT rate for" time="0.562746565">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User get_vat_rate host" tests="1" time="0.940013691" failures="0" errors="0" skipped="0">
  <testcase name="User get_vat_rate host should return 0 vat rate for a vat verified user" time="0.939715237">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User get_vat_rate" tests="0" time="0.000201188" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User has_all_verifications?" tests="5" time="4.376038011" failures="0" errors="0" skipped="0">
  <testcase name="User has_all_verifications? should be false if user has no verifications" time="0.81140537">
  </testcase>
  <testcase name="User has_all_verifications? should be false if user has only some verifications" time="0.810716641">
  </testcase>
  <testcase name="User has_all_verifications? should be true if user has all verifications" time="0.801321693">
  </testcase>
  <testcase name="User has_all_verifications? should be true if has specified verifications" time="1.132543533">
  </testcase>
  <testcase name="User has_all_verifications? should be false if doesn't have specified verifications" time="0.81919404">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User has_received_inquiries?" tests="6" time="11.424800629" failures="0" errors="0" skipped="0">
  <testcase name="User has_received_inquiries? should return false for a new user" time="0.816130432">
  </testcase>
  <testcase name="User has_received_inquiries? should return true if the user has a pending booking request for one of their listings" time="1.970941098">
  </testcase>
  <testcase name="User has_received_inquiries? should return true if the user has an accepted booking request for one of their listings" time="1.393072047">
  </testcase>
  <testcase name="User has_received_inquiries? should return false if the user has a new booking request for one of their listings" time="1.307826328">
  </testcase>
  <testcase name="User has_received_inquiries? should return true if the user has an inquiry post for one of their listings" time="2.985421615">
  </testcase>
  <testcase name="User has_received_inquiries? should return true if the user has a Special Offer or Preapproval for one of their listings" time="2.950433139">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User has_role?" tests="3" time="1.673838646" failures="0" errors="0" skipped="0">
  <testcase name="User has_role? should support Symbol argument" time="0.560915944">
  </testcase>
  <testcase name="User has_role? should support String argument" time="0.571322564">
  </testcase>
  <testcase name="User has_role? should work in conjunction with Trebuchet :roles strategy" time="0.540945104">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User has_sent_message?" tests="2" time="2.128290559" failures="0" errors="0" skipped="0">
  <testcase name="User has_sent_message? should be false for a user who has sent no messages" time="0.793248069">
  </testcase>
  <testcase name="User has_sent_message? should be true for a user who has sent at least one message" time="1.334570375">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User hosting friends of friends" tests="1" time="3.767554708" failures="0" errors="0" skipped="0">
  <testcase name="User hosting friends of friends should return the correct number of host friends of friends" time="3.767155738">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#host_metrics" tests="10" time="8.863796768" failures="0" errors="0" skipped="0">
  <testcase name="User#host_metrics should determine response time from the value in dyson (hs experiment off)" time="0.758005064">
  </testcase>
  <testcase name="User#host_metrics should calculate response rate from data in airmaster (hs experiment off)" time="0.770471483">
  </testcase>
  <testcase name="User#host_metrics should calculate acceptance rate from data in airmaster (hs experient off)" time="0.759735855">
  </testcase>
  <testcase name="User#host_metrics should determine response time from host metrics (hs experiment on)" time="1.139393704">
  </testcase>
  <testcase name="User#host_metrics should determine response rate from host metrics (hs experiment on)" time="0.821952026">
  </testcase>
  <testcase name="User#host_metrics should determine acceptance rate from host metrics (hs experiment on)" time="1.40576145">
  </testcase>
  <testcase name="User#host_metrics should retrieve metrics from the host standards service interface" time="0.807741003">
  </testcase>
  <testcase name="User#host_metrics should return no metrics when the service client raises an exception" time="0.802564876">
  </testcase>
  <testcase name="User#host_metrics should increment the statsd fetch count for each fetch to the service" time="0.794574229">
  </testcase>
  <testcase name="User#host_metrics should increment the statsd error count when requests to the service fail" time="0.802203838">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#incidents_as_guest association" tests="1" time="3.636735546" failures="0" errors="0" skipped="0">
  <testcase name="User#incidents_as_guest association should only include incidents in which the user was a guest" time="3.63635789">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#is_blocked_by?" tests="4" time="0.00082944" failures="0" errors="0" skipped="4">
  <testcase name="User#is_blocked_by? should be false for unrelated user (PENDING)" time="0.0001675">
    <skipped/>
  </testcase>
  <testcase name="User#is_blocked_by? should be false for nil user (PENDING)" time="9.0797e-05">
    <skipped/>
  </testcase>
  <testcase name="User#is_blocked_by? should be true for blocking user (PENDING)" time="8.3718e-05">
    <skipped/>
  </testcase>
  <testcase name="User#is_blocked_by? should be false on blocking user (PENDING)" time="7.547e-05">
    <skipped/>
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#is_established_host?" tests="3" time="8.391757882" failures="0" errors="0" skipped="0">
  <testcase name="User#is_established_host? should be false with bad rating and when not recommended" time="3.414980956">
  </testcase>
  <testcase name="User#is_established_host? should be true with good rating" time="2.468578582">
  </testcase>
  <testcase name="User#is_established_host? should be true when recommended" time="2.507574638">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#is_over_messaging_limit?" tests="2" time="14.51772111" failures="0" errors="0" skipped="0">
  <testcase name="User#is_over_messaging_limit? should be false if a user has not sent more than `limit` messages in 24 hours" time="8.656107186">
  </testcase>
  <testcase name="User#is_over_messaging_limit? should be true if a user has sent more than `limit` messages in 24 hours" time="5.8611293">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User mass-assignment protection" tests="5" time="8.465895179" failures="0" errors="0" skipped="0">
  <testcase name="User mass-assignment protection should protect against the most basic attribute setting" time="0.818300832">
  </testcase>
  <testcase name="User mass-assignment protection should protect against psuedo-attributes from has_many and has_one associations" time="4.410574935">
  </testcase>
  <testcase name="User mass-assignment protection should allow attributes marked as attr_accessible to be mass assigned" time="0.878512559">
  </testcase>
  <testcase name="User mass-assignment protection should mass assign psuedo-attributes that are marked as attr_accessible" time="1.52120612">
  </testcase>
  <testcase name="User mass-assignment protection should mass assign attributes defined in the :accessible instance variable" time="0.836458248">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#needs_payout_info?" tests="3" time="3.35786577" failures="0" errors="0" skipped="0">
  <testcase name="User#needs_payout_info? returns true if the user has an active listing but no payout infos" time="0.948649037">
  </testcase>
  <testcase name="User#needs_payout_info? returns true if the user has an active listing and no active payout infos" time="1.357048856">
  </testcase>
  <testcase name="User#needs_payout_info? returns false if the user has an active listing and payout infos" time="1.051599401">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserOauthKey basic key functionality" tests="5" time="4.689097648" failures="0" errors="0" skipped="0">
  <testcase name="UserOauthKey basic key functionality should return an undeleted key" time="0.847570155">
  </testcase>
  <testcase name="UserOauthKey basic key functionality should return an unexpired key" time="0.779445679">
  </testcase>
  <testcase name="UserOauthKey basic key functionality should return an active key" time="0.798772935">
  </testcase>
  <testcase name="UserOauthKey basic key functionality should not return undeleted key if deleted" time="0.827892909">
  </testcase>
  <testcase name="UserOauthKey basic key functionality should mark previous key as deleted when saving new key" time="1.434590107">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserOauthKey Facebook keys" tests="1" time="0.860355083" failures="0" errors="0" skipped="0">
  <testcase name="UserOauthKey Facebook keys should maintain a single active token" time="0.859933726">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserOauthKey" tests="0" time="0.000237291" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserOffer hidden" tests="3" time="3.272117367" failures="0" errors="0" skipped="0">
  <testcase name="UserOffer hidden is hidden after offer expires" time="1.188280323">
  </testcase>
  <testcase name="UserOffer hidden is visible when accepted even when expired" time="1.308249648">
  </testcase>
  <testcase name="UserOffer hidden is visible when active" time="0.774866403">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserOffer" tests="0" time="0.000244648" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserOpenGraphQueue adding and popping open graph notifications" tests="1" time="0.764259932" failures="0" errors="0" skipped="0">
  <testcase name="UserOpenGraphQueue adding and popping open graph notifications should work" time="0.763619398">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserOpenGraphQueue#open_graph_queue" tests="2" time="1.550115824" failures="0" errors="0" skipped="0">
  <testcase name="UserOpenGraphQueue#open_graph_queue should return an empty array when open_graph_queue_string is an empty string" time="0.514638469">
  </testcase>
  <testcase name="UserOpenGraphQueue#open_graph_queue should return a Ruby array when open_graph_queue_string is a JSON array" time="1.035071195">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserOpenGraphQueue" tests="0" time="0.000278759" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User otp" tests="3" time="3.760241881" failures="0" errors="0" skipped="0">
  <testcase name="User otp should only require two-factor codes when enabled" time="0.867479284">
  </testcase>
  <testcase name="User otp should accept valid two-factor codes" time="1.933872585">
  </testcase>
  <testcase name="User otp should reject codes outside the drift period" time="0.958275236">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User password" tests="3" time="1.626974577" failures="0" errors="0" skipped="0">
  <testcase name="User password should accept password hashes generated" time="0.631096335">
  </testcase>
  <testcase name="User password should reject invalid passwords" time="0.629958536">
  </testcase>
  <testcase name="User password should accept legacy password hashes" time="0.365336311">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#populate_from_facebook! when the user was generated" tests="1" time="0.900517135" failures="0" errors="0" skipped="0">
  <testcase name="User#populate_from_facebook! when the user was generated should populate the generated user's name from Facebook, but not the email" time="0.900166043">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#populate_from_facebook! when the user was not generated" tests="1" time="0.987304112" failures="0" errors="0" skipped="0">
  <testcase name="User#populate_from_facebook! when the user was not generated should not populate the generated user's name from Facebook" time="0.986920803">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#populate_from_facebook!" tests="0" time="0.00026013" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#positively_reviewed?" tests="9" time="33.102942857" failures="0" errors="0" skipped="0">
  <testcase name="User#positively_reviewed? should return true if there are more reviews rated &gt;=3 than =1 or =2" time="3.592813469">
  </testcase>
  <testcase name="User#positively_reviewed? should return false if there are equal postive and negative ratings" time="1.748365224">
  </testcase>
  <testcase name="User#positively_reviewed? should return false if no ratings" time="0.756773569">
  </testcase>
  <testcase name="User#positively_reviewed? should return true if there are more recommended reviews than un-recommended reviews" time="3.023953655">
  </testcase>
  <testcase name="User#positively_reviewed? should return true if there are more recommended reviews than un-recommended reviews, and there are reviews with nil recommended" time="5.320476073">
  </testcase>
  <testcase name="User#positively_reviewed? should return false if there are equal recommended reviews and un-recommended reviews" time="3.311617981">
  </testcase>
  <testcase name="User#positively_reviewed? should return false if there are less recommended reviews than un-recommended reviews" time="4.087418354">
  </testcase>
  <testcase name="User#positively_reviewed? should return true if there are more positively-rated or recommended reviews than not" time="5.330581187">
  </testcase>
  <testcase name="User#positively_reviewed? should return false if there are less positively-rated or recommended reviews than not" time="5.929648237">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserPreference change_time_zone_for_user" tests="2" time="1.712632872" failures="0" errors="0" skipped="0">
  <testcase name="UserPreference change_time_zone_for_user should return true if successful" time="0.754548469">
  </testcase>
  <testcase name="UserPreference change_time_zone_for_user should notify airbrake and return false if validation failed" time="0.957413103">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserPreference validation" tests="1" time="0.382604602" failures="0" errors="0" skipped="0">
  <testcase name="UserPreference validation should validate time zones" time="0.382271168">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserPreference" tests="0" time="0.000253884" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserProfileInfo current_city_component" tests="5" time="2.194541029" failures="0" errors="0" skipped="0">
  <testcase name="UserProfileInfo current_city_component should work for retrieving country" time="0.403829071">
  </testcase>
  <testcase name="UserProfileInfo current_city_component should work for retrieving state" time="0.375738809">
  </testcase>
  <testcase name="UserProfileInfo current_city_component should work for retrieving city" time="0.40718575">
  </testcase>
  <testcase name="UserProfileInfo current_city_component should return nil if geocoding doesn't have specified component" time="0.373857613">
  </testcase>
  <testcase name="UserProfileInfo current_city_component should return nil for city if geocoding doesn't have city" time="0.501472692">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User profile info" tests="1" time="0.749677639" failures="0" errors="0" skipped="0">
  <testcase name="User profile info should have a profile info" time="0.749312714">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserProfileInfo" tests="3" time="1.25704324" failures="0" errors="0" skipped="0">
  <testcase name="UserProfileInfo should save a new object" time="0.426364593">
  </testcase>
  <testcase name="UserProfileInfo should save a new object with dyson attribute" time="0.423650166">
  </testcase>
  <testcase name="UserProfileInfo should save a new object with nil dyson attribute" time="0.406431273">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#profile_picture" tests="3" time="5.408139537" failures="0" errors="0" skipped="0">
  <testcase name="User#profile_picture should return correct profile picture" time="1.261115174">
  </testcase>
  <testcase name="User#profile_picture should include correct profile picture" time="1.675941842">
  </testcase>
  <testcase name="User#profile_picture should include correct profile picture when called from association" time="2.470543316">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserProfilePresenter country" tests="2" time="1.447646941" failures="0" errors="0" skipped="0">
  <testcase name="UserProfilePresenter country should return the country if it's set in the user" time="0.719615744">
  </testcase>
  <testcase name="UserProfilePresenter country should return the country if it's set in the profile info" time="0.727625085">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserProfilePresenter profile video" tests="2" time="2.899048418" failures="0" errors="0" skipped="0">
  <testcase name="UserProfilePresenter profile video normal users should not see a verification only video" time="1.481580124">
  </testcase>
  <testcase name="UserProfilePresenter profile video admins should be able to see a verification only video" time="1.408870098">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserProfilePresenter" tests="0" time="0.000204651" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#profile_underpopulated?" tests="3" time="2.32857174" failures="0" errors="0" skipped="0">
  <testcase name="User#profile_underpopulated? should be false if a profile pic and an about is present" time="0.77160277">
  </testcase>
  <testcase name="User#profile_underpopulated? should be true if a profile pic is present but about is blank" time="0.781727523">
  </testcase>
  <testcase name="User#profile_underpopulated? should be true if about is present but profile pic is missing" time="0.77467095">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserRealName" tests="6" time="5.915591837" failures="0" errors="0" skipped="0">
  <testcase name="UserRealName should store the name on name change" time="0.861040962">
  </testcase>
  <testcase name="UserRealName should not lock a name that is too short" time="0.77491362">
  </testcase>
  <testcase name="UserRealName should not lock a name when that user's name is already locked" time="1.142090487">
  </testcase>
  <testcase name="UserRealName should lock an existing (old) name" time="0.923274312">
  </testcase>
  <testcase name="UserRealName should lock current name" time="0.901699748">
  </testcase>
  <testcase name="UserRealName should return current name" time="1.31151634">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#reservations association" tests="1" time="3.361744218" failures="0" errors="0" skipped="0">
  <testcase name="User#reservations association should only include reservations for which the user is either a guest or a host" time="3.361272583">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User reviews_received" tests="3" time="28.814832806" failures="0" errors="0" skipped="0">
  <testcase name="User reviews_received should return a proper count with no filtering" time="9.885572914">
  </testcase>
  <testcase name="User reviews_received should include only guest reviews when role is specified" time="9.552488784">
  </testcase>
  <testcase name="User reviews_received should exclude reviews from a given hosting when reviewers are guests" time="9.376177884">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#ask_question when the user is logged in" tests="6" time="12.601888581" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#ask_question when the user is logged in should work when passed hosting id, message and dates" time="2.535587879">
  </testcase>
  <testcase name="UsersController#ask_question when the user is logged in should NOT mark single messages with the multi-message template" time="1.991643738">
  </testcase>
  <testcase name="UsersController#ask_question when the user is logged in should fail when missing hosting id" time="2.092725499">
  </testcase>
  <testcase name="UsersController#ask_question when the user is logged in should fail when missing a message" time="1.654359882">
  </testcase>
  <testcase name="UsersController#ask_question when the user is logged in should store 'save message?' checkbox state" time="1.993791993">
  </testcase>
  <testcase name="UsersController#ask_question when the user is logged in should NOT error when missing checkin and checkout dates, if they are in the session" time="2.332806175">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#ask_question when the user is not logged in and is trying to log in with invalid log in credentials" tests="2" time="3.352381525" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#ask_question when the user is not logged in and is trying to log in with invalid log in credentials doesnt send the message" time="1.668746707">
  </testcase>
  <testcase name="UsersController#ask_question when the user is not logged in and is trying to log in with invalid log in credentials returns an error message" time="1.683084009">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#ask_question when the user is not logged in and is trying to log in" tests="1" time="2.167461351" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#ask_question when the user is not logged in and is trying to log in sends the message" time="2.167109839">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#ask_question when the user is not logged in and is trying to sign up with invalid signup credentials with an already registered email" tests="2" time="3.523389332" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#ask_question when the user is not logged in and is trying to sign up with invalid signup credentials with an already registered email returns an error" time="2.016159815">
  </testcase>
  <testcase name="UsersController#ask_question when the user is not logged in and is trying to sign up with invalid signup credentials with an already registered email does not send a message" time="1.506657584">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#ask_question when the user is not logged in and is trying to sign up with invalid signup credentials with missing sign up fields" tests="1" time="1.607305609" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#ask_question when the user is not logged in and is trying to sign up with invalid signup credentials with missing sign up fields returns an error" time="1.606843956">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#ask_question when the user is not logged in and is trying to sign up with invalid signup credentials" tests="0" time="0.000215821" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#ask_question when the user is not logged in and is trying to sign up" tests="2" time="4.394969901" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#ask_question when the user is not logged in and is trying to sign up creates a new user" time="2.331957142">
  </testcase>
  <testcase name="UsersController#ask_question when the user is not logged in and is trying to sign up sends a message" time="2.062544129">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#ask_question when the user is not logged in" tests="0" time="0.000249176" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#ask_question" tests="0" time="0.000209953" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#authenticate" tests="11" time="15.34334636" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#authenticate should redirect to login if missing username, password, or both" time="0.85245402">
  </testcase>
  <testcase name="UsersController#authenticate should create a new facebook user if one doesn't exist, and redirect to the dashboard" time="1.717926147">
  </testcase>
  <testcase name="UsersController#authenticate should redirect to the dashboard if successful, and no redirect params" time="0.951829548">
  </testcase>
  <testcase name="UsersController#authenticate should redirect to the specified page if successful, and redirect params are supplied" time="0.917386948">
  </testcase>
  <testcase name="UsersController#authenticate should redirect to internal.airbnb.com on admin login" time="1.27373996">
  </testcase>
  <testcase name="UsersController#authenticate should not redirect to fr.internal.airbnb.com on French admin login" time="1.299498197">
  </testcase>
  <testcase name="UsersController#authenticate should not redirect to internal.airbnb.com on admin login to airbnb.fr" time="1.265346565">
  </testcase>
  <testcase name="UsersController#authenticate should redirect to localhost.internal.airbnb.com on local admin login" time="1.313779512">
  </testcase>
  <testcase name="UsersController#authenticate should redirect after log-in to arbitrary page on an Airbnb host" time="1.639211974">
  </testcase>
  <testcase name="UsersController#authenticate should not allow redirecting to non-Airbnb host from login page" time="1.215946026">
  </testcase>
  <testcase name="UsersController#authenticate should rate limit logins" time="2.894559569">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#confirm_email with an incorrect code" tests="1" time="1.073938488" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#confirm_email with an incorrect code notifies if an incorrect code was used to confirm" time="1.072990635">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#confirm_email" tests="2" time="3.191116189" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#confirm_email confirms a user's email if given a correct code" time="1.91599112">
  </testcase>
  <testcase name="UsersController#confirm_email notifies if the email is already confirmed" time="1.274613228">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#create via email when the email is already taken by a claimable generated user account" tests="1" time="1.709560847" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#create via email when the email is already taken by a claimable generated user account should replace the existing user's name and other details" time="1.70908813">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#create via email when the email is already taken by a legitimate user account named New User" tests="1" time="1.399685428" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#create via email when the email is already taken by a legitimate user account named New User should not replace the existing user's name" time="1.399289134">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#create via email when the email is already taken by a legitimate user account" tests="2" time="2.657301284" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#create via email when the email is already taken by a legitimate user account should not replace the existing user's name" time="1.140329405">
  </testcase>
  <testcase name="UsersController#create via email when the email is already taken by a legitimate user account returns an error message in the AJAX response" time="1.516276446">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#create via email when the email is already taken" tests="0" time="0.000220831" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#create via email with the remember_me box checked" tests="1" time="1.682598265" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#create via email with the remember_me box checked should set the 'user' and 'pw' cookies" time="1.682199582">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#create via email" tests="1" time="2.029271374" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#create via email should create a user" time="2.028951782">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#create" tests="0" time="0.000190462" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController current_user caching off" tests="1" time="1.24924362" failures="0" errors="0" skipped="0">
  <testcase name="UsersController current_user caching off should handle login normally" time="1.24889891">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController email notification on payout info/email changes to account" tests="3" time="4.961011161" failures="0" errors="0" skipped="0">
  <testcase name="UsersController email notification on payout info/email changes to account should send an email if the user updates their email" time="2.020458665">
  </testcase>
  <testcase name="UsersController email notification on payout info/email changes to account should not send an email the first time a user adds payout info, but send it when a user updates their payout info" time="1.595856314">
  </testcase>
  <testcase name="UsersController email notification on payout info/email changes to account should not send an email when an admin updates another users payout info" time="1.344040077">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#fbconnect_accounts_linked" tests="2" time="1.498971424" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#fbconnect_accounts_linked should redirect to login when not logged in" time="0.701849196">
  </testcase>
  <testcase name="UsersController#fbconnect_accounts_linked should render accounts_linked when logged in" time="0.79657326">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#fbconnect_first_time" tests="1" time="0.740984664" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#fbconnect_first_time should render first_time" time="0.740548058">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#fbconnect_forgot_email" tests="4" time="3.525315403" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#fbconnect_forgot_email should render forgot_email via GET" time="0.720919856">
  </testcase>
  <testcase name="UsersController#fbconnect_forgot_email should render forgot_email via POST with missing email" time="1.226424043">
  </testcase>
  <testcase name="UsersController#fbconnect_forgot_email should render forgot_email via POST with a non-existing email" time="0.772065097">
  </testcase>
  <testcase name="UsersController#fbconnect_forgot_email should render found_email via POST with an existing email" time="0.805116631">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#fbconnect_forgot_password" tests="4" time="3.231288732" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#fbconnect_forgot_password should render forgot_password via GET" time="0.742012684">
  </testcase>
  <testcase name="UsersController#fbconnect_forgot_password should render forgot_password via POST with missing email" time="0.819493333">
  </testcase>
  <testcase name="UsersController#fbconnect_forgot_password should render forgot_password via POST with a non-existing email" time="0.72988198">
  </testcase>
  <testcase name="UsersController#fbconnect_forgot_password should render sign_in_link_accounts via POST with an existing email" time="0.939012302">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#fbconnect_login" tests="2" time="1.769516049" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#fbconnect_login should populate from facebook and render accounts_linked when user is logged in" time="0.939044339">
  </testcase>
  <testcase name="UsersController#fbconnect_login should render first_time if not logged in" time="0.829849389">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#fbconnect_sign_in_link_accounts" tests="2" time="2.061022685" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#fbconnect_sign_in_link_accounts should render sign_in_link_accounts via GET" time="1.255342392">
  </testcase>
  <testcase name="UsersController#fbconnect_sign_in_link_accounts should render sign_in_link_accounts via POST with missing password and/or email" time="0.805154332">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#friends_new" tests="1" time="0.753712803" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#friends_new should deal properly with a nil emails parameter" time="0.753300875">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController ghost stuff" tests="1" time="1.62646179" failures="0" errors="0" skipped="0">
  <testcase name="UsersController ghost stuff should only let admins view payment instruments page" time="1.626037466">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController logout" tests="1" time="1.279238452" failures="0" errors="0" skipped="0">
  <testcase name="UsersController logout should clear the session" time="1.278831555">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#payoneer_account_redirect" tests="2" time="1.905446276" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#payoneer_account_redirect requires the user to be logged in" time="0.739034642">
  </testcase>
  <testcase name="UsersController#payoneer_account_redirect doesn't allow a non-admin to redirect as another user" time="1.1658622">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#payoneer_signup_complete" tests="3" time="2.620594194" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#payoneer_signup_complete requires the user to be logged in" time="0.757192448">
  </testcase>
  <testcase name="UsersController#payoneer_signup_complete doesn't let a non-admin complete a signup as another user" time="1.092914225">
  </testcase>
  <testcase name="UsersController#payoneer_signup_complete completes the flow without an exception" time="0.769915135">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#payout_delete" tests="4" time="3.428194543" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#payout_delete allows deletion of the first active payout_info" time="0.901534619">
  </testcase>
  <testcase name="UsersController#payout_delete disallows deletion of the default payout info" time="0.887125105">
  </testcase>
  <testcase name="UsersController#payout_delete disallows deletion of the last active payout_info" time="0.819836695">
  </testcase>
  <testcase name="UsersController#payout_delete always allows payout_infos with errors to be deleted" time="0.818784676">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController referral of auto-generated users" tests="3" time="6.448151351" failures="0" errors="0" skipped="0">
  <testcase name="UsersController referral of auto-generated users should do referral post-user-creation bookkeeping in explicit referral case" time="2.415155656">
  </testcase>
  <testcase name="UsersController referral of auto-generated users should raise an error if you try to create a referral for an email that has an auto-generated account" time="1.813867818">
  </testcase>
  <testcase name="UsersController referral of auto-generated users should not register the referral if someone with an auto-generated account signs up via a referral link" time="2.218458863">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController response headers" tests="2" time="2.020907531" failures="0" errors="0" skipped="0">
  <testcase name="UsersController response headers should add an x-frame-options header to a user show" time="0.731390096">
  </testcase>
  <testcase name="UsersController response headers should not add an x-frame-options header to a zendesk_admin_info page" time="1.289011452">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#reviews_summary" tests="8" time="59.952051933" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#reviews_summary fails if no hosting_id or exclude_hosting_id is provided" time="0.777367738">
  </testcase>
  <testcase name="UsersController#reviews_summary returns a single review when it exists" time="4.228215128">
  </testcase>
  <testcase name="UsersController#reviews_summary returns two reviews when they exist" time="8.986583687">
  </testcase>
  <testcase name="UsersController#reviews_summary returns only the 2 most recent reviews when more than 2 exist" time="11.854368918">
  </testcase>
  <testcase name="UsersController#reviews_summary returns reviews for another listing if &quot;exclude_hosting_id&quot; is provided" time="4.816999327">
  </testcase>
  <testcase name="UsersController#reviews_summary excludes reviews from the hosting with ID &quot;exclude_hosting_id&quot;" time="8.213587991">
  </testcase>
  <testcase name="UsersController#reviews_summary returns 2 reviews for other listings if &quot;exclude_hosting_id&quot; is provided" time="8.903917692">
  </testcase>
  <testcase name="UsersController#reviews_summary returns only the 2 most recent reviews for other listings if &quot;exclude_hosting_id&quot; is provided" time="12.169783064">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController stale session handling" tests="5" time="7.684216851" failures="0" errors="0" skipped="0">
  <testcase name="UsersController stale session handling should not clear the session when it hasn't timed out yet" time="1.704524337">
  </testcase>
  <testcase name="UsersController stale session handling should clear the session when it times out" time="1.587735977">
  </testcase>
  <testcase name="UsersController stale session handling should update the last action at timestamp" time="1.200261423">
  </testcase>
  <testcase name="UsersController stale session handling should log users out if the user model is in logged out state" time="1.57129053">
  </testcase>
  <testcase name="UsersController stale session handling should log out admins when their IP changes" time="1.61949711">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController#update" tests="2" time="2.761386291" failures="0" errors="0" skipped="0">
  <testcase name="UsersController#update should complete an update without problems when params[:user_profile_info] is null" time="1.84479233">
  </testcase>
  <testcase name="UsersController#update should complete an update without problems when params[:user] is null" time="0.916092853">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController user logged in normally" tests="3" time="2.903946068" failures="0" errors="0" skipped="1">
  <testcase name="UsersController user logged in normally should be resilient to nil sessions" time="1.455712576">
  </testcase>
  <testcase name="UsersController user logged in normally current_user caching is disabled (PENDING)" time="0.00022548">
    <skipped/>
  </testcase>
  <testcase name="UsersController user logged in normally should clear @current_user when a user is flagged as a ghost" time="1.447516657">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController user logged in with cookies" tests="5" time="5.057580541" failures="0" errors="0" skipped="0">
  <testcase name="UsersController user logged in with cookies normal users should not have an SSL token set" time="0.766476041">
  </testcase>
  <testcase name="UsersController user logged in with cookies admins should have an SSL token set when request is SSL" time="1.243900664">
  </testcase>
  <testcase name="UsersController user logged in with cookies admins should have an SSL token set with different name on localhost.airbnb.com" time="0.90212453">
  </testcase>
  <testcase name="UsersController user logged in with cookies admins should not set an SSL token set when request is non-SSL" time="1.228025639">
  </testcase>
  <testcase name="UsersController user logged in with cookies killing a session should remove admin SSL cookies" time="0.915303796">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController XHR post #ajax_doesnt_speak_english" tests="3" time="3.061995022" failures="0" errors="0" skipped="0">
  <testcase name="UsersController XHR post #ajax_doesnt_speak_english should redirect to login page if user not logged in" time="1.096318381">
  </testcase>
  <testcase name="UsersController XHR post #ajax_doesnt_speak_english should create a memory marking logged in user as not speaking English" time="0.834186349">
  </testcase>
  <testcase name="UsersController XHR post #ajax_doesnt_speak_english should be successful for logged in users" time="1.130864262">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UsersController" tests="0" time="0.000251461" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserScore async score requests" tests="3" time="3.775363431" failures="0" errors="0" skipped="0">
  <testcase name="UserScore async score requests should enqueue a calculation job for this score type" time="1.145420524">
  </testcase>
  <testcase name="UserScore async score requests should not enqueue a job twice" time="1.130638388">
  </testcase>
  <testcase name="UserScore async score requests should not enqueue a calculation job if the value is up to date" time="1.498693269">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserScore#score_calculation" tests="1" time="1.118319317" failures="0" errors="0" skipped="0">
  <testcase name="UserScore#score_calculation raises and error when given an invalid type" time="1.11790153">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserScore score types" tests="1" time="1.118934806" failures="0" errors="0" skipped="0">
  <testcase name="UserScore score types should return valid scores" time="1.118563134">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserScoreSignals" tests="1" time="0.787935804" failures="0" errors="0" skipped="0">
  <testcase name="UserScoreSignals should be created when a score is calculated" time="0.787516952">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserScore sync score requests" tests="2" time="3.284136307" failures="0" errors="0" skipped="0">
  <testcase name="UserScore sync score requests should not enqueue any job" time="2.11972316">
  </testcase>
  <testcase name="UserScore sync score requests should compute a reasonable value" time="1.163892624">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserScore.update_value" tests="3" time="4.429997834" failures="0" errors="0" skipped="0">
  <testcase name="UserScore.update_value raises a ValidationError if user is missing" time="1.868321643">
  </testcase>
  <testcase name="UserScore.update_value raises a ValidationError if type is missing" time="1.28179684">
  </testcase>
  <testcase name="UserScore.update_value calculates a score when user and type are present" time="1.279211366">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserScore" tests="0" time="0.000243659" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User send_mobile_notification" tests="2" time="4.297412476" failures="0" errors="0" skipped="0">
  <testcase name="User send_mobile_notification should create a PushNotification" time="1.670451944">
  </testcase>
  <testcase name="User send_mobile_notification should create a TextMessage" time="2.626496133">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
/home/lt3/airbnb/bundle/gems/activerecord-3.0.20.7/lib/active_record/attribute_methods/read.rb:89: warning: redefining `object_id' may cause serious problems
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#should_send_tickets_to_community_defense?" tests="2" time="2.529940071" failures="0" errors="0" skipped="0">
  <testcase name="User#should_send_tickets_to_community_defense? should flag if user is ghost" time="1.218732292">
  </testcase>
  <testcase name="User#should_send_tickets_to_community_defense? should flag if user has reservation under fraud review" time="1.310709087">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#total_impressions_count" tests="2" time="1.744187229" failures="0" errors="0" skipped="0">
  <testcase name="User#total_impressions_count should return 0 if user has no hostings" time="0.762823591">
  </testcase>
  <testcase name="User#total_impressions_count should correctly sum impressions_count values after impression increments" time="0.98088969">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#update_user_model_from_params :groups" tests="5" time="4.295682415" failures="0" errors="0" skipped="0">
  <testcase name="User#update_user_model_from_params :groups should associate comma-separated groups" time="0.864222272">
  </testcase>
  <testcase name="User#update_user_model_from_params :groups should associate string group ids" time="0.829178019">
  </testcase>
  <testcase name="User#update_user_model_from_params :groups should associate integer group ids" time="0.879944939">
  </testcase>
  <testcase name="User#update_user_model_from_params :groups should remove all groups for empty string" time="0.880411888">
  </testcase>
  <testcase name="User#update_user_model_from_params :groups should do nothing if groups isn't supplied" time="0.841028218">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#update_user_model_from_params :languages" tests="5" time="4.754611252" failures="0" errors="0" skipped="0">
  <testcase name="User#update_user_model_from_params :languages should bitwise-add comma-separated languages" time="0.738454302">
  </testcase>
  <testcase name="User#update_user_model_from_params :languages shouldn't touch languages if it's not comma-separated" time="0.75004493">
  </testcase>
  <testcase name="User#update_user_model_from_params :languages should handle integer language values" time="0.774369373">
  </testcase>
  <testcase name="User#update_user_model_from_params :languages should remove all languages for emptry string" time="1.121132662">
  </testcase>
  <testcase name="User#update_user_model_from_params :languages should do nothing if languages isn't supplied" time="1.369662885">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User user_preference" tests="1" time="1.295054768" failures="0" errors="0" skipped="0">
  <testcase name="User user_preference should exist on creation" time="1.294668505">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserVatInfo" tests="6" time="4.694897185" failures="0" errors="0" skipped="0">
  <testcase name="UserVatInfo should require a user id" time="0.409743285">
  </testcase>
  <testcase name="UserVatInfo should require a valid vat number" time="0.408174107">
  </testcase>
  <testcase name="UserVatInfo should update verify status and number of attempts" time="1.120638725">
  </testcase>
  <testcase name="UserVatInfo should not verify a second user_vat_info" time="0.726597796">
  </testcase>
  <testcase name="UserVatInfo should encrypt and decrypt a vat number and return a correctly formatted vat number" time="1.281881719">
  </testcase>
  <testcase name="UserVatInfo should handle countries where the prefix does not match the country code" time="0.746894882">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#was_ever_active_host? with a deactivated listing" tests="1" time="1.098525266" failures="0" errors="0" skipped="0">
  <testcase name="User#was_ever_active_host? with a deactivated listing returns true" time="1.098128424">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#was_ever_active_host? with an active listing" tests="1" time="0.947151548" failures="0" errors="0" skipped="0">
  <testcase name="User#was_ever_active_host? with an active listing returns true" time="0.946751055">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#was_ever_active_host? with no listings" tests="1" time="0.81781096" failures="0" errors="0" skipped="0">
  <testcase name="User#was_ever_active_host? with no listings returns false" time="0.817397015">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User#was_ever_active_host?" tests="0" time="0.000202293" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User when user confirmed case under leonidas review #has_hidden_payout_info?" tests="2" time="1.824551311" failures="0" errors="0" skipped="0">
  <testcase name="User when user confirmed case under leonidas review #has_hidden_payout_info? has a hidden payout_info" time="0.940112992">
  </testcase>
  <testcase name="User when user confirmed case under leonidas review #has_hidden_payout_info? does not have a hidden payout_info" time="0.883915136">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User when user confirmed case under leonidas review #has_valid_default_payout_info?" tests="2" time="1.797301067" failures="0" errors="0" skipped="0">
  <testcase name="User when user confirmed case under leonidas review #has_valid_default_payout_info? has a non-hidden default payout_info" time="0.889357729">
  </testcase>
  <testcase name="User when user confirmed case under leonidas review #has_valid_default_payout_info? does not have a non-hidden default payout_info" time="0.907429469">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User when user confirmed case under leonidas review" tests="0" time="0.000206322" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User wishlist associations" tests="2" time="1.623326744" failures="0" errors="0" skipped="0">
  <testcase name="User wishlist associations should have a wishlist attribute" time="0.777429154">
  </testcase>
  <testcase name="User wishlist associations should destroy associated wishlists" time="0.845342537">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="User" tests="3" time="2.724743992" failures="0" errors="0" skipped="0">
  <testcase name="User should rate limit certain actions" time="1.496350813">
  </testcase>
  <testcase name="User should return valid RFC822 email address and name" time="0.390156242">
  </testcase>
  <testcase name="User should not throw exception when calling UserProfileInfo methods proxied through UserProfilePresenter" time="0.837595679">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="VatRate" tests="7" time="2.953631194" failures="0" errors="0" skipped="0">
  <testcase name="VatRate corrects Isle of Man (IM) with Great Britain (GB)" time="0.396769951">
  </testcase>
  <testcase name="VatRate corrects Isle of Man (IM) with Great Britain (GB)" time="0.411350433">
  </testcase>
  <testcase name="VatRate returns the proper VAT rate for a country" time="0.40996526">
  </testcase>
  <testcase name="VatRate returns 0 for country not in the database" time="0.433093763">
  </testcase>
  <testcase name="VatRate returns the latest VAT for a country for a given date" time="0.405807717">
  </testcase>
  <testcase name="VatRate raises RecordInvalid when trying to add a rate for a country_code on the same as_of_date" time="0.460694647">
  </testcase>
  <testcase name="VatRate returns 0 when the country is not in VAT_COUNTRIES" time="0.434656912">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="VerificationController jumio_redirect" tests="2" time="1.60447565" failures="0" errors="0" skipped="0">
  <testcase name="VerificationController jumio_redirect should have the proper success response" time="0.833474809">
  </testcase>
  <testcase name="VerificationController jumio_redirect should have the proper fail response" time="0.770523811">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="VerificationController user checkpoint flagged handling" tests="1" time="1.07090308" failures="0" errors="0" skipped="0">
  <testcase name="VerificationController user checkpoint flagged handling should properly load verification for a flagged user" time="1.070463456">
  </testcase>
  <system-out>

  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="VerificationController" tests="0" time="0.000232024" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="VerificationFlowPresenter#needs_basic_profile" tests="2" time="2.141640692" failures="0" errors="0" skipped="0">
  <testcase name="VerificationFlowPresenter#needs_basic_profile always returns false if no_basic_profile_requirement is set" time="1.223537673">
  </testcase>
  <testcase name="VerificationFlowPresenter#needs_basic_profile returns true if required" time="0.917627401">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="VerificationFlowPresenter#needs_confirmed_email?" tests="2" time="1.738536434" failures="0" errors="0" skipped="0">
  <testcase name="VerificationFlowPresenter#needs_confirmed_email? should return true if the user hasn't confirmed their email" time="0.857291315">
  </testcase>
  <testcase name="VerificationFlowPresenter#needs_confirmed_email? should return true if the user has a confirmed email" time="0.880788593">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="VerificationFlowPresenter" tests="0" time="0.000207136" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="VerificationObserver#after_commit" tests="9" time="8.453208456" failures="0" errors="0" skipped="0">
  <testcase name="VerificationObserver#after_commit is notified when a user confirms their email" time="0.830631564">
  </testcase>
  <testcase name="VerificationObserver#after_commit is notified when a user is awaiting callback" time="0.795196641">
  </testcase>
  <testcase name="VerificationObserver#after_commit should be is hen a user jumio verifies" time="0.778739388">
  </testcase>
  <testcase name="VerificationObserver#after_commit should be is hen a user kba verifies" time="1.149125622">
  </testcase>
  <testcase name="VerificationObserver#after_commit should be is hen a user adds facebook" time="0.80825945">
  </testcase>
  <testcase name="VerificationObserver#after_commit should be is hen a profile photo is updated" time="1.235774082">
  </testcase>
  <testcase name="VerificationObserver#after_commit should be is  verified phone number is added" time="0.82654031">
  </testcase>
  <testcase name="VerificationObserver#after_commit should be is hen a user adds an oauth key" time="1.209880141">
  </testcase>
  <testcase name="VerificationObserver#after_commit unfreezes reservations" time="0.817899593">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="VerificationObserver#user_from_model" tests="12" time="11.985756895" failures="0" errors="0" skipped="0">
  <testcase name="VerificationObserver#user_from_model correctly gets the user from a phone number when verified_at changed" time="0.858386854">
  </testcase>
  <testcase name="VerificationObserver#user_from_model returns nil if an irrelevant attribute on the phone number changes" time="0.820979783">
  </testcase>
  <testcase name="VerificationObserver#user_from_model returns the user if a relevant user attribute has changed" time="1.258424375">
  </testcase>
  <testcase name="VerificationObserver#user_from_model returns nil if an irrelevant user attribute changes" time="0.823670139">
  </testcase>
  <testcase name="VerificationObserver#user_from_model correctly gets the user from a JumioResult" time="0.833048725">
  </testcase>
  <testcase name="VerificationObserver#user_from_model correctly gets the user from a JumioResult" time="0.795225659">
  </testcase>
  <testcase name="VerificationObserver#user_from_model correctly gets the user from a KBAResult" time="0.85019807">
  </testcase>
  <testcase name="VerificationObserver#user_from_model correctly gets the user from a Review if it was submitted" time="1.553836192">
  </testcase>
  <testcase name="VerificationObserver#user_from_model returns nil if a review wasn't submitted" time="1.230721462">
  </testcase>
  <testcase name="VerificationObserver#user_from_model returns the correct user if a new user oauth key is added" time="0.845785306">
  </testcase>
  <testcase name="VerificationObserver#user_from_model returns nil if a new user oauth key is updated" time="1.234150659">
  </testcase>
  <testcase name="VerificationObserver#user_from_model the user when a profile pic is added" time="0.879625003">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="VerificationObserver" tests="0" time="0.000233562" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="VerificationRecord should compute derived fields properly" tests="2" time="2.143710822" failures="0" errors="0" skipped="0">
  <testcase name="VerificationRecord should compute derived fields properly for incomplete verification" time="0.890114973">
  </testcase>
  <testcase name="VerificationRecord should compute derived fields properly for complete verification" time="1.252876316">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="VerificationRecord" tests="1" time="0.858953712" failures="0" errors="0" skipped="0">
  <testcase name="VerificationRecord should not store duplicate records" time="0.858564156">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WeekendPrice After setting a weekend price get weekend price" tests="2" time="1.932251398" failures="0" errors="0" skipped="0">
  <testcase name="WeekendPrice After setting a weekend price get weekend price should return the correct weekend price" time="0.797093557">
  </testcase>
  <testcase name="WeekendPrice After setting a weekend price get weekend price should return no weekend price after removal" time="1.134630693">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WeekendPrice After setting a weekend price" tests="0" time="0.00017082" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WeekendPrice" tests="0" time="0.000273695" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Who can see visibility" tests="5" time="9.948833405" failures="0" errors="0" skipped="0">
  <testcase name="Who can see visibility should be available to people who already set visibility but aren't in the restricted set" time="1.152670554">
  </testcase>
  <testcase name="Who can see visibility should be available to people who already set visibility and are in the restricted set" time="3.504088703">
  </testcase>
  <testcase name="Who can see visibility should be available to people who haven't it before but have the trebuchet and aren't part of the restricted set" time="0.779532439">
  </testcase>
  <testcase name="Who can see visibility shouldn't be available to users who have the trebuchet but are part of the restricted set" time="3.817275726">
  </testcase>
  <testcase name="Who can see visibility shouldn't be available to people in the restricted set who haven't set it previously" time="0.694299962">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Wishlist data cleanup absorb" tests="1" time="1.558674897" failures="0" errors="0" skipped="0">
  <testcase name="Wishlist data cleanup absorb should absorb another wish list's listings, then delete it" time="1.558320011">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Wishlist data cleanup dedupe_default_wishlists_for_user" tests="1" time="0.891608946" failures="0" errors="0" skipped="0">
  <testcase name="Wishlist data cleanup dedupe_default_wishlists_for_user should remove dupe default wishlists" time="0.891197255">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Wishlist data cleanup dedupe_listings" tests="2" time="3.805922535" failures="0" errors="0" skipped="0">
  <testcase name="Wishlist data cleanup dedupe_listings destroys extra any dupe" time="2.058309943">
  </testcase>
  <testcase name="Wishlist data cleanup dedupe_listings leaves alone collections without dupes" time="1.747153512">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Wishlist data cleanup dedupe_mobile_starred_listings_for_user" tests="1" time="0.883934535" failures="0" errors="0" skipped="0">
  <testcase name="Wishlist data cleanup dedupe_mobile_starred_listings_for_user should dedupe all mobile_starred_listings wish lists" time="0.883531832">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Wishlist data cleanup" tests="0" time="0.00019358" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Wishlist#mobile_starred_listings_for_user" tests="2" time="2.24330053" failures="0" errors="0" skipped="0">
  <testcase name="Wishlist#mobile_starred_listings_for_user should create if it doesn't exist, with proper rank, private, name attributes" time="1.130847779">
  </testcase>
  <testcase name="Wishlist#mobile_starred_listings_for_user should return the existing one if it already exists" time="1.111987843">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistsController#add_note" tests="3" time="5.786102015" failures="0" errors="0" skipped="0">
  <testcase name="WishlistsController#add_note shouldn't allow logged-out users to add a note to a wishlist" time="2.104590681">
  </testcase>
  <testcase name="WishlistsController#add_note shouldn't allow some random user to add a note to some other user's wishlist" time="2.036083981">
  </testcase>
  <testcase name="WishlistsController#add_note should allow the owner to add a note to their own wishlist" time="1.644304323">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistsController#listing when referred from a Facebook open graph story with a logged-in user" tests="1" time="1.986532612" failures="0" errors="0" skipped="0">
  <testcase name="WishlistsController#listing when referred from a Facebook open graph story with a logged-in user should create a WishlistFacebookReferral event with the correct parameters" time="1.98603985">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistsController#listing when referred from a Facebook open graph story with a logged-out visitor" tests="1" time="1.610595509" failures="0" errors="0" skipped="0">
  <testcase name="WishlistsController#listing when referred from a Facebook open graph story with a logged-out visitor should create a WishlistFacebookReferral event with the correct parameters" time="1.610180036">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistsController#listing when referred from a Facebook open graph story" tests="1" time="1.675252998" failures="0" errors="0" skipped="0">
  <testcase name="WishlistsController#listing when referred from a Facebook open graph story should log a WishlistFacebookReferral event" time="1.674908719">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistsController#listing" tests="2" time="4.038434404" failures="0" errors="0" skipped="0">
  <testcase name="WishlistsController#listing should respond successfully" time="1.744550422">
  </testcase>
  <testcase name="WishlistsController#listing should redirect to homepage if hosting is not active" time="2.293474833">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistsController owner" tests="4" time="6.287947978" failures="0" errors="0" skipped="0">
  <testcase name="WishlistsController owner should be be equal to wishlist owner, and isOwner should be false if logged out" time="1.352694281">
  </testcase>
  <testcase name="WishlistsController owner should be equal to wishlist owner, and isOwner should be false if logged in and viewing someone else's wishlist" time="2.207630146">
  </testcase>
  <testcase name="WishlistsController owner should be equal to wishslist owner, and isOwner should be true if logged in and viewing own wishlist" time="1.374692252">
  </testcase>
  <testcase name="WishlistsController owner should be nil if viewing popular, staff_picks, friends" time="1.35224954">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistsController#show when viewing a private wishlist" tests="2" time="2.998189123" failures="0" errors="0" skipped="0">
  <testcase name="WishlistsController#show when viewing a private wishlist should not allow a logged-out user to view a private wishlist" time="1.367636135">
  </testcase>
  <testcase name="WishlistsController#show when viewing a private wishlist should not allow a non-owner to view a private wishlist" time="1.630100758">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistsController#show" tests="0" time="0.000159306" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistsController#track_page_view when hit by a logged-in user" tests="1" time="1.183025166" failures="0" errors="0" skipped="0">
  <testcase name="WishlistsController#track_page_view when hit by a logged-in user should create a WishlistPageView event with the correct parameters" time="1.182639678">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistsController#track_page_view when hit by a logged-out visitor" tests="3" time="2.390591704" failures="0" errors="0" skipped="0">
  <testcase name="WishlistsController#track_page_view when hit by a logged-out visitor should create a WishlistPageView event with the correct parameters" time="0.790789472">
  </testcase>
  <testcase name="WishlistsController#track_page_view when hit by a logged-out visitor should exclude params with value of 'null'" time="0.793773103">
  </testcase>
  <testcase name="WishlistsController#track_page_view when hit by a logged-out visitor should exclude params with value of '' (the empty string)" time="0.805400461">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistsController#track_page_view" tests="1" time="0.822453293" failures="0" errors="0" skipped="0">
  <testcase name="WishlistsController#track_page_view should log a WishlistPageView event" time="0.822046958">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistsController" tests="0" time="0.000230473" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistTrip dispatch_requests_async" tests="1" time="5.004459221" failures="0" errors="0" skipped="0">
  <testcase name="WishlistTrip dispatch_requests_async should enqueue jobs at the specified delay intervals" time="5.004058484">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistTrip dispatch_requests!" tests="1" time="5.344678663" failures="0" errors="0" skipped="0">
  <testcase name="WishlistTrip dispatch_requests! should dispatch wishlist_requests" time="5.344302811">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="WishlistTrip" tests="0" time="0.000235301" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Wishlist user associations" tests="1" time="0.778056295" failures="0" errors="0" skipped="0">
  <testcase name="Wishlist user associations should have a user attribute" time="0.777698719">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Wishlist User#wishlists_list" tests="2" time="1.53939516" failures="0" errors="0" skipped="0">
  <testcase name="Wishlist User#wishlists_list should populate initial two wishlists if true is passed, and no starred collection, idempotently" time="0.773368904">
  </testcase>
  <testcase name="Wishlist User#wishlists_list should not populate if true is not passed" time="0.765502689">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Wishlist validations" tests="3" time="3.283546073" failures="0" errors="0" skipped="0">
  <testcase name="Wishlist validations should require a user id" time="1.131744417">
  </testcase>
  <testcase name="Wishlist validations should require nonblank name" time="0.779579309">
  </testcase>
  <testcase name="Wishlist validations should reject long names" time="1.371658319">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Wishlist" tests="2" time="1.496201359" failures="0" errors="0" skipped="0">
  <testcase name="Wishlist should be one of many wishlists for a user" time="0.740898706">
  </testcase>
  <testcase name="Wishlist requires presence of name" time="0.75483838">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ZendeskClient create_ticket" tests="3" time="1.282007629" failures="0" errors="0" skipped="0">
  <testcase name="ZendeskClient create_ticket should raise an exception if the request fails" time="0.396531652">
  </testcase>
  <testcase name="ZendeskClient create_ticket should write the ticket id to an Incident if :attach_to_incident flag is used" time="0.444996113">
  </testcase>
  <testcase name="ZendeskClient create_ticket should contain a ticket id if the request succeeds" time="0.43975914">
  </testcase>
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ZendeskClient" tests="0" time="0.000207351" failures="0" errors="0" skipped="0">
  <system-out>
  </system-out>
  <system-err>
  </system-err>
</testsuite>
